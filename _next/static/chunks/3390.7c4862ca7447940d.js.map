{"version":3,"file":"static/chunks/3390.7c4862ca7447940d.js","mappings":"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","sources":["webpack://_N_E/./src/components/common/AddressBookInput/index.tsx","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/TokenAmountInput/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/TokenTransfer/utils.ts","webpack://_N_E/./src/components/tx-flow/flows/TokenTransfer/SpendingLimitRow/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/TokenTransfer/CreateTokenTransfer.tsx","webpack://_N_E/./src/components/tx-flow/flows/TokenTransfer/ReviewTokenTransfer.tsx","webpack://_N_E/./src/hooks/useSpendingLimitGas.ts","webpack://_N_E/./src/components/tx-flow/flows/TokenTransfer/ReviewSpendingLimitTx.tsx","webpack://_N_E/./src/components/tx-flow/flows/TokenTransfer/ReviewTokenTx.tsx","webpack://_N_E/./src/components/tx-flow/flows/TokenTransfer/index.tsx","webpack://_N_E/./src/components/tx-flow/useTxStepper.tsx","webpack://_N_E/./src/features/recovery/hooks/useIsRecoverer.ts","webpack://_N_E/./src/hooks/useSpendingLimit.ts","webpack://_N_E/./src/permissions/config.ts","webpack://_N_E/./src/permissions/hooks/useRoles.ts","webpack://_N_E/./src/permissions/hooks/useRoleProps.ts","webpack://_N_E/./src/permissions/getRolePermissions.ts","webpack://_N_E/./src/permissions/hooks/usePermission.ts","webpack://_N_E/./src/permissions/hooks/useHasPermission.ts","webpack://_N_E/./src/services/tx/tokenTransferParams.ts","webpack://_N_E/./src/components/common/AddressBookInput/styles.module.css","webpack://_N_E/./src/components/common/TokenAmountInput/styles.module.css","webpack://_N_E/./src/components/tx-flow/flows/TokenTransfer/SpendingLimitRow/styles.module.css"],"sourcesContent":["import { type ReactElement, useState, useMemo } from 'react'\nimport { Controller, useFormContext, useWatch } from 'react-hook-form'\nimport { SvgIcon, Typography } from '@mui/material'\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete'\nimport useAddressBook from '@/hooks/useAddressBook'\nimport AddressInput, { type AddressInputProps } from '../AddressInput'\nimport EthHashInfo from '../EthHashInfo'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport EntryDialog from '@/components/address-book/EntryDialog'\nimport css from './styles.module.css'\nimport inputCss from '@/styles/inputs.module.css'\nimport { isValidAddress } from '@/utils/validation'\nimport { sameAddress } from '@/utils/addresses'\n\nconst abFilterOptions = createFilterOptions({\n  stringify: (option: { label: string; name: string }) => option.name + ' ' + option.label,\n})\n\n/**\n *  Temporary component until revamped safe components are done\n */\nconst AddressBookInput = ({ name, canAdd, ...props }: AddressInputProps & { canAdd?: boolean }): ReactElement => {\n  const addressBook = useAddressBook()\n  const { setValue, control } = useFormContext()\n  const addressValue = useWatch({ name, control })\n  const [open, setOpen] = useState(false)\n  const [openAddressBook, setOpenAddressBook] = useState<boolean>(false)\n\n  const addressBookEntries = Object.entries(addressBook).map(([address, name]) => ({\n    label: address,\n    name,\n  }))\n\n  const hasVisibleOptions = useMemo(\n    () => !!addressBookEntries.filter((entry) => entry.label.includes(addressValue)).length,\n    [addressBookEntries, addressValue],\n  )\n\n  const isInAddressBook = useMemo(\n    () => addressBookEntries.some((entry) => sameAddress(entry.label, addressValue)),\n    [addressBookEntries, addressValue],\n  )\n\n  const customFilterOptions = (options: any, state: any) => {\n    // Don't show suggestions from the address book once a valid address has been entered.\n    if (isValidAddress(addressValue)) return []\n    return abFilterOptions(options, state)\n  }\n\n  const handleOpenAutocomplete = () => {\n    setOpen((value) => !value)\n  }\n\n  const onAddressBookClick = canAdd\n    ? () => {\n        setOpenAddressBook(true)\n      }\n    : undefined\n\n  return (\n    <>\n      <Controller\n        name={name}\n        control={control}\n        // eslint-disable-next-line\n        render={({ field: { ref, ...field } }) => (\n          <Autocomplete\n            {...field}\n            className={inputCss.input}\n            disableClearable\n            disabled={props.disabled}\n            readOnly={props.InputProps?.readOnly}\n            freeSolo\n            options={addressBookEntries}\n            onChange={(_, value) => (typeof value === 'string' ? field.onChange(value) : field.onChange(value.label))}\n            onInputChange={(_, value) => setValue(name, value)}\n            filterOptions={customFilterOptions}\n            componentsProps={{\n              paper: {\n                elevation: 2,\n              },\n            }}\n            renderOption={(props, option) => {\n              const { key, ...rest } = props\n              return (\n                <Typography data-testid=\"address-item\" component=\"li\" variant=\"body2\" {...rest} key={key}>\n                  <EthHashInfo address={option.label} name={option.name} shortAddress={false} copyAddress={false} />\n                </Typography>\n              )\n            }}\n            renderInput={(params) => (\n              <AddressInput\n                data-testid=\"address-item\"\n                {...params}\n                {...props}\n                focused={props.focused || !addressValue}\n                name={name}\n                onOpenListClick={hasVisibleOptions ? handleOpenAutocomplete : undefined}\n                isAutocompleteOpen={open}\n                onAddressBookClick={canAdd && !isInAddressBook ? onAddressBookClick : undefined}\n              />\n            )}\n          />\n        )}\n      />\n\n      {canAdd && !isInAddressBook ? (\n        <Typography variant=\"body2\" className={css.unknownAddress}>\n          <SvgIcon component={InfoIcon} fontSize=\"small\" />\n          <span>\n            This is an unknown address. You can{' '}\n            <a role=\"button\" onClick={onAddressBookClick}>\n              add it to your address book\n            </a>\n            .\n          </span>\n        </Typography>\n      ) : null}\n\n      {openAddressBook && (\n        <EntryDialog\n          handleClose={() => setOpenAddressBook(false)}\n          defaultValues={{ name: '', address: addressValue }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default AddressBookInput\n","export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import { safeFormatUnits } from '@/utils/formatters'\nimport { Button, Divider, FormControl, InputLabel, MenuItem, TextField } from '@mui/material'\nimport { type SafeBalanceResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport css from './styles.module.css'\nimport NumberField from '@/components/common/NumberField'\nimport { validateDecimalLength, validateLimitedAmount } from '@/utils/validation'\nimport { AutocompleteItem } from '@/components/tx-flow/flows/TokenTransfer/CreateTokenTransfer'\nimport { useFormContext } from 'react-hook-form'\nimport classNames from 'classnames'\nimport { useCallback } from 'react'\n\nexport enum TokenAmountFields {\n  tokenAddress = 'tokenAddress',\n  amount = 'amount',\n}\n\nconst TokenAmountInput = ({\n  balances,\n  selectedToken,\n  maxAmount,\n  validate,\n}: {\n  balances: SafeBalanceResponse['items']\n  selectedToken: SafeBalanceResponse['items'][number] | undefined\n  maxAmount?: bigint\n  validate?: (value: string) => string | undefined\n}) => {\n  const {\n    formState: { errors },\n    register,\n    resetField,\n    watch,\n    setValue,\n  } = useFormContext<{ [TokenAmountFields.tokenAddress]: string; [TokenAmountFields.amount]: string }>()\n\n  const tokenAddress = watch(TokenAmountFields.tokenAddress)\n  const isAmountError = !!errors[TokenAmountFields.tokenAddress] || !!errors[TokenAmountFields.amount]\n\n  const validateAmount = useCallback(\n    (value: string) => {\n      const decimals = selectedToken?.tokenInfo.decimals\n      return validateLimitedAmount(value, decimals, maxAmount?.toString()) || validateDecimalLength(value, decimals)\n    },\n    [maxAmount, selectedToken?.tokenInfo.decimals],\n  )\n\n  const onMaxAmountClick = useCallback(() => {\n    if (!selectedToken || maxAmount === undefined) return\n\n    setValue(TokenAmountFields.amount, safeFormatUnits(maxAmount.toString(), selectedToken.tokenInfo.decimals ?? 0), {\n      shouldValidate: true,\n    })\n  }, [maxAmount, selectedToken, setValue])\n\n  return (\n    <FormControl\n      data-testid=\"token-amount-section\"\n      className={classNames(css.outline, { [css.error]: isAmountError })}\n      fullWidth\n    >\n      <InputLabel shrink required className={css.label}>\n        {errors[TokenAmountFields.tokenAddress]?.message || errors[TokenAmountFields.amount]?.message || 'Amount'}\n      </InputLabel>\n      <div className={css.inputs}>\n        <NumberField\n          data-testid=\"token-amount-field\"\n          variant=\"standard\"\n          InputProps={{\n            disableUnderline: true,\n            endAdornment: maxAmount !== undefined && (\n              <Button data-testid=\"max-btn\" className={css.max} onClick={onMaxAmountClick}>\n                Max\n              </Button>\n            ),\n          }}\n          className={css.amount}\n          required\n          placeholder=\"0\"\n          {...register(TokenAmountFields.amount, {\n            required: true,\n            validate: validate ?? validateAmount,\n          })}\n        />\n        <Divider orientation=\"vertical\" flexItem />\n        <TextField\n          data-testid=\"token-balance\"\n          select\n          variant=\"standard\"\n          InputProps={{\n            disableUnderline: true,\n          }}\n          className={css.select}\n          {...register(TokenAmountFields.tokenAddress, {\n            required: true,\n            onChange: () => {\n              resetField(TokenAmountFields.amount, { defaultValue: '' })\n            },\n          })}\n          value={tokenAddress}\n          required\n        >\n          {balances.map((item) => (\n            <MenuItem data-testid=\"token-item\" key={item.tokenInfo.address} value={item.tokenInfo.address}>\n              <AutocompleteItem {...item} />\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n    </FormControl>\n  )\n}\n\nexport default TokenAmountInput\n","import useIsOnlySpendingLimitBeneficiary from '@/hooks/useIsOnlySpendingLimitBeneficiary'\nimport useSpendingLimit from '@/hooks/useSpendingLimit'\nimport { useVisibleBalances } from '@/hooks/useVisibleBalances'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { useAppSelector } from '@/store'\nimport { selectSpendingLimits } from '@/store/spendingLimitsSlice'\nimport { sameAddress } from '@/utils/addresses'\nimport { type SafeBalanceResponse } from '@safe-global/safe-gateway-typescript-sdk'\n\nexport const useTokenAmount = (selectedToken: SafeBalanceResponse['items'][0] | undefined) => {\n  const spendingLimit = useSpendingLimit(selectedToken?.tokenInfo)\n\n  const spendingLimitAmount = BigInt(spendingLimit?.amount || 0) - BigInt(spendingLimit?.spent || 0)\n  const totalAmount = BigInt(selectedToken?.balance || 0)\n\n  return { totalAmount, spendingLimitAmount }\n}\n\nexport const useVisibleTokens = () => {\n  const isOnlySpendingLimitBeneficiary = useIsOnlySpendingLimitBeneficiary()\n  const { balances } = useVisibleBalances()\n  const spendingLimits = useAppSelector(selectSpendingLimits)\n  const wallet = useWallet()\n\n  if (isOnlySpendingLimitBeneficiary) {\n    return balances.items.filter(({ tokenInfo }) => {\n      return spendingLimits?.some(({ beneficiary, token }) => {\n        return sameAddress(beneficiary, wallet?.address) && sameAddress(tokenInfo.address, token.address)\n      })\n    })\n  }\n\n  return balances.items\n}\n","import { FormControl, FormControlLabel, InputLabel, Radio, RadioGroup, SvgIcon, Tooltip } from '@mui/material'\nimport { Controller, useFormContext } from 'react-hook-form'\nimport classNames from 'classnames'\nimport { safeFormatUnits } from '@/utils/formatters'\nimport type { TokenInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport { TokenTransferFields, TokenTransferType } from '@/components/tx-flow/flows/TokenTransfer'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport { HelpCenterArticle } from '@/config/constants'\n\nimport css from './styles.module.css'\nimport { TokenAmountFields } from '@/components/common/TokenAmountInput'\nimport { useContext, useEffect } from 'react'\nimport { SafeTxContext } from '@/components/tx-flow/SafeTxProvider'\nimport { useHasPermission } from '@/permissions/hooks/useHasPermission'\nimport { Permission } from '@/permissions/config'\n\nconst SpendingLimitRow = ({\n  availableAmount,\n  selectedToken,\n}: {\n  availableAmount: bigint\n  selectedToken: TokenInfo | undefined\n}) => {\n  const { control, trigger, resetField } = useFormContext()\n  const canCreateStandardTx = useHasPermission(Permission.CreateTransaction)\n  const canCreateSpendingLimitTx = useHasPermission(Permission.CreateSpendingLimitTransaction, { token: selectedToken })\n  const { setNonceNeeded } = useContext(SafeTxContext)\n\n  const formattedAmount = safeFormatUnits(availableAmount, selectedToken?.decimals)\n\n  useEffect(() => {\n    return () => {\n      // reset the field value to default when the component is unmounted\n      resetField(TokenTransferFields.type)\n    }\n  }, [resetField])\n\n  return (\n    <FormControl>\n      <InputLabel shrink required sx={{ backgroundColor: 'background.paper', px: '6px', mx: '-6px' }}>\n        Send as\n      </InputLabel>\n      <Controller\n        rules={{ required: true }}\n        control={control}\n        name={TokenTransferFields.type}\n        render={({ field: { onChange, ...field } }) => (\n          <RadioGroup\n            row\n            onChange={(e) => {\n              onChange(e)\n\n              setNonceNeeded(e.target.value === TokenTransferType.multiSig)\n\n              // Validate only after the field is changed\n              setTimeout(() => {\n                trigger(TokenAmountFields.amount)\n              }, 10)\n            }}\n            {...field}\n            defaultValue={TokenTransferType.multiSig}\n            className={css.group}\n          >\n            {canCreateStandardTx && (\n              <FormControlLabel\n                data-testid=\"standard-tx\"\n                value={TokenTransferType.multiSig}\n                label={\n                  <>\n                    Standard transaction\n                    <Tooltip\n                      title={\n                        <>\n                          A standard transaction requires the signatures of other signers before the specified funds can\n                          be transferred.&nbsp;\n                          <ExternalLink\n                            href={HelpCenterArticle.SPENDING_LIMITS}\n                            title=\"Learn more about spending limits\"\n                          >\n                            Learn more about spending limits\n                          </ExternalLink>\n                          .\n                        </>\n                      }\n                      arrow\n                      placement=\"top\"\n                    >\n                      <span>\n                        <SvgIcon\n                          component={InfoIcon}\n                          inheritViewBox\n                          color=\"border\"\n                          fontSize=\"small\"\n                          sx={{\n                            verticalAlign: 'middle',\n                            ml: 0.5,\n                          }}\n                        />\n                      </span>\n                    </Tooltip>\n                  </>\n                }\n                control={<Radio />}\n                componentsProps={{ typography: { variant: 'body2' } }}\n                className={css.label}\n              />\n            )}\n            {canCreateSpendingLimitTx && (\n              <FormControlLabel\n                data-testid=\"spending-limit-tx\"\n                value={TokenTransferType.spendingLimit}\n                label={\n                  <>\n                    Spending limit <b>{`(${formattedAmount} ${selectedToken?.symbol})`}</b>\n                    <Tooltip\n                      title={\n                        <>\n                          A spending limit transaction allows you to transfer the specified funds without the need to\n                          collect the signatures of other signers.&nbsp;\n                          <ExternalLink\n                            href={HelpCenterArticle.SPENDING_LIMITS}\n                            title=\"Learn more about spending limits\"\n                          >\n                            Learn more about spending limits\n                          </ExternalLink>\n                          .\n                        </>\n                      }\n                      arrow\n                      placement=\"top\"\n                    >\n                      <span>\n                        <SvgIcon\n                          component={InfoIcon}\n                          inheritViewBox\n                          color=\"border\"\n                          fontSize=\"small\"\n                          sx={{\n                            verticalAlign: 'middle',\n                            ml: 0.5,\n                          }}\n                        />\n                      </span>\n                    </Tooltip>\n                  </>\n                }\n                control={<Radio />}\n                componentsProps={{ typography: { variant: 'body2' } }}\n                className={classNames(css.label, { [css.spendingLimit]: canCreateStandardTx })}\n              />\n            )}\n          </RadioGroup>\n        )}\n      />\n    </FormControl>\n  )\n}\n\nexport default SpendingLimitRow\n","import { useTokenAmount, useVisibleTokens } from '@/components/tx-flow/flows/TokenTransfer/utils'\nimport { type ReactElement, useContext, useEffect } from 'react'\nimport { type TokenInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport { Button, CardActions, Divider, FormControl, Grid, Typography } from '@mui/material'\nimport TokenIcon from '@/components/common/TokenIcon'\nimport AddressBookInput from '@/components/common/AddressBookInput'\nimport SpendingLimitRow from '@/components/tx-flow/flows/TokenTransfer/SpendingLimitRow'\nimport { TokenTransferFields, type TokenTransferParams, TokenTransferType } from '.'\nimport TxCard from '../../common/TxCard'\nimport { formatVisualAmount } from '@/utils/formatters'\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport TokenAmountInput from '@/components/common/TokenAmountInput'\nimport { SafeTxContext } from '@/components/tx-flow/SafeTxProvider'\nimport { useHasPermission } from '@/permissions/hooks/useHasPermission'\nimport { Permission } from '@/permissions/config'\n\nexport const AutocompleteItem = (item: { tokenInfo: TokenInfo; balance: string }): ReactElement => (\n  <Grid\n    container\n    sx={{\n      alignItems: 'center',\n      gap: 1,\n    }}\n  >\n    <TokenIcon logoUri={item.tokenInfo.logoUri} key={item.tokenInfo.address} tokenSymbol={item.tokenInfo.symbol} />\n\n    <Grid item xs>\n      <Typography\n        variant=\"body2\"\n        sx={{\n          whiteSpace: 'normal',\n        }}\n      >\n        {item.tokenInfo.name}\n      </Typography>\n\n      <Typography variant=\"caption\" component=\"p\">\n        {formatVisualAmount(item.balance, item.tokenInfo.decimals)} {item.tokenInfo.symbol}\n      </Typography>\n    </Grid>\n  </Grid>\n)\n\nexport const CreateTokenTransfer = ({\n  params,\n  onSubmit,\n  txNonce,\n}: {\n  params: TokenTransferParams\n  onSubmit: (data: TokenTransferParams) => void\n  txNonce?: number\n}): ReactElement => {\n  const disableSpendingLimit = txNonce !== undefined\n  const canCreateStandardTx = useHasPermission(Permission.CreateTransaction)\n  const canCreateSpendingLimitTx = useHasPermission(Permission.CreateSpendingLimitTransaction)\n  const balancesItems = useVisibleTokens()\n  const { setNonce, setNonceNeeded } = useContext(SafeTxContext)\n\n  useEffect(() => {\n    if (txNonce !== undefined) {\n      setNonce(txNonce)\n    }\n  }, [setNonce, txNonce])\n\n  const formMethods = useForm<TokenTransferParams>({\n    defaultValues: {\n      ...params,\n      [TokenTransferFields.type]: disableSpendingLimit\n        ? TokenTransferType.multiSig\n        : canCreateSpendingLimitTx && !canCreateStandardTx\n          ? TokenTransferType.spendingLimit\n          : params.type,\n      [TokenTransferFields.tokenAddress]:\n        canCreateSpendingLimitTx && !canCreateStandardTx ? balancesItems[0]?.tokenInfo.address : params.tokenAddress,\n    },\n    mode: 'onChange',\n    delayError: 500,\n  })\n\n  const {\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = formMethods\n\n  const recipient = watch(TokenTransferFields.recipient)\n  const tokenAddress = watch(TokenTransferFields.tokenAddress)\n  const type = watch(TokenTransferFields.type)\n\n  const selectedToken = balancesItems.find((item) => item.tokenInfo.address === tokenAddress)\n  const { totalAmount, spendingLimitAmount } = useTokenAmount(selectedToken)\n\n  const canCreateSpendingLimitTxWithToken = useHasPermission(Permission.CreateSpendingLimitTransaction, {\n    token: selectedToken?.tokenInfo,\n  })\n\n  const isSpendingLimitType = type === TokenTransferType.spendingLimit\n\n  const maxAmount = isSpendingLimitType && totalAmount > spendingLimitAmount ? spendingLimitAmount : totalAmount\n\n  const isAddressValid = !!recipient && !errors[TokenTransferFields.recipient]\n\n  useEffect(() => {\n    setNonceNeeded(!isSpendingLimitType || spendingLimitAmount === 0n)\n  }, [setNonceNeeded, isSpendingLimitType, spendingLimitAmount])\n\n  return (\n    <TxCard>\n      <FormProvider {...formMethods}>\n        <form onSubmit={handleSubmit(onSubmit)} className={commonCss.form}>\n          <FormControl fullWidth sx={{ mt: 1 }}>\n            <AddressBookInput name={TokenTransferFields.recipient} canAdd={isAddressValid} />\n          </FormControl>\n\n          <TokenAmountInput balances={balancesItems} selectedToken={selectedToken} maxAmount={maxAmount} />\n\n          {!disableSpendingLimit && canCreateSpendingLimitTxWithToken && (\n            <FormControl fullWidth sx={{ mt: 3 }}>\n              <SpendingLimitRow availableAmount={spendingLimitAmount} selectedToken={selectedToken?.tokenInfo} />\n            </FormControl>\n          )}\n\n          <Divider className={commonCss.nestedDivider} />\n\n          <CardActions>\n            <Button variant=\"contained\" type=\"submit\">\n              Next\n            </Button>\n          </CardActions>\n        </form>\n      </FormProvider>\n    </TxCard>\n  )\n}\n\nexport default CreateTokenTransfer\n","import { useContext, useEffect, useMemo } from 'react'\nimport useBalances from '@/hooks/useBalances'\nimport SignOrExecuteForm from '@/components/tx/SignOrExecuteForm'\nimport SendAmountBlock from '@/components/tx-flow/flows/TokenTransfer/SendAmountBlock'\nimport SendToBlock from '@/components/tx/SendToBlock'\nimport { createTokenTransferParams } from '@/services/tx/tokenTransferParams'\nimport { createTx } from '@/services/tx/tx-sender'\nimport type { TokenTransferParams } from '.'\nimport { SafeTxContext } from '../../SafeTxProvider'\nimport { safeParseUnits } from '@/utils/formatters'\nimport type { SubmitCallback } from '@/components/tx/SignOrExecuteForm/SignOrExecuteForm'\n\nconst ReviewTokenTransfer = ({\n  params,\n  onSubmit,\n  txNonce,\n}: {\n  params: TokenTransferParams\n  onSubmit: SubmitCallback\n  txNonce?: number\n}) => {\n  const { setSafeTx, setSafeTxError, setNonce } = useContext(SafeTxContext)\n  const { balances } = useBalances()\n  const token = balances.items.find((item) => item.tokenInfo.address === params.tokenAddress)\n\n  const amountInWei = useMemo(\n    () => safeParseUnits(params.amount, token?.tokenInfo.decimals)?.toString() || '0',\n    [params.amount, token?.tokenInfo.decimals],\n  )\n\n  useEffect(() => {\n    if (txNonce !== undefined) {\n      setNonce(txNonce)\n    }\n\n    if (!token) return\n\n    const txParams = createTokenTransferParams(\n      params.recipient,\n      params.amount,\n      token.tokenInfo.decimals,\n      token.tokenInfo.address,\n    )\n\n    createTx(txParams, txNonce).then(setSafeTx).catch(setSafeTxError)\n  }, [params, txNonce, token, setNonce, setSafeTx, setSafeTxError])\n\n  return (\n    <SignOrExecuteForm onSubmit={onSubmit}>\n      {token && <SendAmountBlock amountInWei={amountInWei} tokenInfo={token.tokenInfo} />}\n\n      <SendToBlock address={params.recipient} />\n    </SignOrExecuteForm>\n  )\n}\n\nexport default ReviewTokenTransfer\n","import useWallet from '@/hooks/wallets/useWallet'\nimport { useWeb3ReadOnly } from '@/hooks/wallets/web3'\nimport { getSpendingLimitContract } from '@/services/contracts/spendingLimitContracts'\nimport useAsync from '@/hooks/useAsync'\nimport { type SpendingLimitTxParams } from '@/components/tx-flow/flows/TokenTransfer/ReviewSpendingLimitTx'\nimport useChainId from '@/hooks/useChainId'\nimport useSafeInfo from './useSafeInfo'\n\nconst useSpendingLimitGas = (params: SpendingLimitTxParams) => {\n  const chainId = useChainId()\n  const provider = useWeb3ReadOnly()\n  const wallet = useWallet()\n  const { safe } = useSafeInfo()\n\n  const [gasLimit, gasLimitError, gasLimitLoading] = useAsync<bigint | undefined>(async () => {\n    if (!provider || !wallet || !safe.modules?.length) return\n\n    const contract = getSpendingLimitContract(chainId, safe.modules, provider)\n\n    const data = contract.interface.encodeFunctionData('executeAllowanceTransfer', [\n      params.safeAddress,\n      params.token,\n      params.to,\n      params.amount,\n      params.paymentToken,\n      params.payment,\n      params.delegate,\n      params.signature,\n    ])\n\n    return provider.estimateGas({\n      to: await contract.getAddress(),\n      from: wallet.address,\n      data,\n    })\n  }, [provider, wallet, chainId, params, safe.modules])\n\n  return { gasLimit, gasLimitError, gasLimitLoading }\n}\n\nexport default useSpendingLimitGas\n","import useWallet from '@/hooks/wallets/useWallet'\nimport type { ReactElement, SyntheticEvent } from 'react'\nimport { useContext, useMemo, useState } from 'react'\nimport { type BigNumberish, type BytesLike } from 'ethers'\nimport { Button, CardActions, Typography } from '@mui/material'\nimport SendToBlock from '@/components/tx/SendToBlock'\nimport { type TokenTransferParams } from '@/components/tx-flow/flows/TokenTransfer/index'\nimport SendAmountBlock from '@/components/tx-flow/flows/TokenTransfer/SendAmountBlock'\nimport useBalances from '@/hooks/useBalances'\nimport useSpendingLimit from '@/hooks/useSpendingLimit'\nimport useSpendingLimitGas from '@/hooks/useSpendingLimitGas'\nimport AdvancedParams, { useAdvancedParams } from '@/components/tx/AdvancedParams'\nimport { EMPTY_DATA, ZERO_ADDRESS } from '@safe-global/protocol-kit/dist/src/utils/constants'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { Errors, logError } from '@/services/exceptions'\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport WalletRejectionError from '@/components/tx/SignOrExecuteForm/WalletRejectionError'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { dispatchSpendingLimitTxExecution } from '@/services/tx/tx-sender'\nimport { getTxOptions } from '@/utils/transactions'\nimport { MODALS_EVENTS, trackEvent } from '@/services/analytics'\nimport useOnboard from '@/hooks/wallets/useOnboard'\nimport { asError } from '@/services/exceptions/utils'\nimport TxCard from '@/components/tx-flow/common/TxCard'\nimport { TxModalContext } from '@/components/tx-flow'\nimport { type SubmitCallback } from '@/components/tx/SignOrExecuteForm/SignOrExecuteForm'\nimport { TX_EVENTS, TX_TYPES } from '@/services/analytics/events/transactions'\nimport { isWalletRejection } from '@/utils/wallets'\nimport { safeParseUnits } from '@/utils/formatters'\nimport CheckWallet from '@/components/common/CheckWallet'\nimport NetworkWarning from '@/components/new-safe/create/NetworkWarning'\n\nexport type SpendingLimitTxParams = {\n  safeAddress: string\n  token: string\n  to: string\n  amount: BigNumberish\n  paymentToken: string\n  payment: BigNumberish\n  delegate: string\n  signature: BytesLike\n}\n\nconst ReviewSpendingLimitTx = ({\n  params,\n  onSubmit,\n}: {\n  params: TokenTransferParams\n  onSubmit: SubmitCallback\n}): ReactElement => {\n  const [isSubmittable, setIsSubmittable] = useState<boolean>(true)\n  const [submitError, setSubmitError] = useState<Error | undefined>()\n  const [isRejectedByUser, setIsRejectedByUser] = useState<Boolean>(false)\n  const { setTxFlow } = useContext(TxModalContext)\n  const currentChain = useCurrentChain()\n  const onboard = useOnboard()\n  const wallet = useWallet()\n  const { safe, safeAddress } = useSafeInfo()\n  const { balances } = useBalances()\n  const token = balances.items.find((item) => item.tokenInfo.address === params.tokenAddress)\n  const spendingLimit = useSpendingLimit(token?.tokenInfo)\n\n  const amountInWei = useMemo(\n    () => safeParseUnits(params.amount, token?.tokenInfo.decimals)?.toString() || '0',\n    [params.amount, token?.tokenInfo.decimals],\n  )\n\n  const txParams: SpendingLimitTxParams = useMemo(\n    () => ({\n      safeAddress,\n      token: spendingLimit?.token.address || ZERO_ADDRESS,\n      to: params.recipient,\n      amount: amountInWei,\n      paymentToken: ZERO_ADDRESS,\n      payment: 0,\n      delegate: spendingLimit?.beneficiary || ZERO_ADDRESS,\n      signature: EMPTY_DATA,\n    }),\n    [amountInWei, params.recipient, safeAddress, spendingLimit?.beneficiary, spendingLimit?.token],\n  )\n\n  const { gasLimit, gasLimitLoading } = useSpendingLimitGas(txParams)\n\n  const [advancedParams, setManualParams] = useAdvancedParams(gasLimit)\n\n  const handleSubmit = async (e: SyntheticEvent) => {\n    e.preventDefault()\n    if (!onboard || !wallet) return\n\n    trackEvent(MODALS_EVENTS.USE_SPENDING_LIMIT)\n\n    setIsSubmittable(false)\n    setSubmitError(undefined)\n    setIsRejectedByUser(false)\n\n    const txOptions = getTxOptions(advancedParams, currentChain)\n\n    try {\n      await dispatchSpendingLimitTxExecution(\n        txParams,\n        txOptions,\n        wallet.provider,\n        safe.chainId,\n        safeAddress,\n        safe.modules,\n      )\n      onSubmit('', true)\n      setTxFlow(undefined)\n    } catch (_err) {\n      const err = asError(_err)\n      if (isWalletRejection(err)) {\n        setIsRejectedByUser(true)\n      } else {\n        logError(Errors._801, err)\n        setSubmitError(err)\n      }\n      setIsSubmittable(true)\n      return\n    }\n\n    trackEvent({ ...TX_EVENTS.CREATE_VIA_SPENDING_LIMTI, label: TX_TYPES.transfer_token })\n    trackEvent({ ...TX_EVENTS.EXECUTE_VIA_SPENDING_LIMIT, label: TX_TYPES.transfer_token })\n  }\n\n  const submitDisabled = !isSubmittable || gasLimitLoading\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TxCard>\n        <Typography variant=\"body2\">\n          Spending limit transactions only appear in the interface once they are successfully processed and indexed.\n          Pending transactions can only be viewed in your signer wallet application or under your wallet address on a\n          Blockchain Explorer.\n        </Typography>\n\n        {token && <SendAmountBlock amountInWei={amountInWei} tokenInfo={token.tokenInfo} />}\n\n        <SendToBlock address={params.recipient} />\n\n        <AdvancedParams params={advancedParams} willExecute={true} onFormSubmit={setManualParams} />\n\n        <NetworkWarning />\n\n        {submitError && (\n          <ErrorMessage error={submitError}>Error submitting the transaction. Please try again.</ErrorMessage>\n        )}\n\n        {isRejectedByUser && <WalletRejectionError />}\n\n        <Typography variant=\"body2\" color=\"primary.light\" textAlign=\"center\">\n          You&apos;re about to create a transaction and will need to confirm it with your currently connected wallet.\n        </Typography>\n\n        <CardActions>\n          <CheckWallet allowNonOwner checkNetwork={!submitDisabled}>\n            {(isOk) => (\n              <Button variant=\"contained\" type=\"submit\" disabled={!isOk || submitDisabled}>\n                Execute\n              </Button>\n            )}\n          </CheckWallet>\n        </CardActions>\n      </TxCard>\n    </form>\n  )\n}\n\nexport default ReviewSpendingLimitTx\n","import { type ReactElement } from 'react'\nimport { type TokenTransferParams, TokenTransferType } from '@/components/tx-flow/flows/TokenTransfer/index'\nimport ReviewTokenTransfer from '@/components/tx-flow/flows/TokenTransfer/ReviewTokenTransfer'\nimport ReviewSpendingLimitTx from '@/components/tx-flow/flows/TokenTransfer/ReviewSpendingLimitTx'\n\nconst ReviewTokenTx = ({\n  params,\n  onSubmit,\n  txNonce,\n}: {\n  params: TokenTransferParams\n  onSubmit: () => void\n  txNonce?: number\n}): ReactElement => {\n  const isSpendingLimitTx = params.type === TokenTransferType.spendingLimit\n\n  return isSpendingLimitTx ? (\n    <ReviewSpendingLimitTx params={params} onSubmit={onSubmit} />\n  ) : (\n    <ReviewTokenTransfer params={params} onSubmit={onSubmit} txNonce={txNonce} />\n  )\n}\n\nexport default ReviewTokenTx\n","import TxLayout from '@/components/tx-flow/common/TxLayout'\nimport useTxStepper from '../../useTxStepper'\nimport CreateTokenTransfer from './CreateTokenTransfer'\nimport ReviewTokenTx from '@/components/tx-flow/flows/TokenTransfer/ReviewTokenTx'\nimport AssetsIcon from '@/public/images/sidebar/assets.svg'\nimport { ZERO_ADDRESS } from '@safe-global/protocol-kit/dist/src/utils/constants'\nimport { TokenAmountFields } from '@/components/common/TokenAmountInput'\n\nexport enum TokenTransferType {\n  multiSig = 'multiSig',\n  spendingLimit = 'spendingLimit',\n}\n\nenum Fields {\n  recipient = 'recipient',\n  type = 'type',\n}\n\nexport const TokenTransferFields = { ...Fields, ...TokenAmountFields }\n\nexport type TokenTransferParams = {\n  [TokenTransferFields.recipient]: string\n  [TokenTransferFields.tokenAddress]: string\n  [TokenTransferFields.amount]: string\n  [TokenTransferFields.type]: TokenTransferType\n}\n\ntype TokenTransferFlowProps = Partial<TokenTransferParams> & {\n  txNonce?: number\n}\n\nconst defaultParams: TokenTransferParams = {\n  recipient: '',\n  tokenAddress: ZERO_ADDRESS,\n  amount: '',\n  type: TokenTransferType.multiSig,\n}\n\nconst TokenTransferFlow = ({ txNonce, ...params }: TokenTransferFlowProps) => {\n  const { data, step, nextStep, prevStep } = useTxStepper<TokenTransferParams>({\n    ...defaultParams,\n    ...params,\n  })\n\n  const steps = [\n    <CreateTokenTransfer\n      key={0}\n      params={data}\n      txNonce={txNonce}\n      onSubmit={(formData) => nextStep({ ...data, ...formData })}\n    />,\n\n    <ReviewTokenTx key={1} params={data} txNonce={txNonce} onSubmit={() => null} />,\n  ]\n\n  return (\n    <TxLayout\n      title={step === 0 ? 'New transaction' : 'Confirm transaction'}\n      subtitle=\"Send tokens\"\n      icon={AssetsIcon}\n      step={step}\n      onBack={prevStep}\n    >\n      {steps}\n    </TxLayout>\n  )\n}\n\nexport default TokenTransferFlow\n","import { MODAL_NAVIGATION, trackEvent } from '@/services/analytics'\nimport { useCallback, useState } from 'react'\n\nconst useTxStepper = <T extends unknown>(initialData: T, eventCategory?: string) => {\n  const [step, setStep] = useState(0)\n  const [data, setData] = useState<T>(initialData)\n\n  const nextStep = useCallback(\n    (entireData: T) => {\n      setData(entireData)\n      setStep((prevStep) => {\n        if (eventCategory) {\n          trackEvent({ action: MODAL_NAVIGATION.Next, category: eventCategory, label: prevStep })\n        }\n\n        return prevStep + 1\n      })\n    },\n    [eventCategory],\n  )\n\n  const prevStep = useCallback(() => {\n    setStep((prevStep) => {\n      if (eventCategory) {\n        trackEvent({ action: MODAL_NAVIGATION.Back, category: eventCategory, label: prevStep })\n      }\n      return prevStep - 1\n    })\n  }, [eventCategory])\n\n  return { step, data, nextStep, prevStep }\n}\n\nexport default useTxStepper\n","import { selectDelayModifierByRecoverer } from '@/features/recovery/services/selectors'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport useRecovery from '@/features/recovery/hooks/useRecovery'\n\nexport function useIsRecoverer() {\n  const [recovery] = useRecovery()\n  const wallet = useWallet()\n  return Boolean(wallet?.address && recovery && selectDelayModifierByRecoverer(recovery, wallet.address))\n}\n","import { useSelector } from 'react-redux'\nimport type { TokenInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport type { SpendingLimitState } from '@/store/spendingLimitsSlice'\nimport { selectSpendingLimits } from '@/store/spendingLimitsSlice'\nimport { sameAddress } from '@/utils/addresses'\n\nconst useSpendingLimit = (selectedToken?: TokenInfo): SpendingLimitState | undefined => {\n  const wallet = useWallet()\n  const spendingLimits = useSelector(selectSpendingLimits)\n\n  return spendingLimits.find(\n    (spendingLimit) =>\n      sameAddress(spendingLimit.token.address, selectedToken?.address) &&\n      sameAddress(spendingLimit.beneficiary, wallet?.address),\n  )\n}\n\nexport default useSpendingLimit\n","import type { SpendingLimitState } from '@/store/spendingLimitsSlice'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport type { TokenInfo } from '@safe-global/safe-gateway-typescript-sdk'\n\nexport enum Role {\n  Owner = 'Owner',\n  NestedOwner = 'NestedOwner',\n  Proposer = 'Proposer',\n  Executioner = 'Executioner',\n  ModuleRole = 'ModuleRole',\n  Recoverer = 'Recoverer',\n  SpendingLimitBeneficiary = 'SpendingLimitBeneficiary',\n  NoWalletConnected = 'NoWalletConnected',\n}\n\nexport enum Permission {\n  CreateTransaction = 'CreateTransaction',\n  ProposeTransaction = 'ProposeTransaction',\n  SignTransaction = 'SignTransaction',\n  ExecuteTransaction = 'ExecuteTransaction',\n  CreateSpendingLimitTransaction = 'CreateSpendingLimitTransaction',\n  EnablePushNotifications = 'EnablePushNotifications',\n}\n\n/**\n * RolePropsMap defines property types for specific roles.\n * The props are used to specify conditional permission values for the respective role.\n */\nexport type RolePropsMap = {\n  [Role.SpendingLimitBeneficiary]: {\n    spendingLimits: SpendingLimitState[]\n  }\n}\n\n// Extract the props for a specific role from RolePropsMap\nexport type RoleProps<R extends Role> = R extends keyof RolePropsMap ? RolePropsMap[R] : undefined\n\n/**\n * PermissionPropsMap defines property types for specific permissions.\n * The props are used as inputs to evaluate permission functions.\n */\nexport type PermissionPropsMap = {\n  [Permission.ExecuteTransaction]: { safeTx: SafeTransaction }\n  [Permission.CreateSpendingLimitTransaction]: { token?: TokenInfo } | undefined\n}\n\n// Extract the props for a specific permission from PermissionPropsMap\nexport type PermissionProps<P extends Permission> = P extends keyof PermissionPropsMap\n  ? PermissionPropsMap[P]\n  : undefined\n\n// Define the type for a permission function that evaluates to a boolean\ntype PermissionFn<P extends Permission> =\n  PermissionProps<P> extends undefined ? undefined : (args: PermissionProps<P>) => boolean\n\n// Define the type for a permission set that maps permissions to their values\nexport type PermissionSet = {\n  [P in Permission]?: PermissionFn<P> extends undefined ? boolean : PermissionFn<P>\n}\n\nexport type RolePermissionsFn<R extends Role> =\n  RoleProps<R> extends undefined ? () => PermissionSet : (props: RoleProps<R>) => PermissionSet\n\ntype RolePermissionsConfig = {\n  [R in Role]?: RolePermissionsFn<R>\n}\n\n/**\n * Defines the permissions for each role.\n */\nexport default <RolePermissionsConfig>{\n  [Role.Owner]: () => ({\n    [Permission.CreateTransaction]: true,\n    [Permission.ProposeTransaction]: true,\n    [Permission.SignTransaction]: true,\n    [Permission.ExecuteTransaction]: () => true,\n    [Permission.EnablePushNotifications]: true,\n  }),\n  [Role.Proposer]: () => ({\n    [Permission.CreateTransaction]: true,\n    [Permission.ProposeTransaction]: true,\n    [Permission.ExecuteTransaction]: () => true,\n    [Permission.EnablePushNotifications]: true,\n  }),\n  [Role.Executioner]: () => ({\n    [Permission.ExecuteTransaction]: () => true,\n    [Permission.EnablePushNotifications]: true,\n  }),\n  [Role.SpendingLimitBeneficiary]: ({ spendingLimits }) => ({\n    [Permission.ExecuteTransaction]: () => true,\n    [Permission.EnablePushNotifications]: true,\n    [Permission.CreateSpendingLimitTransaction]: ({ token } = {}) => {\n      if (!token) return false\n\n      const spendingLimit = spendingLimits.find((sl) => sl.token.address === token.address)\n\n      if (spendingLimit) {\n        return BigInt(spendingLimit.amount) - BigInt(spendingLimit.spent) > 0\n      }\n\n      return false\n    },\n  }),\n  [Role.NoWalletConnected]: () => ({\n    [Permission.EnablePushNotifications]: false,\n  }),\n}\n","import { useMemo } from 'react'\nimport useIsSafeOwner from '@/hooks/useIsSafeOwner'\nimport { useIsWalletProposer } from '@/hooks/useProposers'\nimport { useIsRecoverer } from '@/features/recovery/hooks/useIsRecoverer'\nimport { useIsSpendingLimitBeneficiary } from '@/hooks/useIsOnlySpendingLimitBeneficiary'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { Role } from '../config'\nimport { useIsNestedSafeOwner } from '@/hooks/useIsNestedSafeOwner'\n\n/**\n * Hook to get the roles that the current user has based on the Safe and the connected wallet.\n * @returns Array with the roles that the current user has.\n */\nexport const useRoles = (): Role[] => {\n  const wallet = useWallet()\n  const isOwner = useIsSafeOwner()\n  const isNestedSafeOwner = useIsNestedSafeOwner()\n  const isProposer = useIsWalletProposer()\n  const isRecoverer = useIsRecoverer()\n  const isSpendingLimitBeneficiary = useIsSpendingLimitBeneficiary()\n\n  // Map of roles and whether they are applicable to the current user\n  const roleApplicableMap: Record<Role, boolean> = useMemo(\n    () => ({\n      [Role.Owner]: isOwner,\n      [Role.NestedOwner]: !!isNestedSafeOwner,\n      [Role.Proposer]: !!isProposer,\n      [Role.Recoverer]: isRecoverer,\n      [Role.SpendingLimitBeneficiary]: isSpendingLimitBeneficiary,\n      [Role.Executioner]: !!wallet,\n      [Role.NoWalletConnected]: !wallet,\n      [Role.ModuleRole]: false, // TODO: Implement module role\n    }),\n    [isOwner, isNestedSafeOwner, isProposer, isRecoverer, isSpendingLimitBeneficiary, wallet],\n  )\n\n  const roles = useMemo(\n    () =>\n      (Object.entries(roleApplicableMap) as [[Role, boolean]]).reduce<Role[]>(\n        (acc, [role, isApplicable]) => (isApplicable ? [...acc, role] : acc),\n        [],\n      ),\n    [roleApplicableMap],\n  )\n\n  return roles\n}\n","import { useSelector } from 'react-redux'\nimport { selectSpendingLimits } from '@/store/spendingLimitsSlice'\nimport { type RolePropsMap, Role } from '../config'\n\n/**\n * Hook to get the props for each role based on the current state of the application.\n * @returns Object with the props per role.\n */\nexport const useRoleProps = (): RolePropsMap => {\n  const spendingLimits = useSelector(selectSpendingLimits)\n\n  return {\n    [Role.SpendingLimitBeneficiary]: { spendingLimits },\n  }\n}\n","import rolePermissionConfig from './config'\nimport type { PermissionSet, Role, RoleProps } from './config'\n\n/**\n * Get the PermissionSet for multiple roles with the given role props object.\n * @param roles Roles to get permissions for\n * @param props Object with specific parameters for the roles\n * @returns Object with PermissionSet for each of the give roles that has permissions defined\n */\nexport const getRolePermissions = <R extends Role>(roles: R[], props: { [K in R]?: RoleProps<K> }) =>\n  roles.reduce<{ [_K in R]?: PermissionSet }>((acc, role) => {\n    const rolePermissionsFn = rolePermissionConfig[role]\n\n    if (!rolePermissionsFn) {\n      return acc\n    }\n\n    return { ...acc, [role]: rolePermissionsFn(props[role] as RoleProps<R>) }\n  }, {})\n","import { useMemo } from 'react'\nimport { useRoles } from './useRoles'\nimport { useRoleProps } from './useRoleProps'\nimport { getRolePermissions } from '../getRolePermissions'\nimport type { Permission, Role, PermissionProps } from '../config'\n\n/**\n * Hook to get the result of a permission check for the current user based on the Safe and the connected wallet.\n * @param permission Permission to check.\n * @param props Specific props to pass to the permission function (only required if configured for the permission).\n * @returns Object with the result of the permission check for each role that the user has.\n */\nexport const usePermission = <P extends Permission>(\n  permission: P,\n  ...[props]: PermissionProps<P> extends undefined ? [] : [props: PermissionProps<P>]\n): { [_R in Role]?: boolean } => {\n  const userRoles = useRoles()\n  const roleProps = useRoleProps()\n\n  const userPermissions = useMemo(() => {\n    return getRolePermissions(userRoles, roleProps)\n  }, [userRoles, roleProps])\n\n  const permissionPerRole = useMemo(() => {\n    return Object.entries(userPermissions).reduce((acc, [role, permissions]) => {\n      const permissionValue = permissions?.[permission]\n\n      if (permissionValue === undefined) {\n        // No permission defined for the role\n        return acc\n      }\n\n      if (typeof permissionValue === 'function') {\n        // Evaluate the permission function with the given props\n        return { ...acc, [role]: permissionValue(props as PermissionProps<P>) }\n      }\n\n      // Return the permission value (boolean) as is\n      return { ...acc, [role]: permissionValue }\n    }, {})\n  }, [userPermissions, permission, props])\n\n  return permissionPerRole\n}\n","import type { Permission, PermissionProps } from '../config'\nimport { usePermission } from './usePermission'\n\n/**\n * Hook to check if the current user has a specific permission.\n * @param permission Permission to check.\n * @param props Specific props to pass to the permission function (only required if configured for the permission).\n * @returns Boolean indicating if the user has the permission.\n */\nexport const useHasPermission = <P extends Permission, Props extends PermissionProps<P> = PermissionProps<P>>(\n  permission: P,\n  ...props: Props extends undefined ? [] : [props: Props]\n): boolean => {\n  const permissions = usePermission(permission, ...props)\n\n  return Object.values(permissions).some((flag) => flag)\n}\n","import type { MetaTransactionData } from '@safe-global/safe-core-sdk-types'\nimport { ConfirmationViewTypes, type BaselineConfirmationView } from '@safe-global/safe-gateway-typescript-sdk'\nimport { safeParseUnits } from '@/utils/formatters'\nimport { Interface } from 'ethers'\nimport { sameAddress } from '@/utils/addresses'\n\n// CryptoKitties Contract Addresses by network\n// This is an exception made for a popular NFT that's not ERC721 standard-compatible,\n// so we can allow the user to transfer the assets by using `transfer` instead of\n// the standard `safeTransferFrom` method.\nconst CryptoKittiesContract = '0x06012c8cf97bead5deae237070f9587f8e7a266d'\n\nconst encodeERC20TransferData = (to: string, value: string): string => {\n  const erc20Abi = ['function transfer(address to, uint256 value)']\n  const contractInterface = new Interface(erc20Abi)\n  return contractInterface.encodeFunctionData('transfer', [to, value])\n}\n\nconst encodeERC721TransferData = (from: string, to: string, tokenId: string): string => {\n  const erc721Abi = ['function safeTransferFrom(address from, address to, uint256 tokenId)']\n  const contractInterface = new Interface(erc721Abi)\n  return contractInterface.encodeFunctionData('safeTransferFrom', [from, to, tokenId])\n}\n\nexport const createTokenTransferParams = (\n  recipient: string,\n  amount: string,\n  decimals: number | null | undefined,\n  tokenAddress: string,\n): MetaTransactionData => {\n  const isNativeToken = parseInt(tokenAddress, 16) === 0\n  const value = safeParseUnits(amount, decimals)?.toString() || '0'\n\n  return isNativeToken\n    ? {\n        to: recipient,\n        value,\n        data: '0x',\n      }\n    : {\n        to: tokenAddress,\n        value: '0',\n        data: encodeERC20TransferData(recipient, value),\n      }\n}\n\nexport const createNftTransferParams = (\n  from: string,\n  to: string,\n  tokenId: string,\n  tokenAddress: string,\n): MetaTransactionData => {\n  let data = encodeERC721TransferData(from, to, tokenId)\n\n  // An exception made for CryptoKitties, which is not ERC721 standard-compatible\n  if (sameAddress(tokenAddress, CryptoKittiesContract)) {\n    data = encodeERC20TransferData(to, tokenId)\n  }\n\n  return {\n    to: tokenAddress,\n    value: '0',\n    data,\n  }\n}\n\nexport const getNativeTransferData = ({\n  to,\n  value,\n}: Pick<MetaTransactionData, 'to' | 'value'>): BaselineConfirmationView => {\n  return {\n    type: ConfirmationViewTypes.GENERIC,\n    method: '',\n    parameters: [\n      {\n        name: 'to',\n        type: 'address',\n        value: to,\n      },\n      {\n        name: 'value',\n        type: 'uint256',\n        value,\n      },\n    ],\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unknownAddress\":\"styles_unknownAddress__BH1i2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outline\":\"styles_outline__Oxxyl\",\"error\":\"styles_error__Y7laB\",\"label\":\"styles_label__NCDFZ\",\"inputs\":\"styles_inputs__9O9RC\",\"amount\":\"styles_amount__fhBIk\",\"max\":\"styles_max__J1vzR\",\"select\":\"styles_select__Q_nAQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"styles_group__DG8up\",\"label\":\"styles_label__rNYxi\",\"spendingLimit\":\"styles_spendingLimit__GD1oK\"};"],"names":["abFilterOptions","createFilterOptions","stringify","option","name","label","canAdd","props","AddressBookInput","addressBook","useAddressBook","setValue","control","useFormContext","addressValue","useWatch","open","setOpen","useState","openAddressBook","setOpenAddressBook","addressBookEntries","Object","entries","map","address","hasVisibleOptions","useMemo","filter","entry","includes","length","isInAddressBook","some","sameAddress","customFilterOptions","options","state","isValidAddress","handleOpenAutocomplete","value","onAddressBookClick","undefined","Controller","render","field","ref","Autocomplete","className","inputCss","disabled","readOnly","InputProps","freeSolo","onChange","_","onInputChange","filterOptions","componentsProps","paper","elevation","renderOption","key","rest","Typography","data-testid","component","variant","EthHashInfo","shortAddress","copyAddress","renderInput","AddressInput","params","focused","onOpenListClick","isAutocompleteOpen","css","SvgIcon","InfoIcon","fontSize","span","a","role","onClick","EntryDialog","handleClose","defaultValues","TokenAmountFields","errors","balances","selectedToken","maxAmount","validate","formState","register","resetField","watch","tokenAddress","isAmountError","validateAmount","useCallback","decimals","tokenInfo","validateLimitedAmount","toString","validateDecimalLength","onMaxAmountClick","safeFormatUnits","shouldValidate","FormControl","classNames","fullWidth","InputLabel","shrink","required","message","div","NumberField","disableUnderline","endAdornment","Button","placeholder","Divider","orientation","flexItem","TextField","select","defaultValue","item","MenuItem","AutocompleteItem","useTokenAmount","spendingLimit","useSpendingLimit","spendingLimitAmount","BigInt","amount","spent","totalAmount","balance","isOnlySpendingLimitBeneficiary","useIsOnlySpendingLimitBeneficiary","useVisibleBalances","spendingLimits","useAppSelector","selectSpendingLimits","wallet","useWallet","items","beneficiary","token","availableAmount","SpendingLimitRow","trigger","canCreateStandardTx","useHasPermission","Permission","CreateTransaction","canCreateSpendingLimitTx","CreateSpendingLimitTransaction","setNonceNeeded","useContext","SafeTxContext","formattedAmount","useEffect","TokenTransferFields","type","sx","backgroundColor","px","mx","rules","RadioGroup","row","e","target","TokenTransferType","multiSig","setTimeout","FormControlLabel","Tooltip","title","ExternalLink","href","HelpCenterArticle","SPENDING_LIMITS","arrow","placement","inheritViewBox","color","verticalAlign","ml","Radio","typography","b","symbol","Grid","container","alignItems","gap","TokenIcon","logoUri","tokenSymbol","xs","whiteSpace","formatVisualAmount","balancesItems","onSubmit","txNonce","CreateTokenTransfer","disableSpendingLimit","useVisibleTokens","setNonce","formMethods","useForm","mode","delayError","handleSubmit","recipient","find","canCreateSpendingLimitTxWithToken","isSpendingLimitType","isAddressValid","TxCard","FormProvider","form","commonCss","mt","TokenAmountInput","CardActions","ReviewTokenTransfer","setSafeTx","setSafeTxError","useBalances","amountInWei","safeParseUnits","txParams","createTokenTransferParams","createTx","then","catch","SignOrExecuteForm","SendAmountBlock","SendToBlock","chainId","useChainId","provider","useWeb3ReadOnly","useSpendingLimitGas","safe","useSafeInfo","gasLimit","gasLimitError","gasLimitLoading","useAsync","modules","contract","getSpendingLimitContract","data","interface","encodeFunctionData","safeAddress","to","paymentToken","payment","delegate","signature","estimateGas","getAddress","from","isSubmittable","setIsSubmittable","submitError","ReviewSpendingLimitTx","setSubmitError","isRejectedByUser","setIsRejectedByUser","setTxFlow","TxModalContext","currentChain","useCurrentChain","onboard","useOnboard","ZERO_ADDRESS","EMPTY_DATA","advancedParams","setManualParams","useAdvancedParams","preventDefault","trackEvent","MODALS_EVENTS","USE_SPENDING_LIMIT","txOptions","getTxOptions","dispatchSpendingLimitTxExecution","_err","err","asError","isWalletRejection","logError","Errors","_801","TX_EVENTS","CREATE_VIA_SPENDING_LIMTI","TX_TYPES","transfer_token","EXECUTE_VIA_SPENDING_LIMIT","submitDisabled","AdvancedParams","willExecute","onFormSubmit","NetworkWarning","ErrorMessage","error","WalletRejectionError","textAlign","CheckWallet","allowNonOwner","checkNetwork","isOk","ReviewTokenTx","Fields","TokenTransferFlow","step","nextStep","prevStep","useTxStepper","defaultParams","steps","formData","TxLayout","subtitle","icon","AssetsIcon","onBack","initialData","eventCategory","setStep","setData","entireData","action","MODAL_NAVIGATION","Next","category","Back","useIsRecoverer","recovery","useRecovery","Boolean","selectDelayModifierByRecoverer","useSelector","Role","sl","useRoles","isOwner","useIsSafeOwner","isNestedSafeOwner","useIsNestedSafeOwner","isProposer","useIsWalletProposer","isRecoverer","isSpendingLimitBeneficiary","useIsSpendingLimitBeneficiary","roleApplicableMap","Owner","NestedOwner","Proposer","Recoverer","SpendingLimitBeneficiary","Executioner","NoWalletConnected","ModuleRole","reduce","acc","isApplicable","useRoleProps","roles","rolePermissionsFn","rolePermissionConfig","permission","userRoles","roleProps","userPermissions","getRolePermissions","permissions","permissionValue","values","usePermission","flag","encodeERC20TransferData","Interface","erc20Abi","encodeERC721TransferData","tokenId","isNativeToken","parseInt","CryptoKittiesContract"],"sourceRoot":"","ignoreList":[]}