{"version":3,"file":"static/chunks/8411.3ef2e33c10919c04.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/icons-material/esm/CircleOutlined.js","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/BlockedAddress/index.tsx","webpack://_N_E/./src/components/common/Disclaimer/index.tsx","webpack://_N_E/./src/components/new-safe/create/steps/StatusStep/LoadingSpinner/index.tsx","webpack://_N_E/./node_modules/@mui/icons-material/esm/Circle.js","webpack://_N_E/./src/components/new-safe/create/steps/StatusStep/StatusStep.tsx","webpack://_N_E/./src/components/tx-flow/flows/SuccessScreen/StatusStepper.tsx","webpack://_N_E/./src/components/tx-flow/flows/SuccessScreen/statuses/ProcessingStatus.tsx","webpack://_N_E/./src/components/tx-flow/flows/SuccessScreen/statuses/IndexingStatus.tsx","webpack://_N_E/./src/components/tx-flow/flows/SuccessScreen/statuses/DefaultStatus.tsx","webpack://_N_E/./src/components/tx-flow/flows/SuccessScreen/index.tsx","webpack://_N_E/./src/hooks/useTxDetails.ts","webpack://_N_E/./src/components/common/Disclaimer/styles.module.css","webpack://_N_E/./src/components/new-safe/create/steps/StatusStep/LoadingSpinner/styles.module.css","webpack://_N_E/./src/components/new-safe/create/steps/StatusStep/styles.module.css","webpack://_N_E/./src/components/tx-flow/flows/SuccessScreen/styles.module.css"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}), 'CircleOutlined');","export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import type { ReactElement } from 'react'\nimport { useMediaQuery, useTheme } from '@mui/material'\nimport { shortenAddress } from '@/utils/formatters'\nimport { useRouter } from 'next/router'\nimport Disclaimer from '@/components/common/Disclaimer'\nimport { AppRoutes } from '@/config/routes'\n\nexport const BlockedAddress = ({\n  address,\n  featureTitle,\n  onClose,\n}: {\n  address: string\n  featureTitle: string\n  onClose?: () => void\n}): ReactElement => {\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\n  const displayAddress = address && isMobile ? shortenAddress(address) : address\n  const router = useRouter()\n\n  const handleAccept = () => {\n    router.push({ pathname: AppRoutes.home, query: router.query })\n  }\n\n  return (\n    <Disclaimer\n      title=\"Blocked address\"\n      subtitle={displayAddress}\n      content={`The above address is part of the OFAC SDN list and the ${featureTitle} is unavailable for sanctioned addresses.`}\n      onAccept={onClose ?? handleAccept}\n    />\n  )\n}\n\nexport default BlockedAddress\n","import type { ReactElement, ReactNode } from 'react'\nimport { Box, Button, Divider, Paper, Stack, SvgIcon, Typography } from '@mui/material'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport css from './styles.module.css'\n\nexport const Disclaimer = ({\n  title,\n  subtitle,\n  buttonText,\n  content,\n  onAccept,\n}: {\n  title: string\n  subtitle?: string\n  buttonText?: string\n  content: ReactNode\n  onAccept: () => void\n}): ReactElement => {\n  return (\n    <div className={css.container}>\n      <Paper sx={{ maxWidth: '500px' }}>\n        <Stack\n          sx={[\n            {\n              padding: 'var(--space-3)',\n              gap: 2,\n              display: 'flex',\n              alignItems: 'center',\n            },\n            ({ palette }) => ({ borderBottom: `1px solid ${palette.border.light}` }),\n          ]}\n        >\n          {subtitle && (\n            <Typography\n              sx={{\n                color: 'var(--color-text-secondary)',\n              }}\n            >\n              {subtitle}\n            </Typography>\n          )}\n\n          <Box className={css.iconCircle}>\n            <SvgIcon component={InfoIcon} inheritViewBox fontSize=\"medium\" />\n          </Box>\n          <Typography\n            variant=\"h3\"\n            sx={{\n              fontWeight: 700,\n            }}\n          >\n            {title}\n          </Typography>\n          <Typography variant=\"body2\">{content}</Typography>\n          <Divider />\n        </Stack>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 3,\n            pb: 2,\n          }}\n        >\n          <Button variant=\"contained\" size=\"small\" sx={{ px: '16px' }} onClick={onAccept}>\n            {buttonText || 'Got it'}\n          </Button>\n        </Box>\n      </Paper>\n    </div>\n  )\n}\n\nexport default Disclaimer\n","import { Box } from '@mui/material'\nimport css from '@/components/new-safe/create/steps/StatusStep/LoadingSpinner/styles.module.css'\nimport classnames from 'classnames'\nimport { useCallback, useEffect, useRef } from 'react'\n\nconst rectTlEndTransform = 'translateX(0) translateY(20px) scaleY(1.1)'\nconst rectTrEndTransform = 'translateX(30px) scaleX(2.3)'\nconst rectBlEndTransform = 'translateX(30px) translateY(60px) scaleX(2.3)'\nconst rectBrEndTransform = 'translateY(40px) translateX(60px) scaleY(1.1)'\n\nconst moveToEnd = (transformEnd: string, element: HTMLDivElement | null) => {\n  if (element) {\n    element.getAnimations().forEach((animation) => {\n      if ((animation as CSSAnimation).animationName) {\n        animation.pause()\n      }\n    })\n    const transformStart = window.getComputedStyle(element).transform\n    element.getAnimations().forEach((animation) => {\n      if ((animation as CSSAnimation).animationName) {\n        animation.cancel()\n      }\n    })\n    element.animate([{ transform: transformStart }, { transform: transformEnd }], {\n      duration: 1000,\n      easing: 'ease-out',\n      fill: 'forwards',\n    })\n  }\n}\n\nexport enum SpinnerStatus {\n  ERROR = 'isError',\n  SUCCESS = 'isSuccess',\n  PROCESSING = 'isProcessing',\n}\n\nconst LoadingSpinner = ({ status }: { status: SpinnerStatus }) => {\n  // TODO: only monitoring the PendingTxs we can't determine the transaction's result\n  const isError = status === SpinnerStatus.ERROR\n  const isSuccess = status === SpinnerStatus.SUCCESS\n\n  const rectTl = useRef<HTMLDivElement>(null)\n  const rectTr = useRef<HTMLDivElement>(null)\n  const rectBl = useRef<HTMLDivElement>(null)\n  const rectBr = useRef<HTMLDivElement>(null)\n  const rectCenter = useRef<HTMLDivElement>(null)\n\n  const onFinish = useCallback(() => {\n    moveToEnd(rectTlEndTransform, rectTl.current)\n    moveToEnd(rectTrEndTransform, rectTr.current)\n    moveToEnd(rectBlEndTransform, rectBl.current)\n    moveToEnd(rectBrEndTransform, rectBr.current)\n  }, [rectBl, rectBr, rectTl, rectTr])\n\n  useEffect(() => {\n    if (isSuccess) {\n      onFinish()\n    }\n  }, [isSuccess, onFinish])\n\n  return (\n    <Box className={classnames(css.box, { [css.rectError]: isError }, { [css.rectSuccess]: isSuccess })}>\n      <div className={classnames(css.rect, css.rectTl)} ref={rectTl} />\n      <div className={classnames(css.rect, css.rectTr)} ref={rectTr} />\n      <div className={classnames(css.rect, css.rectBl)} ref={rectBl} />\n      <div className={classnames(css.rect, css.rectBr)} ref={rectBr} />\n      <div className={classnames(css.rect, css.rectCenter)} ref={rectCenter} />\n\n      <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n        <defs>\n          <filter id=\"gooey\">\n            <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"3\" result=\"blur\" />\n            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9\" result=\"goo\" />\n            <feComposite in=\"SourceGraphic\" in2=\"goo\" operator=\"atop\" />\n          </filter>\n        </defs>\n      </svg>\n    </Box>\n  )\n}\n\nexport default LoadingSpinner\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2\"\n}), 'Circle');","import type { ReactNode } from 'react'\nimport { Box, Skeleton, StepLabel, SvgIcon } from '@mui/material'\nimport css from '@/components/new-safe/create/steps/StatusStep/styles.module.css'\nimport CircleIcon from '@mui/icons-material/Circle'\nimport CircleOutlinedIcon from '@mui/icons-material/CircleOutlined'\nimport Identicon from '@/components/common/Identicon'\n\nconst StatusStep = ({\n  isLoading,\n  safeAddress,\n  children,\n}: {\n  isLoading: boolean\n  safeAddress?: string\n  children: ReactNode\n}) => {\n  const Icon = isLoading ? CircleOutlinedIcon : CircleIcon\n  const color = isLoading ? 'border' : 'primary'\n\n  return (\n    <StepLabel\n      className={css.label}\n      icon={<SvgIcon component={Icon} className={css.icon} color={color} fontSize=\"small\" />}\n    >\n      <Box display=\"flex\" alignItems=\"center\" gap={2} color={color}>\n        <Box flexShrink={0}>\n          {safeAddress && !isLoading ? (\n            <Identicon address={safeAddress} size={32} />\n          ) : (\n            <Skeleton variant=\"circular\" width=\"2.3em\" height=\"2.3em\" />\n          )}\n        </Box>\n        {children}\n      </Box>\n    </StepLabel>\n  )\n}\n\nexport default StatusStep\n","import { Box, Step, StepConnector, Stepper, Typography } from '@mui/material'\nimport css from '@/components/new-safe/create/steps/StatusStep/styles.module.css'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport StatusStep from '@/components/new-safe/create/steps/StatusStep/StatusStep'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { PendingStatus } from '@/store/pendingTxsSlice'\n\nconst StatusStepper = ({ status, txHash }: { status?: PendingStatus; txHash?: string }) => {\n  const { safeAddress } = useSafeInfo()\n\n  const isProcessing = status === PendingStatus.PROCESSING || status === PendingStatus.INDEXING || status === undefined\n  const isProcessed = status === PendingStatus.INDEXING || status === undefined\n  const isSuccess = status === undefined\n\n  return (\n    <Stepper orientation=\"vertical\" nonLinear connector={<StepConnector className={css.connector} />}>\n      <Step>\n        <StatusStep isLoading={!isProcessing} safeAddress={safeAddress}>\n          <Box>\n            <Typography variant=\"body2\" fontWeight=\"700\">\n              Your transaction\n            </Typography>\n            {txHash && (\n              <EthHashInfo\n                address={txHash}\n                hasExplorer\n                showCopyButton\n                showName={false}\n                shortAddress={false}\n                showAvatar={false}\n              />\n            )}\n          </Box>\n        </StatusStep>\n      </Step>\n      <Step>\n        <StatusStep isLoading={!isProcessed} safeAddress={safeAddress}>\n          <Box>\n            <Typography variant=\"body2\" fontWeight=\"700\">\n              {isProcessed ? 'Processed' : 'Processing'}\n            </Typography>\n          </Box>\n        </StatusStep>\n      </Step>\n      <Step>\n        <StatusStep isLoading={!isSuccess} safeAddress={safeAddress}>\n          <Typography variant=\"body2\" fontWeight=\"700\">\n            {isSuccess ? 'Indexed' : 'Indexing'}\n          </Typography>\n        </StatusStep>\n      </Step>\n      <Step>\n        <StatusStep isLoading={!isSuccess} safeAddress={safeAddress}>\n          <Typography variant=\"body2\" fontWeight=\"700\">\n            Transaction is executed\n          </Typography>\n        </StatusStep>\n      </Step>\n    </Stepper>\n  )\n}\n\nexport default StatusStepper\n","// Extract status handling into separate components\nimport { Box, Typography } from '@mui/material'\nimport { SpeedUpMonitor } from '@/features/speedup/components/SpeedUpMonitor'\nimport { PendingStatus, type PendingTx } from '@/store/pendingTxsSlice'\n\ntype Props = {\n  txId: string\n  pendingTx: PendingTx\n}\nexport const ProcessingStatus = ({ txId, pendingTx }: Props) => (\n  <Box px={3} mt={3}>\n    <Typography data-testid=\"transaction-status\" variant=\"h6\" mt={2} fontWeight={700}>\n      Transaction is now processing\n    </Typography>\n    <Typography variant=\"body2\" mb={3}>\n      The transaction was confirmed and is now being processed.\n    </Typography>\n    <Box>\n      {pendingTx.status === PendingStatus.PROCESSING && (\n        <SpeedUpMonitor txId={txId} pendingTx={pendingTx} modalTrigger=\"alertBox\" />\n      )}\n    </Box>\n  </Box>\n)\n","import { Box, Typography } from '@mui/material'\nimport classNames from 'classnames'\nimport css from '@/components/tx-flow/flows/SuccessScreen/styles.module.css'\n\nexport const IndexingStatus = () => (\n  <Box px={3} mt={3}>\n    <Typography data-testid=\"transaction-status\" variant=\"h6\" mt={2} fontWeight={700}>\n      Transaction was processed\n    </Typography>\n    <Box className={classNames(css.instructions, css.infoBg)}>\n      <Typography variant=\"body2\"> It is now being indexed.</Typography>\n    </Box>\n  </Box>\n)\n","import { Box, Typography } from '@mui/material'\nimport classNames from 'classnames'\nimport css from '@/components/tx-flow/flows/SuccessScreen/styles.module.css'\nimport { isTimeoutError } from '@/utils/ethers-utils'\n\nconst TRANSACTION_FAILED = 'Transaction failed'\nconst TRANSACTION_SUCCESSFUL = 'Transaction was successful'\n\ntype Props = {\n  error: undefined | Error\n}\nexport const DefaultStatus = ({ error }: Props) => (\n  <Box px={3} mt={3}>\n    <Typography data-testid=\"transaction-status\" variant=\"h6\" mt={2} fontWeight={700}>\n      {error ? TRANSACTION_FAILED : TRANSACTION_SUCCESSFUL}\n    </Typography>\n    {error && (\n      <Box className={classNames(css.instructions, error ? css.errorBg : css.infoBg)}>\n        <Typography variant=\"body2\">\n          {error ? (isTimeoutError(error) ? 'Transaction timed out' : error.message) : ''}\n        </Typography>\n      </Box>\n    )}\n  </Box>\n)\n","import StatusStepper from './StatusStepper'\nimport { Button, Container, Divider, Paper } from '@mui/material'\nimport classnames from 'classnames'\nimport Link from 'next/link'\nimport css from './styles.module.css'\nimport { useAppSelector } from '@/store'\nimport { PendingStatus, selectPendingTxById } from '@/store/pendingTxsSlice'\nimport { useCallback, useContext, useEffect, useState } from 'react'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { TxEvent, txSubscribe } from '@/services/tx/txEvents'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { TxModalContext } from '../..'\nimport LoadingSpinner, { SpinnerStatus } from '@/components/new-safe/create/steps/StatusStep/LoadingSpinner'\nimport { ProcessingStatus } from '@/components/tx-flow/flows/SuccessScreen/statuses/ProcessingStatus'\nimport { IndexingStatus } from '@/components/tx-flow/flows/SuccessScreen/statuses/IndexingStatus'\nimport { DefaultStatus } from '@/components/tx-flow/flows/SuccessScreen/statuses/DefaultStatus'\nimport { isSwapTransferOrderTxInfo } from '@/utils/transaction-guards'\nimport { getTxLink } from '@/utils/tx-link'\nimport useTxDetails from '@/hooks/useTxDetails'\n\ninterface Props {\n  /** The ID assigned to the transaction in the client-gateway */\n  txId?: string\n  /** For module transaction, pass the transaction hash while the `txId` is not yet available */\n  txHash?: string\n}\n\nconst SuccessScreen = ({ txId, txHash }: Props) => {\n  const [localTxHash, setLocalTxHash] = useState<string | undefined>(txHash)\n  const [error, setError] = useState<Error>()\n  const { setTxFlow } = useContext(TxModalContext)\n  const chain = useCurrentChain()\n  const pendingTx = useAppSelector((state) => (txId ? selectPendingTxById(state, txId) : undefined))\n  const { safeAddress } = useSafeInfo()\n  const status = !txId && txHash ? PendingStatus.INDEXING : pendingTx?.status\n  const pendingTxHash = pendingTx && 'txHash' in pendingTx ? pendingTx.txHash : undefined\n  const txLink = chain && txId && getTxLink(txId, chain, safeAddress)\n  const [txDetails] = useTxDetails(txId)\n  const isSwapOrder = txDetails && isSwapTransferOrderTxInfo(txDetails.txInfo)\n\n  useEffect(() => {\n    if (!pendingTxHash) return\n\n    setLocalTxHash(pendingTxHash)\n  }, [pendingTxHash])\n\n  useEffect(() => {\n    const unsubFns: Array<() => void> = ([TxEvent.FAILED, TxEvent.REVERTED] as const).map((event) =>\n      txSubscribe(event, (detail) => {\n        if (detail.txId === txId && pendingTx) setError(detail.error)\n      }),\n    )\n\n    return () => unsubFns.forEach((unsubscribe) => unsubscribe())\n  }, [txId, pendingTx])\n\n  const onClose = useCallback(() => {\n    setTxFlow(undefined)\n  }, [setTxFlow])\n\n  const isSuccess = status === undefined\n  const spinnerStatus = error ? SpinnerStatus.ERROR : isSuccess ? SpinnerStatus.SUCCESS : SpinnerStatus.PROCESSING\n\n  let StatusComponent\n  switch (status) {\n    case PendingStatus.PROCESSING:\n    case PendingStatus.RELAYING:\n      // status can only have these values if txId & pendingTx are defined\n      StatusComponent = <ProcessingStatus txId={txId!} pendingTx={pendingTx!} />\n      break\n    case PendingStatus.INDEXING:\n      StatusComponent = <IndexingStatus />\n      break\n    default:\n      StatusComponent = <DefaultStatus error={error} />\n  }\n\n  return (\n    <Container\n      component={Paper}\n      disableGutters\n      sx={{\n        textAlign: 'center',\n        maxWidth: `${900 - 75}px`, // md={11}\n      }}\n      maxWidth={false}\n    >\n      <div className={css.row}>\n        <LoadingSpinner status={spinnerStatus} />\n        {StatusComponent}\n      </div>\n\n      {!error && (\n        <>\n          <Divider />\n          <div className={css.row}>\n            <StatusStepper status={status} txHash={localTxHash} />\n          </div>\n        </>\n      )}\n\n      <Divider />\n\n      <div className={classnames(css.row, css.buttons)}>\n        {isSwapOrder && (\n          <Button data-testid=\"finish-transaction-btn\" variant=\"outlined\" size=\"small\" onClick={onClose}>\n            Back to swaps\n          </Button>\n        )}\n\n        {txLink && (\n          <Link {...txLink} passHref target=\"_blank\" rel=\"noreferrer\" legacyBehavior>\n            <Button\n              data-testid=\"view-transaction-btn\"\n              variant={isSwapOrder ? 'contained' : 'outlined'}\n              size=\"small\"\n              onClick={onClose}\n            >\n              View transaction\n            </Button>\n          </Link>\n        )}\n\n        {!isSwapOrder && (\n          <Button data-testid=\"finish-transaction-btn\" variant=\"contained\" size=\"small\" onClick={onClose}>\n            Finish\n          </Button>\n        )}\n      </div>\n    </Container>\n  )\n}\n\nexport default SuccessScreen\n","import { getTransactionDetails } from '@safe-global/safe-gateway-typescript-sdk'\nimport useAsync from '@/hooks/useAsync'\nimport useChainId from './useChainId'\n\nfunction useTxDetails(txId?: string) {\n  const chainId = useChainId()\n\n  return useAsync(() => {\n    if (!txId) return\n    return getTransactionDetails(chainId, txId)\n  }, [chainId, txId])\n}\n\nexport default useTxDetails\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3Fkdw\",\"iconCircle\":\"styles_iconCircle__GFs_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"styles_box__jXwC_\",\"rectError\":\"styles_rectError__cTAjH\",\"rect\":\"styles_rect__DgHvj\",\"rectSuccess\":\"styles_rectSuccess__szLsJ\",\"rectCenter\":\"styles_rectCenter__fgw7o\",\"rectTl\":\"styles_rectTl__KI1Iv\",\"rect-anim-tl\":\"styles_rect-anim-tl__3Weaw\",\"rectTr\":\"styles_rectTr__s1DON\",\"rect-anim-tr\":\"styles_rect-anim-tr__ctmQw\",\"rectBl\":\"styles_rectBl__0UK4u\",\"rect-anim-bl\":\"styles_rect-anim-bl__xXbUw\",\"rectBr\":\"styles_rectBr__SV_dM\",\"rect-anim-br\":\"styles_rect-anim-br__2Tai5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"styles_icon__pLAhx\",\"connector\":\"styles_connector__J6DS5\",\"label\":\"styles_label__hIz7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"styles_row__fXJ7w\",\"buttons\":\"styles_buttons__bE8Aj\",\"instructions\":\"styles_instructions__tSmyR\",\"errorBg\":\"styles_errorBg__FMLGd\",\"infoBg\":\"styles_infoBg__BhdGw\"};"],"names":["createSvgIcon","_jsx","d","address","BlockedAddress","featureTitle","onClose","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","displayAddress","shortenAddress","router","useRouter","Disclaimer","title","subtitle","content","onAccept","push","handleAccept","pathname","AppRoutes","home","query","buttonText","div","className","css","Paper","sx","maxWidth","Stack","padding","gap","display","alignItems","palette","borderBottom","border","light","Typography","color","Box","SvgIcon","component","InfoIcon","inheritViewBox","fontSize","variant","fontWeight","Divider","justifyContent","pt","pb","Button","size","px","onClick","moveToEnd","transformEnd","element","getAnimations","forEach","animationName","pause","transformStart","window","getComputedStyle","transform","cancel","animate","duration","easing","fill","SpinnerStatus","status","isSuccess","LoadingSpinner","rectTl","useRef","rectTr","rectBl","rectBr","rectCenter","onFinish","useCallback","rectTlEndTransform","current","rectTrEndTransform","rectBlEndTransform","rectBrEndTransform","useEffect","classnames","isError","ref","svg","xmlns","version","defs","filter","id","feGaussianBlur","in","stdDeviation","result","feColorMatrix","mode","values","feComposite","in2","operator","isLoading","StatusStep","safeAddress","children","Icon","CircleOutlinedIcon","CircleIcon","StepLabel","icon","flexShrink","Identicon","Skeleton","width","height","txHash","useSafeInfo","isProcessing","PendingStatus","PROCESSING","INDEXING","undefined","isProcessed","Stepper","orientation","nonLinear","connector","StepConnector","Step","EthHashInfo","hasExplorer","showCopyButton","showName","shortAddress","showAvatar","ProcessingStatus","txId","pendingTx","mt","data-testid","mb","SpeedUpMonitor","modalTrigger","classNames","DefaultStatus","error","TRANSACTION_FAILED","TRANSACTION_SUCCESSFUL","isTimeoutError","message","StatusComponent","SuccessScreen","localTxHash","setLocalTxHash","useState","setError","setTxFlow","useContext","TxModalContext","chain","useCurrentChain","useAppSelector","selectPendingTxById","state","pendingTxHash","txLink","getTxLink","txDetails","useTxDetails","isSwapOrder","isSwapTransferOrderTxInfo","txInfo","unsubFns","TxEvent","FAILED","REVERTED","map","txSubscribe","event","detail","unsubscribe","spinnerStatus","ERROR","SUCCESS","RELAYING","IndexingStatus","Container","disableGutters","textAlign","StatusStepper","Link","passHref","target","rel","legacyBehavior","chainId","useChainId","useAsync","getTransactionDetails"],"sourceRoot":"","ignoreList":[0,5]}