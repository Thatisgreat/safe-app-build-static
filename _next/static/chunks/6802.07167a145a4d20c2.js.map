{"version":3,"file":"static/chunks/6802.07167a145a4d20c2.js","mappings":"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","sources":["webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/new-safe/create/NetworkWarning/index.tsx","webpack://_N_E/./src/services/analytics/events/transactions.ts","webpack://_N_E/./src/utils/tx-list.ts"],"sourcesContent":["export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import { Alert, AlertTitle, Box } from '@mui/material'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport ChainSwitcher from '@/components/common/ChainSwitcher'\nimport useIsWrongChain from '@/hooks/useIsWrongChain'\n\nconst NetworkWarning = ({ action }: { action?: string }) => {\n  const chain = useCurrentChain()\n  const isWrongChain = useIsWrongChain()\n\n  if (!chain || !isWrongChain) return null\n\n  return (\n    <Alert severity=\"warning\">\n      <AlertTitle sx={{ fontWeight: 700 }}>Change your wallet network</AlertTitle>You are trying to{' '}\n      {action || 'sign or execute a transaction'} on {chain.chainName}. Make sure that your wallet is set to the same\n      network.\n      <Box\n        sx={{\n          mt: 2,\n        }}\n      >\n        <ChainSwitcher />\n      </Box>\n    </Alert>\n  )\n}\n\nexport default NetworkWarning\n","import { EventType } from '../types'\n\nexport enum TX_TYPES {\n  // Settings\n  owner_add = 'owner_add',\n  owner_remove = 'owner_remove',\n  owner_swap = 'owner_swap',\n  owner_threshold_change = 'owner_threshold_change',\n\n  // Module txs\n  guard_remove = 'guard_remove',\n  module_remove = 'module_remove',\n\n  // Transfers\n  transfer_token = 'transfer_token',\n  transfer_nft = 'transfer_nft',\n\n  // Other\n  batch = 'batch',\n  rejection = 'rejection',\n  typed_message = 'typed_message',\n  nested_safe = 'nested_safe',\n  walletconnect = 'walletconnect',\n  custom = 'custom',\n  native_bridge = 'native_bridge',\n  native_swap = 'native_swap',\n  bulk_execute = 'bulk_execute',\n\n  // Counterfactual\n  activate_without_tx = 'activate_without_tx',\n  activate_with_tx = 'activate_with_tx',\n}\n\nconst TX_CATEGORY = 'transactions'\n\nexport const TX_EVENTS = {\n  CREATE: {\n    event: EventType.TX_CREATED,\n    action: 'Create transaction',\n    category: TX_CATEGORY,\n    // label: TX_TYPES,\n  },\n  CREATE_VIA_ROLE: {\n    event: EventType.TX_CREATED,\n    action: 'Create via role',\n    category: TX_CATEGORY,\n  },\n  CREATE_VIA_SPENDING_LIMTI: {\n    event: EventType.TX_CREATED,\n    action: 'Create via spending limit',\n    category: TX_CATEGORY,\n  },\n  CREATE_VIA_PROPOSER: {\n    event: EventType.TX_CREATED,\n    action: 'Create via proposer',\n    category: TX_CATEGORY,\n  },\n  CONFIRM: {\n    event: EventType.TX_CONFIRMED,\n    action: 'Confirm transaction',\n    category: TX_CATEGORY,\n  },\n  EXECUTE: {\n    event: EventType.TX_EXECUTED,\n    action: 'Execute transaction',\n    category: TX_CATEGORY,\n  },\n  SPEED_UP: {\n    event: EventType.TX_EXECUTED,\n    action: 'Speed up transaction',\n    category: TX_CATEGORY,\n  },\n  EXECUTE_VIA_SPENDING_LIMIT: {\n    event: EventType.TX_EXECUTED,\n    action: 'Execute via spending limit',\n    category: TX_CATEGORY,\n  },\n  EXECUTE_VIA_ROLE: {\n    event: EventType.TX_EXECUTED,\n    action: 'Execute via role',\n    category: TX_CATEGORY,\n  },\n  CREATE_VIA_PARENT: {\n    event: EventType.TX_CREATED,\n    action: 'Create via parent',\n    category: TX_CATEGORY,\n  },\n  CONFIRM_VIA_PARENT: {\n    event: EventType.TX_CREATED,\n    action: 'Confirm via parent',\n    category: TX_CATEGORY,\n  },\n  EXECUTE_VIA_PARENT: {\n    event: EventType.TX_CREATED,\n    action: 'Execute via parent',\n    category: TX_CATEGORY,\n  },\n  CONFIRM_IN_PARENT: {\n    event: EventType.TX_CONFIRMED,\n    action: 'Confirm in parent',\n    category: TX_CATEGORY,\n  },\n  EXECUTE_IN_PARENT: {\n    event: EventType.TX_EXECUTED,\n    action: 'Execute in parent',\n    category: TX_CATEGORY,\n  },\n}\n","import { TransactionInfoType } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { Transaction, TransactionListItem } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport { isConflictHeaderListItem, isNoneConflictType, isTransactionListItem } from '@/utils/transaction-guards'\nimport { sameAddress } from './addresses'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\n\ntype GroupedTxs = Array<TransactionListItem | Transaction[]>\n\nexport const groupTxs = (list: TransactionListItem[]) => {\n  const groupedByConflicts = groupConflictingTxs(list)\n  return groupBulkTxs(groupedByConflicts)\n}\n\n/**\n * Group txs by conflict header\n */\nexport const groupConflictingTxs = (list: TransactionListItem[]): GroupedTxs => {\n  return list\n    .reduce<GroupedTxs>((resultItems, item) => {\n      if (isConflictHeaderListItem(item)) {\n        return resultItems.concat([[]])\n      }\n\n      const prevItem = resultItems[resultItems.length - 1]\n      if (Array.isArray(prevItem) && isTransactionListItem(item) && !isNoneConflictType(item)) {\n        prevItem.push(item)\n        return resultItems\n      }\n\n      return resultItems.concat(item)\n    }, [])\n    .map((item) => {\n      if (Array.isArray(item)) {\n        return item.sort((a, b) => b.transaction.timestamp - a.transaction.timestamp)\n      }\n      return item\n    })\n}\n\n/**\n * Group txs by tx hash\n */\nconst groupBulkTxs = (list: GroupedTxs): GroupedTxs => {\n  return list\n    .reduce<GroupedTxs>((resultItems, item) => {\n      if (Array.isArray(item) || !isTransactionListItem(item)) {\n        return resultItems.concat([item])\n      }\n      const currentTxHash = item.transaction.txHash\n\n      const prevItem = resultItems[resultItems.length - 1]\n      if (!Array.isArray(prevItem)) return resultItems.concat([[item]])\n      const prevTxHash = prevItem[0].transaction.txHash\n\n      if (currentTxHash && currentTxHash === prevTxHash) {\n        prevItem.push(item)\n        return resultItems\n      }\n\n      return resultItems.concat([[item]])\n    }, [])\n    .map((item) => (Array.isArray(item) && item.length === 1 ? item[0] : item))\n}\n\nexport function _getRecoveryCancellations(moduleAddress: string, transactions: Array<Transaction>) {\n  const CANCELLATION_TX_METHOD_NAME = 'setTxNonce'\n\n  return transactions.filter(({ transaction }) => {\n    const { txInfo } = transaction\n    return (\n      txInfo.type === TransactionInfoType.CUSTOM &&\n      sameAddress(txInfo.to.value, moduleAddress) &&\n      txInfo.methodName === CANCELLATION_TX_METHOD_NAME\n    )\n  })\n}\n\ntype GroupedRecoveryQueueItem = Transaction | RecoveryQueueItem\n\nexport function groupRecoveryTransactions(queue: Array<TransactionListItem>, recoveryQueue: Array<RecoveryQueueItem>) {\n  const transactions = queue.filter(isTransactionListItem)\n\n  return recoveryQueue.reduce<Array<RecoveryQueueItem | Array<GroupedRecoveryQueueItem>>>((acc, item) => {\n    const cancellations = _getRecoveryCancellations(item.address, transactions)\n\n    if (cancellations.length === 0) {\n      acc.push(item)\n    } else {\n      acc.push([item, ...cancellations])\n    }\n\n    return acc\n  }, [])\n}\n\nexport const getLatestTransactions = (list: TransactionListItem[] = []): Transaction[] => {\n  return (\n    groupConflictingTxs(list)\n      // Get latest transaction if there are conflicting ones\n      .map((group) => (Array.isArray(group) ? group[0] : group))\n      .filter(isTransactionListItem)\n  )\n}\n"],"names":["action","chain","useCurrentChain","NetworkWarning","isWrongChain","useIsWrongChain","Alert","severity","AlertTitle","sx","fontWeight","chainName","Box","mt","ChainSwitcher","TX_TYPES","TX_CATEGORY","TX_EVENTS","CREATE","event","EventType","TX_CREATED","category","CREATE_VIA_ROLE","CREATE_VIA_SPENDING_LIMTI","CREATE_VIA_PROPOSER","CONFIRM","TX_CONFIRMED","EXECUTE","TX_EXECUTED","SPEED_UP","EXECUTE_VIA_SPENDING_LIMIT","EXECUTE_VIA_ROLE","CREATE_VIA_PARENT","CONFIRM_VIA_PARENT","EXECUTE_VIA_PARENT","CONFIRM_IN_PARENT","EXECUTE_IN_PARENT","groupTxs","groupBulkTxs","groupConflictingTxs","list","groupedByConflicts","reduce","resultItems","item","isConflictHeaderListItem","concat","prevItem","length","isArray","isTransactionListItem","isNoneConflictType","push","map","sort","a","b","transaction","timestamp","Array","currentTxHash","txHash","prevTxHash","groupRecoveryTransactions","queue","recoveryQueue","transactions","filter","acc","cancellations","moduleAddress","address","txInfo","type","TransactionInfoType","CUSTOM","sameAddress","to","value","methodName","CANCELLATION_TX_METHOD_NAME","getLatestTransactions","group"],"sourceRoot":"","ignoreList":[]}