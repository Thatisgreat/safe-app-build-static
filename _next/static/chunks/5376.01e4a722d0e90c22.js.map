{"version":3,"file":"static/chunks/5376.01e4a722d0e90c22.js","mappings":"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","sources":["webpack://_N_E/./src/components/tx-flow/common/constants.ts","webpack://_N_E/./src/components/tx-flow/flows/ChangeThreshold/ReviewChangeThreshold.tsx","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/ChangeThreshold/ChooseThreshold.tsx","webpack://_N_E/./src/components/tx-flow/flows/ChangeThreshold/index.tsx","webpack://_N_E/./src/components/tx-flow/useTxStepper.tsx"],"sourcesContent":["export const TOOLTIP_TITLES = {\n  THRESHOLD:\n    'The threshold of a Safe Account specifies how many signers need to confirm a Safe Account transaction before it can be executed.',\n  REVIEW_WINDOW:\n    'A period that begins after a recovery is submitted on-chain, during which the Safe Account signers can review the proposal and cancel it before it is executable.',\n  PROPOSAL_EXPIRY: 'A period after which the recovery proposal will expire and can no longer be executed.',\n} as const\n","import useSafeInfo from '@/hooks/useSafeInfo'\nimport { useContext, useEffect } from 'react'\n\nimport { createUpdateThresholdTx } from '@/services/tx/tx-sender'\nimport { SETTINGS_EVENTS, trackEvent } from '@/services/analytics'\nimport SignOrExecuteForm from '@/components/tx/SignOrExecuteForm'\nimport { SafeTxContext } from '@/components/tx-flow/SafeTxProvider'\nimport { ChangeThresholdFlowFieldNames } from '@/components/tx-flow/flows/ChangeThreshold'\nimport type { ChangeThresholdFlowProps } from '@/components/tx-flow/flows/ChangeThreshold'\n\nimport { ChangeThresholdReviewContext } from './context'\n\nconst ReviewChangeThreshold = ({ params }: { params: ChangeThresholdFlowProps }) => {\n  const { safe } = useSafeInfo()\n  const newThreshold = params[ChangeThresholdFlowFieldNames.threshold]\n\n  const { setSafeTx, setSafeTxError } = useContext(SafeTxContext)\n\n  useEffect(() => {\n    createUpdateThresholdTx(newThreshold).then(setSafeTx).catch(setSafeTxError)\n  }, [newThreshold, setSafeTx, setSafeTxError])\n\n  const onChangeThreshold = () => {\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.OWNERS, label: safe.owners.length })\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.THRESHOLD, label: newThreshold })\n  }\n\n  return (\n    <ChangeThresholdReviewContext.Provider value={{ newThreshold }}>\n      <SignOrExecuteForm onSubmit={onChangeThreshold} showMethodCall />\n    </ChangeThresholdReviewContext.Provider>\n  )\n}\n\nexport default ReviewChangeThreshold\n","export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import { Controller, useForm } from 'react-hook-form'\nimport {\n  TextField,\n  MenuItem,\n  Button,\n  CardActions,\n  Divider,\n  Typography,\n  Box,\n  Grid,\n  SvgIcon,\n  Tooltip,\n} from '@mui/material'\nimport type { ReactElement } from 'react'\n\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport TxCard from '@/components/tx-flow/common/TxCard'\nimport { ChangeThresholdFlowFieldNames } from '@/components/tx-flow/flows/ChangeThreshold'\nimport type { ChangeThresholdFlowProps } from '@/components/tx-flow/flows/ChangeThreshold'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport { TOOLTIP_TITLES } from '@/components/tx-flow/common/constants'\n\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport { maybePlural } from '@/utils/formatters'\n\nexport const ChooseThreshold = ({\n  params,\n  onSubmit,\n}: {\n  params: ChangeThresholdFlowProps\n  onSubmit: (data: ChangeThresholdFlowProps) => void\n}): ReactElement => {\n  const { safe } = useSafeInfo()\n\n  const formMethods = useForm<ChangeThresholdFlowProps>({\n    defaultValues: params,\n    mode: 'onChange',\n  })\n\n  const newThreshold = formMethods.watch(ChangeThresholdFlowFieldNames.threshold)\n\n  return (\n    <TxCard>\n      <div>\n        <Typography\n          variant=\"h3\"\n          sx={{\n            fontWeight: 700,\n          }}\n        >\n          Threshold\n          <Tooltip title={TOOLTIP_TITLES.THRESHOLD} arrow placement=\"top\">\n            <span>\n              <SvgIcon\n                component={InfoIcon}\n                inheritViewBox\n                color=\"border\"\n                fontSize=\"small\"\n                sx={{\n                  verticalAlign: 'middle',\n                  ml: 0.5,\n                }}\n              />\n            </span>\n          </Tooltip>\n        </Typography>\n\n        <Typography>Any transaction will require the confirmation of:</Typography>\n      </div>\n      <form onSubmit={formMethods.handleSubmit(onSubmit)}>\n        <Box\n          sx={{\n            mb: 2,\n          }}\n        >\n          <Controller\n            control={formMethods.control}\n            rules={{\n              validate: (value) => {\n                if (value === safe.threshold) {\n                  return `Current policy is already set to ${safe.threshold}.`\n                }\n              },\n            }}\n            name={ChangeThresholdFlowFieldNames.threshold}\n            render={({ field, fieldState }) => {\n              const isError = !!fieldState.error\n\n              return (\n                <Grid\n                  container\n                  direction=\"row\"\n                  sx={{\n                    gap: 2,\n                    alignItems: 'center',\n                  }}\n                >\n                  <Grid item>\n                    <TextField select {...field} error={isError}>\n                      {safe.owners.map((_, idx) => (\n                        <MenuItem data-testid=\"threshold-item\" key={idx + 1} value={idx + 1}>\n                          {idx + 1}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item>\n                    <Typography>\n                      out of {safe.owners.length} signer{maybePlural(safe.owners)}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    {isError ? (\n                      <Typography\n                        color=\"error\"\n                        sx={{\n                          mb: 2,\n                        }}\n                      >\n                        {fieldState.error?.message}\n                      </Typography>\n                    ) : (\n                      <Typography\n                        sx={{\n                          mb: 2,\n                        }}\n                      >\n                        {fieldState.isDirty ? 'Previous policy was ' : 'Current policy is '}\n                        <b>\n                          {safe.threshold} out of {safe.owners.length}\n                        </b>\n                        .\n                      </Typography>\n                    )}\n                  </Grid>\n                </Grid>\n              )\n            }}\n          />\n        </Box>\n\n        <Divider className={commonCss.nestedDivider} />\n\n        <CardActions>\n          <Button\n            data-testid=\"threshold-next-btn\"\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={\n              !!formMethods.formState.errors[ChangeThresholdFlowFieldNames.threshold] ||\n              // Prevent initial submit before field was interacted with\n              newThreshold === safe.threshold\n            }\n          >\n            Next\n          </Button>\n        </CardActions>\n      </form>\n    </TxCard>\n  )\n}\n","import TxLayout from '@/components/tx-flow/common/TxLayout'\nimport ReviewChangeThreshold from '@/components/tx-flow/flows/ChangeThreshold/ReviewChangeThreshold'\nimport useTxStepper from '@/components/tx-flow/useTxStepper'\nimport SaveAddressIcon from '@/public/images/common/save-address.svg'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { ChooseThreshold } from '@/components/tx-flow/flows/ChangeThreshold/ChooseThreshold'\n\nexport enum ChangeThresholdFlowFieldNames {\n  threshold = 'threshold',\n}\n\nexport type ChangeThresholdFlowProps = {\n  [ChangeThresholdFlowFieldNames.threshold]: number\n}\n\nconst ChangeThresholdFlow = () => {\n  const { safe } = useSafeInfo()\n\n  const { data, step, nextStep, prevStep } = useTxStepper<ChangeThresholdFlowProps>({\n    [ChangeThresholdFlowFieldNames.threshold]: safe.threshold,\n  })\n\n  const steps = [\n    <ChooseThreshold key={0} params={data} onSubmit={(formData) => nextStep(formData)} />,\n    <ReviewChangeThreshold key={1} params={data} />,\n  ]\n\n  return (\n    <TxLayout\n      title={step === 0 ? 'New transaction' : 'Confirm transaction'}\n      subtitle=\"Change threshold\"\n      icon={SaveAddressIcon}\n      step={step}\n      onBack={prevStep}\n    >\n      {steps}\n    </TxLayout>\n  )\n}\n\nexport default ChangeThresholdFlow\n","import { MODAL_NAVIGATION, trackEvent } from '@/services/analytics'\nimport { useCallback, useState } from 'react'\n\nconst useTxStepper = <T extends unknown>(initialData: T, eventCategory?: string) => {\n  const [step, setStep] = useState(0)\n  const [data, setData] = useState<T>(initialData)\n\n  const nextStep = useCallback(\n    (entireData: T) => {\n      setData(entireData)\n      setStep((prevStep) => {\n        if (eventCategory) {\n          trackEvent({ action: MODAL_NAVIGATION.Next, category: eventCategory, label: prevStep })\n        }\n\n        return prevStep + 1\n      })\n    },\n    [eventCategory],\n  )\n\n  const prevStep = useCallback(() => {\n    setStep((prevStep) => {\n      if (eventCategory) {\n        trackEvent({ action: MODAL_NAVIGATION.Back, category: eventCategory, label: prevStep })\n      }\n      return prevStep - 1\n    })\n  }, [eventCategory])\n\n  return { step, data, nextStep, prevStep }\n}\n\nexport default useTxStepper\n"],"names":["TOOLTIP_TITLES","THRESHOLD","REVIEW_WINDOW","PROPOSAL_EXPIRY","params","safe","useSafeInfo","ReviewChangeThreshold","ChangeThresholdFlowFieldNames","threshold","setSafeTx","setSafeTxError","useContext","SafeTxContext","useEffect","createUpdateThresholdTx","newThreshold","then","catch","ChangeThresholdReviewContext","Provider","value","SignOrExecuteForm","onSubmit","onChangeThreshold","trackEvent","SETTINGS_EVENTS","SETUP","OWNERS","label","owners","length","showMethodCall","ChooseThreshold","formMethods","useForm","defaultValues","mode","watch","TxCard","div","Typography","variant","sx","fontWeight","Tooltip","title","arrow","placement","span","SvgIcon","component","InfoIcon","inheritViewBox","color","fontSize","verticalAlign","ml","form","handleSubmit","Box","mb","Controller","control","rules","validate","name","render","fieldState","field","isError","error","Grid","container","direction","gap","alignItems","item","TextField","select","map","_","idx","MenuItem","data-testid","maybePlural","xs","message","isDirty","b","Divider","className","commonCss","CardActions","Button","type","disabled","formState","errors","data","ChangeThresholdFlow","step","nextStep","prevStep","useTxStepper","steps","formData","TxLayout","subtitle","icon","SaveAddressIcon","onBack","initialData","eventCategory","setStep","useState","setData","useCallback","entireData","action","MODAL_NAVIGATION","Next","category","Back"],"sourceRoot":"","ignoreList":[]}