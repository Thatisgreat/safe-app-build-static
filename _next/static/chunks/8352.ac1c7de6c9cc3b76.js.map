{"version":3,"file":"static/chunks/8352.ac1c7de6c9cc3b76.js","mappings":"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","sources":["webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/features/counterfactual/ActivateAccountFlow.tsx","webpack://_N_E/./src/services/analytics/events/transactions.ts","webpack://_N_E/./src/utils/tx-list.ts","webpack://_N_E/./public/images/common/close.svg"],"sourcesContent":["export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import { createNewSafe, relaySafeCreation } from '@/components/new-safe/create/logic'\nimport { NetworkFee, SafeSetupOverview } from '@/components/new-safe/create/steps/ReviewStep'\nimport ReviewRow from '@/components/new-safe/ReviewRow'\nimport { TxModalContext } from '@/components/tx-flow'\nimport TxCard from '@/components/tx-flow/common/TxCard'\nimport TxLayout from '@/components/tx-flow/common/TxLayout'\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport { ExecutionMethod, ExecutionMethodSelector } from '@/components/tx/ExecutionMethodSelector'\nimport { safeCreationDispatch, SafeCreationEvent } from '@/features/counterfactual/services/safeCreationEvents'\nimport { selectUndeployedSafe, type UndeployedSafe } from '@/features/counterfactual/store/undeployedSafesSlice'\nimport { CF_TX_GROUP_KEY, extractCounterfactualSafeSetup, isPredictedSafeProps } from '@/features/counterfactual/utils'\nimport useChainId from '@/hooks/useChainId'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport useGasPrice, { getTotalFeeFormatted } from '@/hooks/useGasPrice'\nimport { useLeastRemainingRelays } from '@/hooks/useRemainingRelays'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport useWalletCanPay from '@/hooks/useWalletCanPay'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { OVERVIEW_EVENTS, trackEvent, WALLET_EVENTS } from '@/services/analytics'\nimport { TX_EVENTS, TX_TYPES } from '@/services/analytics/events/transactions'\nimport { asError } from '@/services/exceptions/utils'\nimport { useAppSelector } from '@/store'\nimport { hasFeature } from '@/utils/chains'\nimport { hasRemainingRelays } from '@/utils/relaying'\nimport { Box, Button, CircularProgress, Divider, Grid, Typography } from '@mui/material'\nimport type { DeploySafeProps } from '@safe-global/protocol-kit'\nimport { FEATURES } from '@/utils/chains'\nimport React, { useContext, useMemo, useState } from 'react'\nimport { getLatestSafeVersion } from '@/utils/chains'\nimport { sameAddress } from '@/utils/addresses'\nimport { useEstimateSafeCreationGas } from '@/components/new-safe/create/useEstimateSafeCreationGas'\nimport useIsWrongChain from '@/hooks/useIsWrongChain'\nimport NetworkWarning from '@/components/new-safe/create/NetworkWarning'\nimport CheckWallet from '@/components/common/CheckWallet'\nimport { getSafeToL2SetupDeployment } from '@safe-global/safe-deployments'\n\nconst useActivateAccount = (undeployedSafe: UndeployedSafe | undefined) => {\n  const chain = useCurrentChain()\n  const [gasPrice] = useGasPrice()\n  const safeVersion =\n    undeployedSafe &&\n    (isPredictedSafeProps(undeployedSafe?.props)\n      ? undeployedSafe?.props.safeDeploymentConfig?.safeVersion\n      : undeployedSafe?.props.safeVersion)\n\n  const { gasLimit } = useEstimateSafeCreationGas(undeployedSafe?.props, safeVersion)\n\n  const isEIP1559 = chain && hasFeature(chain, FEATURES.EIP1559)\n  const maxFeePerGas = gasPrice?.maxFeePerGas\n  const maxPriorityFeePerGas = gasPrice?.maxPriorityFeePerGas\n\n  const options: DeploySafeProps['options'] = isEIP1559\n    ? {\n        maxFeePerGas: maxFeePerGas?.toString(),\n        maxPriorityFeePerGas: maxPriorityFeePerGas?.toString(),\n        gasLimit: gasLimit?.toString(),\n      }\n    : { gasPrice: maxFeePerGas?.toString(), gasLimit: gasLimit?.toString() }\n\n  const totalFee = getTotalFeeFormatted(maxFeePerGas, gasLimit, chain)\n  const walletCanPay = useWalletCanPay({ gasLimit, maxFeePerGas })\n\n  return { options, totalFee, walletCanPay }\n}\n\nconst ActivateAccountFlow = () => {\n  const [isSubmittable, setIsSubmittable] = useState<boolean>(true)\n  const [submitError, setSubmitError] = useState<Error | undefined>()\n  const [executionMethod, setExecutionMethod] = useState(ExecutionMethod.RELAY)\n\n  const chain = useCurrentChain()\n  const chainId = useChainId()\n  const { safeAddress } = useSafeInfo()\n  const undeployedSafe = useAppSelector((state) => selectUndeployedSafe(state, chainId, safeAddress))\n  const { setTxFlow } = useContext(TxModalContext)\n  const wallet = useWallet()\n  const { options, totalFee, walletCanPay } = useActivateAccount(undeployedSafe)\n  const isWrongChain = useIsWrongChain()\n\n  const undeployedSafeSetup = useMemo(\n    () => extractCounterfactualSafeSetup(undeployedSafe, chainId),\n    [undeployedSafe, chainId],\n  )\n\n  const safeAccountConfig =\n    undeployedSafe && isPredictedSafeProps(undeployedSafe?.props) ? undeployedSafe?.props.safeAccountConfig : undefined\n\n  const ownerAddresses = undeployedSafeSetup?.owners || []\n  const [minRelays] = useLeastRemainingRelays(ownerAddresses)\n\n  // Every owner has remaining relays and relay method is selected\n  const canRelay = hasRemainingRelays(minRelays)\n  const willRelay = canRelay && executionMethod === ExecutionMethod.RELAY\n\n  if (!undeployedSafe || !undeployedSafeSetup) return null\n\n  const { owners, threshold, safeVersion } = undeployedSafeSetup\n\n  const safeToL2SetupDeployment = getSafeToL2SetupDeployment({ version: '1.4.1', network: chain?.chainId })\n  const safeToL2SetupAddress = safeToL2SetupDeployment?.defaultAddress\n  const isMultichainSafe = sameAddress(safeAccountConfig?.to, safeToL2SetupAddress)\n\n  const onSubmit = (txHash?: string) => {\n    trackEvent({ ...TX_EVENTS.CREATE, label: TX_TYPES.activate_without_tx })\n    trackEvent({ ...TX_EVENTS.EXECUTE, label: TX_TYPES.activate_without_tx })\n    trackEvent(WALLET_EVENTS.ONCHAIN_INTERACTION)\n\n    if (txHash) {\n      safeCreationDispatch(SafeCreationEvent.PROCESSING, { groupKey: CF_TX_GROUP_KEY, txHash, safeAddress })\n    }\n    setTxFlow(undefined)\n  }\n\n  const createSafe = async () => {\n    if (!wallet || !chain) return\n\n    trackEvent({ ...OVERVIEW_EVENTS.PROCEED_WITH_TX, label: TX_TYPES.activate_without_tx })\n\n    setIsSubmittable(false)\n    setSubmitError(undefined)\n\n    try {\n      if (willRelay) {\n        const taskId = await relaySafeCreation(chain, undeployedSafe.props)\n        safeCreationDispatch(SafeCreationEvent.RELAYING, { groupKey: CF_TX_GROUP_KEY, taskId, safeAddress })\n\n        onSubmit()\n      } else {\n        await createNewSafe(\n          wallet.provider,\n          undeployedSafe.props,\n          safeVersion ?? getLatestSafeVersion(chain),\n          chain,\n          options,\n          onSubmit,\n          isMultichainSafe ? true : undefined,\n        )\n      }\n    } catch (_err) {\n      const err = asError(_err)\n      setIsSubmittable(true)\n      setSubmitError(err)\n      return\n    }\n  }\n\n  const submitDisabled = !isSubmittable || isWrongChain\n\n  return (\n    <TxLayout title=\"Activate account\" hideNonce>\n      <TxCard>\n        <Typography>\n          You&apos;re about to deploy this Safe Account and will have to confirm the transaction with your connected\n          wallet.\n        </Typography>\n\n        <Divider sx={{ mx: -3, my: 2 }} />\n\n        <SafeSetupOverview\n          owners={owners.map((owner) => ({ name: '', address: owner }))}\n          threshold={threshold}\n          networks={chain ? [chain] : []}\n        />\n\n        <Divider sx={{ mx: -3, mt: 2, mb: 1 }} />\n        <Box display=\"flex\" flexDirection=\"column\" gap={3}>\n          {canRelay && (\n            <Grid container spacing={3}>\n              <ReviewRow\n                name=\"Execution method\"\n                value={\n                  <ExecutionMethodSelector\n                    executionMethod={executionMethod}\n                    setExecutionMethod={setExecutionMethod}\n                    relays={minRelays}\n                  />\n                }\n              />\n            </Grid>\n          )}\n\n          <Grid data-testid=\"network-fee-section\" container spacing={3}>\n            <ReviewRow\n              name=\"Est. network fee\"\n              value={\n                <>\n                  <NetworkFee totalFee={totalFee} isWaived={willRelay || isWrongChain} chain={chain} />\n\n                  {!willRelay && (\n                    <Typography variant=\"body2\" color=\"text.secondary\" mt={1}>\n                      {isWrongChain\n                        ? `Switch your connected wallet to ${chain?.chainName} to see the correct estimated network fee`\n                        : 'You will have to confirm a transaction with your connected wallet.'}\n                    </Typography>\n                  )}\n                </>\n              }\n            />\n          </Grid>\n\n          {submitError && (\n            <Box mt={1}>\n              <ErrorMessage error={submitError}>Error submitting the transaction. Please try again.</ErrorMessage>\n            </Box>\n          )}\n          {isWrongChain && <NetworkWarning />}\n          {!walletCanPay && !willRelay && (\n            <ErrorMessage>\n              Your connected wallet doesn&apos;t have enough funds to execute this transaction\n            </ErrorMessage>\n          )}\n        </Box>\n\n        <Divider sx={{ mx: -3, mt: 2, mb: 1 }} />\n\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\" gap={3}>\n          <CheckWallet checkNetwork={!submitDisabled} allowNonOwner allowUndeployedSafe>\n            {(isOk) => (\n              <Button\n                data-testid=\"activate-account-flow-btn\"\n                onClick={createSafe}\n                variant=\"contained\"\n                size=\"stretched\"\n                disabled={!isOk || submitDisabled}\n              >\n                {!isSubmittable ? <CircularProgress size={20} /> : 'Activate'}\n              </Button>\n            )}\n          </CheckWallet>\n        </Box>\n      </TxCard>\n    </TxLayout>\n  )\n}\n\nexport default ActivateAccountFlow\n","import { EventType } from '../types'\n\nexport enum TX_TYPES {\n  // Settings\n  owner_add = 'owner_add',\n  owner_remove = 'owner_remove',\n  owner_swap = 'owner_swap',\n  owner_threshold_change = 'owner_threshold_change',\n\n  // Module txs\n  guard_remove = 'guard_remove',\n  module_remove = 'module_remove',\n\n  // Transfers\n  transfer_token = 'transfer_token',\n  transfer_nft = 'transfer_nft',\n\n  // Other\n  batch = 'batch',\n  rejection = 'rejection',\n  typed_message = 'typed_message',\n  nested_safe = 'nested_safe',\n  walletconnect = 'walletconnect',\n  custom = 'custom',\n  native_bridge = 'native_bridge',\n  native_swap = 'native_swap',\n  bulk_execute = 'bulk_execute',\n\n  // Counterfactual\n  activate_without_tx = 'activate_without_tx',\n  activate_with_tx = 'activate_with_tx',\n}\n\nconst TX_CATEGORY = 'transactions'\n\nexport const TX_EVENTS = {\n  CREATE: {\n    event: EventType.TX_CREATED,\n    action: 'Create transaction',\n    category: TX_CATEGORY,\n    // label: TX_TYPES,\n  },\n  CREATE_VIA_ROLE: {\n    event: EventType.TX_CREATED,\n    action: 'Create via role',\n    category: TX_CATEGORY,\n  },\n  CREATE_VIA_SPENDING_LIMTI: {\n    event: EventType.TX_CREATED,\n    action: 'Create via spending limit',\n    category: TX_CATEGORY,\n  },\n  CREATE_VIA_PROPOSER: {\n    event: EventType.TX_CREATED,\n    action: 'Create via proposer',\n    category: TX_CATEGORY,\n  },\n  CONFIRM: {\n    event: EventType.TX_CONFIRMED,\n    action: 'Confirm transaction',\n    category: TX_CATEGORY,\n  },\n  EXECUTE: {\n    event: EventType.TX_EXECUTED,\n    action: 'Execute transaction',\n    category: TX_CATEGORY,\n  },\n  SPEED_UP: {\n    event: EventType.TX_EXECUTED,\n    action: 'Speed up transaction',\n    category: TX_CATEGORY,\n  },\n  EXECUTE_VIA_SPENDING_LIMIT: {\n    event: EventType.TX_EXECUTED,\n    action: 'Execute via spending limit',\n    category: TX_CATEGORY,\n  },\n  EXECUTE_VIA_ROLE: {\n    event: EventType.TX_EXECUTED,\n    action: 'Execute via role',\n    category: TX_CATEGORY,\n  },\n  CREATE_VIA_PARENT: {\n    event: EventType.TX_CREATED,\n    action: 'Create via parent',\n    category: TX_CATEGORY,\n  },\n  CONFIRM_VIA_PARENT: {\n    event: EventType.TX_CREATED,\n    action: 'Confirm via parent',\n    category: TX_CATEGORY,\n  },\n  EXECUTE_VIA_PARENT: {\n    event: EventType.TX_CREATED,\n    action: 'Execute via parent',\n    category: TX_CATEGORY,\n  },\n  CONFIRM_IN_PARENT: {\n    event: EventType.TX_CONFIRMED,\n    action: 'Confirm in parent',\n    category: TX_CATEGORY,\n  },\n  EXECUTE_IN_PARENT: {\n    event: EventType.TX_EXECUTED,\n    action: 'Execute in parent',\n    category: TX_CATEGORY,\n  },\n}\n","import { TransactionInfoType } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { Transaction, TransactionListItem } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport { isConflictHeaderListItem, isNoneConflictType, isTransactionListItem } from '@/utils/transaction-guards'\nimport { sameAddress } from './addresses'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\n\ntype GroupedTxs = Array<TransactionListItem | Transaction[]>\n\nexport const groupTxs = (list: TransactionListItem[]) => {\n  const groupedByConflicts = groupConflictingTxs(list)\n  return groupBulkTxs(groupedByConflicts)\n}\n\n/**\n * Group txs by conflict header\n */\nexport const groupConflictingTxs = (list: TransactionListItem[]): GroupedTxs => {\n  return list\n    .reduce<GroupedTxs>((resultItems, item) => {\n      if (isConflictHeaderListItem(item)) {\n        return resultItems.concat([[]])\n      }\n\n      const prevItem = resultItems[resultItems.length - 1]\n      if (Array.isArray(prevItem) && isTransactionListItem(item) && !isNoneConflictType(item)) {\n        prevItem.push(item)\n        return resultItems\n      }\n\n      return resultItems.concat(item)\n    }, [])\n    .map((item) => {\n      if (Array.isArray(item)) {\n        return item.sort((a, b) => b.transaction.timestamp - a.transaction.timestamp)\n      }\n      return item\n    })\n}\n\n/**\n * Group txs by tx hash\n */\nconst groupBulkTxs = (list: GroupedTxs): GroupedTxs => {\n  return list\n    .reduce<GroupedTxs>((resultItems, item) => {\n      if (Array.isArray(item) || !isTransactionListItem(item)) {\n        return resultItems.concat([item])\n      }\n      const currentTxHash = item.transaction.txHash\n\n      const prevItem = resultItems[resultItems.length - 1]\n      if (!Array.isArray(prevItem)) return resultItems.concat([[item]])\n      const prevTxHash = prevItem[0].transaction.txHash\n\n      if (currentTxHash && currentTxHash === prevTxHash) {\n        prevItem.push(item)\n        return resultItems\n      }\n\n      return resultItems.concat([[item]])\n    }, [])\n    .map((item) => (Array.isArray(item) && item.length === 1 ? item[0] : item))\n}\n\nexport function _getRecoveryCancellations(moduleAddress: string, transactions: Array<Transaction>) {\n  const CANCELLATION_TX_METHOD_NAME = 'setTxNonce'\n\n  return transactions.filter(({ transaction }) => {\n    const { txInfo } = transaction\n    return (\n      txInfo.type === TransactionInfoType.CUSTOM &&\n      sameAddress(txInfo.to.value, moduleAddress) &&\n      txInfo.methodName === CANCELLATION_TX_METHOD_NAME\n    )\n  })\n}\n\ntype GroupedRecoveryQueueItem = Transaction | RecoveryQueueItem\n\nexport function groupRecoveryTransactions(queue: Array<TransactionListItem>, recoveryQueue: Array<RecoveryQueueItem>) {\n  const transactions = queue.filter(isTransactionListItem)\n\n  return recoveryQueue.reduce<Array<RecoveryQueueItem | Array<GroupedRecoveryQueueItem>>>((acc, item) => {\n    const cancellations = _getRecoveryCancellations(item.address, transactions)\n\n    if (cancellations.length === 0) {\n      acc.push(item)\n    } else {\n      acc.push([item, ...cancellations])\n    }\n\n    return acc\n  }, [])\n}\n\nexport const getLatestTransactions = (list: TransactionListItem[] = []): Transaction[] => {\n  return (\n    groupConflictingTxs(list)\n      // Get latest transaction if there are conflicting ones\n      .map((group) => (Array.isArray(group) ? group[0] : group))\n      .filter(isTransactionListItem)\n  )\n}\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgClose = function SvgClose(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 15,\n    viewBox: \"0 0 15 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8.47717 7.69172L13.7585 12.832C14.1467 13.2098 14.1467 13.8275 13.7585 14.2052C13.3694 14.583 12.7358 14.583 12.3476 14.2052L7.06626 9.06494L1.7849 14.2052C1.39575 14.583 0.76214 14.583 0.373991 14.2052C-0.0151556 13.8275 -0.0151556 13.2098 0.373991 12.832L5.65536 7.69172L0.373891 2.55133C-0.0152554 2.17354 -0.0152554 1.55589 0.373891 1.17811C0.76204 0.799355 1.39565 0.799355 1.7848 1.17811L7.06626 6.3185L12.3477 1.17811C12.7359 0.799355 13.3695 0.799355 13.7586 1.17811C14.1468 1.55589 14.1468 2.17354 13.7586 2.55133L8.47717 7.69172Z\",\n    fill: \"currentColor\"\n  })));\n};\nexport default SvgClose;"],"names":["useActivateAccount","undeployedSafe","chain","useCurrentChain","gasPrice","useGasPrice","safeVersion","isPredictedSafeProps","props","safeDeploymentConfig","gasLimit","useEstimateSafeCreationGas","isEIP1559","hasFeature","FEATURES","EIP1559","maxFeePerGas","maxPriorityFeePerGas","options","toString","totalFee","getTotalFeeFormatted","walletCanPay","useWalletCanPay","isSubmittable","setIsSubmittable","useState","submitError","setSubmitError","ActivateAccountFlow","executionMethod","setExecutionMethod","ExecutionMethod","RELAY","chainId","useChainId","safeAddress","useSafeInfo","useAppSelector","selectUndeployedSafe","state","setTxFlow","useContext","TxModalContext","wallet","useWallet","isWrongChain","useIsWrongChain","undeployedSafeSetup","useMemo","extractCounterfactualSafeSetup","safeAccountConfig","undefined","ownerAddresses","owners","minRelays","useLeastRemainingRelays","canRelay","hasRemainingRelays","willRelay","threshold","safeToL2SetupDeployment","getSafeToL2SetupDeployment","version","network","safeToL2SetupAddress","defaultAddress","isMultichainSafe","sameAddress","to","onSubmit","txHash","trackEvent","TX_EVENTS","CREATE","label","TX_TYPES","activate_without_tx","EXECUTE","WALLET_EVENTS","ONCHAIN_INTERACTION","safeCreationDispatch","SafeCreationEvent","PROCESSING","groupKey","CF_TX_GROUP_KEY","createSafe","OVERVIEW_EVENTS","PROCEED_WITH_TX","taskId","relaySafeCreation","RELAYING","createNewSafe","provider","getLatestSafeVersion","_err","err","asError","submitDisabled","TxLayout","title","hideNonce","TxCard","Typography","Divider","sx","mx","my","SafeSetupOverview","map","name","address","owner","networks","mt","mb","Box","display","flexDirection","gap","Grid","container","spacing","ReviewRow","value","ExecutionMethodSelector","relays","data-testid","NetworkFee","isWaived","variant","color","chainName","ErrorMessage","error","NetworkWarning","justifyContent","CheckWallet","checkNetwork","allowNonOwner","allowUndeployedSafe","Button","onClick","size","disabled","isOk","CircularProgress","TX_CATEGORY","event","EventType","TX_CREATED","action","category","CREATE_VIA_ROLE","CREATE_VIA_SPENDING_LIMTI","CREATE_VIA_PROPOSER","CONFIRM","TX_CONFIRMED","TX_EXECUTED","SPEED_UP","EXECUTE_VIA_SPENDING_LIMIT","EXECUTE_VIA_ROLE","CREATE_VIA_PARENT","CONFIRM_VIA_PARENT","EXECUTE_VIA_PARENT","CONFIRM_IN_PARENT","EXECUTE_IN_PARENT","groupTxs","groupBulkTxs","groupConflictingTxs","list","reduce","resultItems","item","isConflictHeaderListItem","concat","prevItem","length","isArray","isTransactionListItem","isNoneConflictType","push","sort","a","b","transaction","timestamp","Array","currentTxHash","prevTxHash","groupRecoveryTransactions","queue","recoveryQueue","transactions","filter","acc","cancellations","moduleAddress","_getRecoveryCancellations","txInfo","type","TransactionInfoType","CUSTOM","methodName","CANCELLATION_TX_METHOD_NAME","getLatestTransactions","group"],"sourceRoot":"","ignoreList":[]}