{"version":3,"file":"static/chunks/9909.a2756a592a694cf9.js","mappings":"4MAqCA,MA1BiB,OAAC,SAAEA,CAAO,CAAiB,GACpC,MAyBeC,EAAA,GAzBbC,CAAS,CAAEC,gBAAc,UAAEC,CAAQ,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACC,EAAAA,CAAaA,EAQxE,MANAC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACRH,EAASJ,GAETQ,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACR,GAASS,IAAI,CAACP,GAAWQ,KAAK,CAACP,EAChD,EAAG,CAACH,EAASI,EAAUF,EAAWC,EAAe,EAG/C,WAACQ,EAAAA,CAAiBA,CAAAA,CAACC,YAAa,GAAOC,WAAW,cAChD,UAACC,EAAAA,GAAUA,CAAAA,CAACC,GAAI,WAAG,6GAInB,WAACD,EAAAA,GAAUA,CAAAA,CAACC,GAAI,YAAG,sBACE,UAACC,IAAAA,UAAGhB,OAGzB,UAACc,EAAAA,GAAUA,CAAAA,CAACC,GAAI,WAAG,+FAKzB,ECnBA,EARqB,OAAC,SAAEf,CAAO,CAAiB,GAC9C,MACE,UAACiB,EAAAA,CAAQA,CAAAA,CAACC,MAAM,sBAAsBC,SAAS,SAASC,KAAM,WAC5D,UAACnB,EAAQA,CAACD,QAASA,KAGzB,CAHeC","sources":["webpack://_N_E/./src/components/tx-flow/flows/RejectTx/RejectTx.tsx","webpack://_N_E/./src/components/tx-flow/flows/RejectTx/index.tsx"],"sourcesContent":["import type { ReactElement } from 'react'\nimport { Typography } from '@mui/material'\nimport SignOrExecuteForm from '@/components/tx/SignOrExecuteForm'\nimport { createRejectTx } from '@/services/tx/tx-sender'\nimport { useContext, useEffect } from 'react'\nimport { SafeTxContext } from '../../SafeTxProvider'\n\ntype RejectTxProps = {\n  txNonce: number\n}\n\nconst RejectTx = ({ txNonce }: RejectTxProps): ReactElement => {\n  const { setSafeTx, setSafeTxError, setNonce } = useContext(SafeTxContext)\n\n  useEffect(() => {\n    setNonce(txNonce)\n\n    createRejectTx(txNonce).then(setSafeTx).catch(setSafeTxError)\n  }, [txNonce, setNonce, setSafeTx, setSafeTxError])\n\n  return (\n    <SignOrExecuteForm isBatchable={false} isRejection>\n      <Typography mb={2}>\n        To reject the transaction, a separate rejection transaction will be created to replace the original one.\n      </Typography>\n\n      <Typography mb={2}>\n        Transaction nonce: <b>{txNonce}</b>\n      </Typography>\n\n      <Typography mb={2}>\n        You will need to confirm the rejection transaction with your currently connected wallet.\n      </Typography>\n    </SignOrExecuteForm>\n  )\n}\n\nexport default RejectTx\n","import type { ReactElement } from 'react'\nimport TxLayout from '../../common/TxLayout'\nimport RejectTx from './RejectTx'\n\ntype RejectTxProps = {\n  txNonce: number\n}\n\nconst RejectTxFlow = ({ txNonce }: RejectTxProps): ReactElement => {\n  return (\n    <TxLayout title=\"Confirm transaction\" subtitle=\"Reject\" step={0}>\n      <RejectTx txNonce={txNonce} />\n    </TxLayout>\n  )\n}\n\nexport default RejectTxFlow\n"],"names":["txNonce","RejectTx","setSafeTx","setSafeTxError","setNonce","useContext","SafeTxContext","useEffect","createRejectTx","then","catch","SignOrExecuteForm","isBatchable","isRejection","Typography","mb","b","TxLayout","title","subtitle","step"],"sourceRoot":"","ignoreList":[]}