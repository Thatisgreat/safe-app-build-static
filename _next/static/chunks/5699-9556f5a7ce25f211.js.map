{"version":3,"file":"static/chunks/5699-9556f5a7ce25f211.js","mappings":"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hC,0CACA,YAAwB,KAAQ,MAChC,eACA,WACA,OACA,SACA,iBACA,mBACA,YAA4B,KAAQ,MACpC,UACA,WAEA,CAEA,WACA,OACA,YAAwB,KAAQ,KAChC,YACA,YACA,YACA,QACA,OACA,SACA,OACA,QACA,CAEA,YAAwB,KAAQ,OAChC,YAA4B,KAAQ,IACpC,YACA,YAA4B,KAAQ,IACpC,iCAGA,YACA,YAEA,SACA,EAyBA,0BACa,IACD,GAAU,cACtB,cACA,UACA,CACA,UACQ,EAAO,MACf,aAAgB,WAAkB,KAElC,EADA,GAAe,GAAO,IACtB,MADsB,CAEtB,YAA0B,KAAU,KACpC,2BACA,YAA4B,IAAU,IACtC,sBACA,cACA,aACA,CACA,YAEA,SACA,iBACA,MACA,kBACA,IAAgB,mCAA+B,KAE/C,QACA,qBACA,cACA,YACA,aACA,CACA,aACQ,EAAO,SACP,EAAM,GACd,SADc,EACd,GACA,iBACA,UAAgB,GAAW,KAC3B,uBAA4C,KAAU,KACtD,YACA,cACA,kCACA,+CACA,eACA,IACA,CACA,QACA,CACA,WAEA,mBACA,qDACA,wBACA,CACA,OAEA,OADQ,EAAO,GACf,EADe,EACf,2BACA,CACA,cAEA,IH1IA,OGyIe,EHzIf,KACI,EAAM,GACV,SADU,QACV,CACA,cACA,uEAEA,EGmIe,QACf,cACA,2CAGA,OAFA,kBACA,eACA,CACA,CACA,SACA,sDACA,CACA,UACA,kBACA,kBACA,CACA,cACA,aAAgB,6CAAiD,KAYjE,OAXA,yBACA,4BACA,eACA,qBACA,yBACA,WAEA,WACA,cACA,cACA,2BACA,CACA,CACA,CAeO,ODxDA,YACP,oBAA6C,GAAO,aACpD,MAIA,OAHA,wBACA,sBACA,iBACA,CACA,ECmC4D,WAcrD,WC3MA,iBAEP,MAAkB,GAAW,EAAK,KAAN,KAAgB,GAAe,EAAI,EAAO,YACtE,UAFA,WAGA,EACW,EAAK,EAChB,CADgB,ICJhB,OAA+C,EAAM,MCHrD,mBAAqC,GAAG,GAEjC,OAAyC,EAAM,MAC/C,SAAS,GAAS,KACzB,WADyB,EACb,IAAgB,MAC5B,KAAwB,EAAQ,GAAG,EAAO,EAC1C,aACA,iBACA,MACA,eAEA,sBAEA,GDTO,YAWP,EACA,CCFkC,EDElC,UAAoC,SAAS,GAAG,CAAQ,EACxD,KADwD,EACxD,UAA2C,EAAS,GAAG,KAFvD,EAE+D,GAC/D,QACA,GAAa,EAAQ,EAAE,gBAAuB,EAC9C,6BACA,EAAiB,GAAU,EAAa,IAAd,OAAc,CACxC,oBAAuD,EAAQ,yBAC/D,YAAoB,KAAQ,KAC5B,qBACA,0BAEA,yBACA,8BAGA,WAAwB,WAAiB,EAEzC,OADA,UAAgC,EAAS,GAAG,EAAQ,KACpD,CACA,ECpBkC,QAIlC,OADA,YACA,CACA,CCXO,0BAAoC,GAAS,EAAI,SACxD,EAAa,UAAU,GAAe,EACtC,SA+CO,OAAwC,UAAS,EAAI,EAC5D,QACA,WAAuB,EACvB,iBACA,gCAA6D,EAG7D,OAFA,GACA,UACA,CACA,EAvDA,OACA,QACA,CAAS,EACT,SA8BO,cAA0C,GAAS,EAAI,EAC9D,QACA,mBAGA,OAFA,GACA,UACA,CACA,EApCA,OACA,QACA,CAAK,CACL,CACA,iBACA,8BAA0D,EAAI,KAC9D,EAD8D,IAC9D,IAAkB,EAA2B,CAC7C,SACA,eAF6C,EAG7C,KAAkB,EAAI,EACtB,CAAS,CACT,CACA,EAHsB,OAGtB,UACA,uBACA,oBACQ,EAAI,SACZ,UAAkB,EAA2B,CAC7C,SACA,eACA,KAAkB,EAAI,EACtB,CAAS,CAET,CClCO,ED+Be,EC/Bf,0CAGA,oICwCA,iBACP,uBACA,UAAkB,EAA8B,CAChD,wBACA,GAFgD,SAEhD,SACS,EAMT,SAJA,SASA,QAAyB,WAAiB,EAC1C,SACA,YAAoB,WAAmB,IACvC,gBAIA,SAAwB,UAAe,EACvC,eA8LO,GACP,kCACA,SAEA,8BACA,MACA,EApMA,QACA,MACA,WACA,gBAgEA,UAA8B,UAAgB,EAC9C,eACA,qBACA,UAAkB,EAAiB,GACnC,YADmC,GACnC,KACA,UAAkB,EAAmC,CACrD,iBACA,eAFqD,KAErD,CACA,QAAqB,OAAW,GAAG,EAAO,GACjC,EACT,SACA,KACA,YAAoB,WAAkB,KACtC,eAA6C,aAAwB,CACrE,YACA,OACA,SACA,CACA,SACA,YACA,MACA,MAA2B,EAAW,UAA0B,QAAU,EAC1E,OACA,WACA,mBAAqD,EAAM,QAC3D,CACA,CACA,KACA,OAAqB,qBACrB,CACA,OACA,WACA,QAAiB,EAAM,gBAAuB,EAAS,MACvD,CACA,EAlGA,UAAoC,SAAiB,aAAkB,CACvE,CACA,oBACA,gBAmKA,SAA8B,EAAO,EACrC,SACA,KACA,YAAoB,sBAA6B,KACjD,sBACA,4BACA,KACA,QACA,WACS,EACT,UACA,WACA,MACA,CACA,OACA,UACA,UACA,MACc,EAAM,gBAAuB,EAAS,MACpD,CACA,EAvLA,GACA,OACA,CAAS,EAET,sBACA,gBAmDA,GACA,IAAS,GAAS,GAClB,UAAkB,EAAmB,CADnB,QACsB,EAAgB,EACxD,OAAa,KADwB,GACxB,WAAyB,EAAM,iBAC5C,EAvDA,GAEA,mBACA,gBAgHA,GACA,uBACA,UAAkB,EAAS,2BAA4B,EAAM,WAAW,SAAa,sCACrF,OAAa,mBAAyB,EAAO,EAAS,EAAV,CAAU,CACtD,EApHA,CAmHsD,EAjHtD,wDACA,+BACA,YAAmC,GAAY,iBAC/C,gBAgHA,UAA+B,aAAoB,EACnD,uBACA,mCACA,aACA,YACA,UAAsB,EAAsB,CAC5C,iBACA,EAF4C,EAE5C,aACA,SACA,SACA,kBACA,CAAa,CACb,CACA,OACA,WACA,QAAiB,EAAW,GAC5B,MAD4B,EAE5B,QACA,CAAS,CACT,CACA,EApIA,GACA,SACA,cACA,CAAS,CACT,CACA,8BACA,gBA6EA,SAA8B,EAAO,EACrC,8BACA,EAAsB,EAAI,GAC1B,IAD0B,EAC1B,CACA,QAQA,OALA,SACA,GAAqB,EAAM,GAC3B,CAD2B,GAC3B,QACA,oCACA,EAAa,EACb,CACA,WACA,QAAqB,EAAM,CAAE,EAAO,CAAT,CAAoB,GAAc,MAAd,CAAc,CAAU,MACvE,CACA,CACA,0BACA,UAAkB,EAAiC,CACnD,8BADmD,EAEnD,OACA,CAAS,EACT,OAAa,mBAAyB,EAAM,GAAU,CAAV,GAAU,QAAc,EACpE,EApGA,SAAoC,EAAO,EAE3C,qBACA,gBA4HA,GACA,MAAqB,EAAW,GAChC,MADgC,CAChC,KAAkC,EAAI,SACtC,GACA,YAAoB,IAAiB,IACrC,OAAmB,EAAO,GAAK,CAAN,CAAM,gBAC/B,WACA,CAAS,GAET,OACA,WACA,QAAiB,EAAM,CACX,EAAO,CADI,CACQ,EAAb,GAAiB,CAAc,GAAnB,EAAmB,GAAU,MAC3D,EACA,CACA,CACA,EA5IA,EAEA,WAAc,EAA2B,QACzC,iBADyC,4BAEzC,CAAK,CACL,EAtCA,CAA2C,sBAAoC,GAE/E,QACA,EAfA,CACA,SACA,QACA,CAAK,UAEL,aACA,KACA,CACA,CA2CA,eAEA,QACA,YAAoB,WAA2B,KAC/C,YAAgB,aAAmB,KACnC,EACA,MAEA,GAA0B,EAAI,EAC9B,CAEA,SACA,KACA,IACA,YAAoB,WAA2B,KAC/C,IAAgB,qBAAmB,KACnC,GACA,OAA8B,EAAW,KAA6B,IAA7B,CAA6B,GAAU,GAChF,UACA,GAA2B,EAAI,IAG/B,GAH+B,GAG/B,GAEA,CAEA,OAAW,EAAM,YACjB,CCjIA,UAAwB,GAAU,EAAO,IEAzC,CFAyC,EEAzC,gCCYO,eACP,SACA,WACA,YAAoB,IAAY,IAEhC,GDNO,cACP,aACA,sCACA,MACA,0BACA,YAAwB,IAAY,IAEpC,KADA,iBAEA,OACA,UAEA,MAAuB,SDtBhB,KACP,gBACA,gBACA,ECmBgC,WAEhC,OADA,OAAoB,aAAoB,EACxC,GACA,KACA,MACA,CAAS,CACT,OAKA,CAHA,0BACA,MAAkB,GAAM,UAExB,QACA,GAAkB,GAAM,EAAE,OAAkB,EAC5C,CACA,ECpBA,MAEA,SACA,UAEA,QACA,CGLO,UAMI,CDxBJ,YACP,KCuB6B,CDvB7B,GACA,KACA,IACA,KACA,KACA,YAAoB,WAAsB,KAC1C,WAUA,GARA,2BACA,OAEA,SACA,IACA,SACA,IAEA,GAGA,UACA,gDACA,UAIA,GAFA,KAEA,SACA,KACA,KACA,CAEA,QACA,CAEA,YAEA,kCACA,KACA,MAEA,QACA,CACA,KACA,KACA,CACA,MACA,UAAkB,EAAS,kCAC3B,SACA,EC5BA,mBACA,EFfO,SAAS,CAAa,QAC7B,SEe4B,IFf5B,KAD6B,CAC7B,CACA,YAA2B,OAAa,GAAG,GAAmB,UAAiB,GAAG,GAApB,cAAoB,mCAClF,IAAkB,kBAAwB,EAC1C,GAAiB,EAAE,kBACnB,aAA2B,GAAmB,WAAkB,GAChE,EAD8C,CAC7B,EACjB,iBACA,SAAwB,OAAa,GAAG,GAAmB,UAAiB,GAC5E,GAD2D,OAC3D,OACA,SAAwB,OAAa,GAAG,GAAmB,UAAiB,GAC5E,GAD2D,aAC3D,OACA,eAA8B,GAAmB,UAAiB,GAAG,GAApB,SAAoB,gCAAwD,EAC7H,oBACA,sBAAqC,4CAAwD,EAC7F,4BACA,EEA4B,IEdrB,MAAmC,GRL1C,EQK+C,CAAC,GAAe,SGL/D,uCCDO,eACP,SAAY,GAAO,EACnB,CAAY,sBAAoB,IAChC,cACA,iCACA,EACe,SDJR,GACP,QAAY,KCG4B,EDH5B,kBAA0B,EACtC,OACA,MACA,MDJO,gBAiBP,EAhBA,QAAY,oBAAuB,EACnC,EAAuB,EAAK,UAAS,GAAe,EACpD,cACA,EACA,oBACuB,GAAkB,OACzC,QADyC,EACzC,QVRA,GOEyB,GGOa,QAGtC,CAHsC,QAGtC,eAEA,iBAEA,gBACA,YAEA,eACA,iBAEA,qBACA,kCACA,SACA,QACA,CACA,aAEA,qBAEA,4BAEA,gBACA,sCACA,KAEA,SAyBO,OACP,eACA,SACA,UACA,cACA,OAAmB,GAAS,GAAQ,UAAe,CACnD,EAD4B,GAC5B,OACA,mBACA,gBAEA,aADA,kBAGA,SACA,iCACA,gDACA,0BAIA,0IACA,iCAGA,kDACA,4CAGA,gBAA6B,IAAI,SAAS,GAAG,eAC7C,yBACA,gBACA,KAEA,yBAAiE,GAAG,SACpE,CAAqB,GAErB,QAEA,CACA,EA/DA,IACA,CAAS,EACT,CAEA,MACA,cACA,UACA,eA0DO,SACP,gBACA,WACA,OACA,qBACA,kBACA,kBACA,iBACA,yCACA,sBAUA,GARA,+CAEA,6CAEA,6CADuB,GAAS,MAAyB,UAAe,EAMxE,QACA,CAEA,EAjFA,qBACA,KACA,UAA8B,EAAqB,CACnD,UACA,QAFmD,CAEnD,CACqB,EACrB,UACA,UACqB,CACrB,CACA,GACA,SAEA,GAEA,KACA,ECvD+B,CAC/B,MACA,OACA,MACA,CAAS,EACT,MACA,UAAsB,EAAwB,YAAiB,GAAU,EACzE,GACA,CACA,CAH8C,EAG9C,oBACA,UAAkB,EAAwB,QAAc,YAAU,EAAxB,MAC1C,CACA,QACA,aAAsB,GAAmB,EAAa,GACtD,CACA,ECfwC,GAExC,EDWsD,CCXtD,IAKA,OAAW,EAAS,CAJpB,EAIoB,CAHpB,GAGoB,QAHpB,YACU,GAAmB,qBAC7B,IACoB,MACpB,CIjBO,IAAM,GAAS,kCACtB,wCACA,mCACA,CAAC,GCDM,kBAAiC,EACxC,OADiD,KACjD,QAAkB,EAAQ,EAC1B,yBAAiC,GAAS,GAAS,KACnD,QAD0C,KAC1C,oCACS,CACT,CACA,CACO,iBAAsC,EAC7C,OADsD,KACtD,CAAkB,sBAAqB,EACvC,gCAAwC,EAAY,sBAAsB,+BAAmC,MAC7G,iEACA,kEACS,CACT,CACA,CACO,iBAAqC,EAC5C,OADqD,KACrD,MAAkB,EAAM,EACxB,sBAA8B,EAAK,gBACnC,0DACA,6BACA,CAAS,CACT,CACA,CEiBO,kBAAsB,wBAA2B,EAMxD,OAAW,GALX,MAKoB,GAEpB,GAAsB,6BAA2B,EACjD,QAA4B,eAAiB,EAC7C,YAaA,aAAoB,UAAqB,EAEzC,OAAW,GADiB,EAAK,IACb,KAEb,aAAsB,UAAqB,EAClD,SACA,WAUA,GAAgC,sBAAmC,YACnE,uBACA,SACA,2BACA,SAGA,aADA,SACA,MACA,GAA+B,2BAAgC,IAE/D,QACA,EArBA,aAAgD,UAAoB,EAGpE,aAFA,YACA,6BAEA,MAAqB,EAAK,GAAG,KAC7B,WAAoB,SAAe,MAAQ,GAAG,EAAE,EAAK,GACrD,UAAuB,GAEvB,QACA,EAdiC,aAAc,UAAoB,GAEnE,EAhBA,aAAsC,UAAoB,GAC1D,mBACA,kBAuCA,SAAuB,wBAA2B,EAClD,iBACA,OACA,CAAc,eAAiB,CACnB,GAAS,GAAc,GAAd,EAAc,wBAAuC,GAC1E,CAEA,gBACA,wBAEA,QAAkB,eAAiB,CAAE,GADrC,MAC8C,CADzB,aAAyB,GAE9C,CACA,gBACA,QAAkB,eAAiB,CAAE,GAAU,EAAK,IAAN,CAC9C,oCACA,oCACA,cACA,OACA,OACA,QACA,OACA,CAAS,GACT,OACA,CAAc,eAAiB,CACnB,GAAU,GAAmB,GAApB,EAAoB,8BACzC,CAEA,QAAc,OAAM,KAlEpB,CACA,QACA,YACA,YACA,eACA,CAAS,EACT,UACA,SACA,CACA,OAAW,GAAmB,IAC9B,EArBA,CACA,OACA,EAkB8B,UAlB9B,EACA,OACA,CAAK,EAEL,CE/CO,uBACP,mBACA,SACA,YACA,YAGA,wCACA,CACA,CCRA,MAAM,GACN,UADY,EACZ,GACA,mBACA,CACA,uBAEA,MADA,8BAAsD,EAAO,+BAC7D,KAEA,4BACA,qCACA,UAAsB,GAAgB,iCDZ/B,CCYkE,KAEzE,IAEA,MADA,aAHqG,WAGrG,MAA0D,EAAO,8BACjE,KAEA,MACA,UAAsB,GAAgB,uBDnB/B,CCmBwD,IAC/D,CACA,CACA,sBAH2F,GAG3F,GACA,kBACA,oBACA,0BACA,cAAsC,GAAiB,aAQvD,CARuD,CCxBvD,+CCUA,OAAM,GACN,MADU,MACV,GACA,mBACA,CACA,qBAEA,MADA,8BAAsD,EAAO,sBAC7D,KAEA,gBAEA,MADA,8BAAsD,EAAO,qBAC7D,KAGA,yCAAqC,SAAmB,EAAI,EAI5D,MAHA,8BAAsD,EAAO,iBAC7D,UACA,EAAS,EACT,KAEA,mCACA,2BACA,EAA4C,GAAkB,CAC9D,KACA,CACA,QAH8D,CAG9D,GACA,QACA,CACA,iBACA,cACA,CAAyB,CACzB,CACA,kBACA,YACA,CAAyB,CACzB,CACA,wBACA,SACA,CACA,QACA,aACA,CAAyB,CACzB,CACA,WACA,6BACA,eACA,CAAiB,CACjB,CACA,gCACA,WACS,EACT,GACA,KAAkB,EAAS,SAC3B,QAD2B,CAG3B,iBACA,MACA,CAAiB,CACjB,SACA,EAEA,IAEA,MJ1EA,eIyEA,8BAA0D,EAAO,YACjE,CADiE,GACjE,0BACA,CACA,IAFgE,EAEhE,GACA,MAH2E,CAG3E,CACA,CACA,CACA,wCACA,2BACA,EAA4C,GAAkB,CAC9D,KACA,CACA,QAH8D,CAG9D,GACA,QACA,CACA,aACA,YACA,CAAyB,CACzB,CACA,kBACA,YACA,CAAyB,CACzB,CACA,wBACA,SACA,CACA,QACA,aACA,CAAyB,CACzB,CACA,WACA,6BACA,eACA,CAAiB,CACjB,CACA,gCACA,UACA,CAAS,EACT,GACA,KAAkB,EAAS,SAC3B,QAD2B,CAG3B,iBACA,MACA,CAAiB,CACjB,SACA,EAEA,IAEA,MJ1HA,eIyHA,8BAA0D,EAAO,YACjE,CADiE,GACjE,0BACA,CACA,IAFgE,EAEhE,GACA,QACA,CACA,CACA,EANiF,mBAMjF,GACA,OT/HW,GDCJ,MCDa,ES+HM,CV9HnB,GACP,KCFsC,CDGtC,mBACmB,EAAW,GAC9B,MAD8B,IAC9B,aACA,MACe,EAAU,OAGzB,CAHyB,MAGd,EAAM,CADE,EAAW,CACb,EADiB,MAAJ,cAAwB,CAAC;EAAE,EAAI,IAAU,EACtD,CAD4C,CAC5C,CACjB,EUoH0B,GThInB,OSiIP,CACA,6BACA,wCACA,4BACA,yBACA,gBACA,OACA,6BAEA,2DAAqI,EAAM,4CAC3I,4BACA,0CACA,OAEA,OL3IO,YACP,CK0I4B,EL1I5B,CAAY,WAAW,0BAA0B,EACjD,GACA,aAAsB,SD0Ef,CAAmC,SAAS,EACnD,EC3E6C,ID2E7C,CACA,2BAA8C,0BAA8B,CAC5E,aAA6B,6BAAiC,CAC9D,8BACA,eACA,cACA,CAAS,CACT,uBACA,yBACA,cACA,CAAS,CACT,UAA0B,2BAA+B,CACzD,gBACA,ECxF6C,QAAG,EAAQ,EACxD,aDwBO,YACP,KCrBqB,MDqBT,mCAAsC,EAClD,UACA,gBACA,SAAoB,UAAa,EACjC,OACA,UAA4C,IAC5C,MACA,EAFwD,SAExD,+BACA,aAGgB,EAAW,GAC3B,MAD2B,CAC3B,UACA,yBACA,CAAiB,CACjB,CACA,uCAAoE,GAAS,GAC7E,UAA0B,EAAmB,CADgC,QAC7B,EAAgB,EAChE,YAD6C,CAC7C,CAA0C,IAC1C,MACA,WACA,MAA6B,EAAI,wBACjC,UAA8B,EAAsB,CACpD,mBADoD,CACpD,YACA,UAAmC,EAAI,EACvC,CAAqB,CACrB,CACA,EAHuC,EAGvC,OACA,IACA,SA2CA,GAEA,kBACA,YACA,cACA,uBACA,sBACA,oBACA,UAAkB,GAAsB,MAAG,EAAM,CACjD,EApDA,GACA,KAkDwC,EAhDxC,CACA,EAEA,sBACA,sBACA,UAAsB,GAAkB,QAAG,EAAQ,EACnD,GADwC,CACxC,eACA,CAEA,uBACA,QACA,eAEA,UAAsB,GAAuB,aAAG,OAAH,CAAG,EAAoB,EAEpE,ECpEqB,CACrB,SACA,UACA,cACA,OACA,CAAK,EACL,iBAYA,OAXA,GACA,OAYO,SAAS,QAAa,OAZA,CAYA,EAAgB,EAC7C,IAD0B,GAC1B,IACA,OACA,2BACA,OACA,CAAK,CACL,EAlB6B,CAC7B,SACA,OACA,CAAS,GACT,oBACA,WACA,OACA,cACA,OACA,CAAS,GACE,GAAU,EAAM,GAC3B,CADoB,CKiHQ,CAC5B,kBACA,QACA,YACA,UACA,6CACA,mBACa,CACb,cACA,aACA,CAAS,CACT,CACA,8BAEA,MADA,8BAAsD,EAAO,yBAC7D,KAEA,gCACA,MAeA,GAdA,oBACA,aACA,mCAEA,OADA,mCAEA,GAEY,EAAuB,IACnC,aACA,QAFmC,EAEnC,8BAEA,OADA,mCAEA,GAEA,EAEA,OADA,SAGA,oCACA,CACA,oCAEA,YADA,6EAGA,GADA,aAEA,SAGA,QACA,CACA,2BAEA,MADA,8BAAsD,EAAO,4BAC7D,KAEA,2BAEA,OADA,6BAAsD,EAAO,4BAC7D,KAEA,EAzM8B,kBAC9B,mFACA,kGACA,qBAA6C,KAAQ,mDACrD,qCACA,EAqMA,EDvMA,SACA,cAaA,OAZA,yBAEA,UAA2B,GAAM,mBACjC,2BAIA,GAHA,SACA,gCAAoE,OAAmB,IAEvF,SACA,UAAsB,GAAgB,uBFb/B,CEawD,KAE/D,oBACA,EACA,CACA,EC0LA,CAAG,GAAI","sources":["webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/config.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/endpoint.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/index.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/types/chains.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/types/common.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/types/decoded-data.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/types/master-copies.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/types/notifications.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/types/relay.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/types/safe-apps.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/types/safe-info.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/types/safe-messages.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/types/transactions.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/node_modules/@safe-global/safe-gateway-typescript-sdk/dist/utils.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/version.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/utils.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/messageFormatter.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/methods.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/index.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/types/sdk.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/types/gateway.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/types/messaging.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/types/index.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/txs/index.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/eth/constants.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/eth/index.js","webpack://_N_E/../../node_modules/viem/_esm/utils/data/concat.js","webpack://_N_E/../../node_modules/viem/_esm/utils/abi/formatAbiItem.js","webpack://_N_E/../../node_modules/viem/_esm/utils/data/isHex.js","webpack://_N_E/../../node_modules/viem/_esm/utils/data/size.js","webpack://_N_E/../../node_modules/viem/_esm/errors/version.js","webpack://_N_E/../../node_modules/viem/_esm/errors/base.js","webpack://_N_E/../../node_modules/viem/_esm/errors/abi.js","webpack://_N_E/../../node_modules/viem/_esm/errors/address.js","webpack://_N_E/../../node_modules/viem/_esm/errors/encoding.js","webpack://_N_E/../../node_modules/viem/_esm/utils/lru.js","webpack://_N_E/../../node_modules/viem/_esm/errors/data.js","webpack://_N_E/../../node_modules/viem/_esm/utils/data/pad.js","webpack://_N_E/../../node_modules/viem/_esm/utils/encoding/fromHex.js","webpack://_N_E/../../node_modules/viem/_esm/utils/encoding/toHex.js","webpack://_N_E/../../node_modules/viem/_esm/utils/encoding/toBytes.js","webpack://_N_E/../../node_modules/@noble/hashes/esm/_assert.js","webpack://_N_E/../../node_modules/@noble/hashes/esm/_u64.js","webpack://_N_E/../../node_modules/@noble/hashes/esm/utils.js","webpack://_N_E/../../node_modules/@noble/hashes/esm/sha3.js","webpack://_N_E/../../node_modules/viem/_esm/utils/hash/keccak256.js","webpack://_N_E/../../node_modules/viem/_esm/utils/address/getAddress.js","webpack://_N_E/../../node_modules/viem/_esm/utils/address/isAddress.js","webpack://_N_E/../../node_modules/viem/_esm/utils/data/slice.js","webpack://_N_E/../../node_modules/viem/_esm/utils/regex.js","webpack://_N_E/../../node_modules/viem/_esm/utils/abi/encodeAbiParameters.js","webpack://_N_E/../../node_modules/viem/_esm/utils/hash/hashSignature.js","webpack://_N_E/../../node_modules/abitype/dist/esm/regex.js","webpack://_N_E/../../node_modules/abitype/dist/esm/human-readable/formatAbiParameter.js","webpack://_N_E/../../node_modules/abitype/dist/esm/human-readable/formatAbiParameters.js","webpack://_N_E/../../node_modules/abitype/dist/esm/human-readable/formatAbiItem.js","webpack://_N_E/../../node_modules/viem/_esm/utils/hash/normalizeSignature.js","webpack://_N_E/../../node_modules/viem/_esm/utils/hash/toSignature.js","webpack://_N_E/../../node_modules/viem/_esm/utils/hash/toSignatureHash.js","webpack://_N_E/../../node_modules/viem/_esm/utils/hash/toFunctionSelector.js","webpack://_N_E/../../node_modules/viem/_esm/utils/hash/toEventSelector.js","webpack://_N_E/../../node_modules/viem/_esm/utils/abi/getAbiItem.js","webpack://_N_E/../../node_modules/viem/_esm/utils/abi/prepareEncodeFunctionData.js","webpack://_N_E/../../node_modules/viem/_esm/utils/abi/encodeFunctionData.js","webpack://_N_E/../../node_modules/viem/_esm/constants/strings.js","webpack://_N_E/../../node_modules/viem/_esm/utils/signature/toPrefixedMessage.js","webpack://_N_E/../../node_modules/viem/_esm/utils/signature/hashMessage.js","webpack://_N_E/../../node_modules/viem/_esm/utils/stringify.js","webpack://_N_E/../../node_modules/viem/_esm/errors/typedData.js","webpack://_N_E/../../node_modules/viem/_esm/utils/typedData.js","webpack://_N_E/../../node_modules/viem/_esm/utils/signature/hashTypedData.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/safe/signatures.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/types/permissions.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/wallet/index.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/decorators/requirePermissions.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/safe/index.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/sdk.js","webpack://_N_E/../../node_modules/@safe-global/safe-apps-sdk/dist/esm/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_BASE_URL = void 0;\nexports.DEFAULT_BASE_URL = 'https://safe-client.safe.global';\n//# sourceMappingURL=config.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpoint = exports.deleteEndpoint = exports.putEndpoint = exports.postEndpoint = void 0;\nconst utils_1 = require(\"./utils\");\nfunction makeUrl(baseUrl, path, pathParams, query) {\n    const pathname = (0, utils_1.insertParams)(path, pathParams);\n    const search = (0, utils_1.stringifyQuery)(query);\n    return `${baseUrl}${pathname}${search}`;\n}\nfunction postEndpoint(baseUrl, path, params) {\n    const url = makeUrl(baseUrl, path, params === null || params === void 0 ? void 0 : params.path, params === null || params === void 0 ? void 0 : params.query);\n    return (0, utils_1.fetchData)(url, 'POST', params === null || params === void 0 ? void 0 : params.body, params === null || params === void 0 ? void 0 : params.headers, params === null || params === void 0 ? void 0 : params.credentials);\n}\nexports.postEndpoint = postEndpoint;\nfunction putEndpoint(baseUrl, path, params) {\n    const url = makeUrl(baseUrl, path, params === null || params === void 0 ? void 0 : params.path, params === null || params === void 0 ? void 0 : params.query);\n    return (0, utils_1.fetchData)(url, 'PUT', params === null || params === void 0 ? void 0 : params.body, params === null || params === void 0 ? void 0 : params.headers, params === null || params === void 0 ? void 0 : params.credentials);\n}\nexports.putEndpoint = putEndpoint;\nfunction deleteEndpoint(baseUrl, path, params) {\n    const url = makeUrl(baseUrl, path, params === null || params === void 0 ? void 0 : params.path, params === null || params === void 0 ? void 0 : params.query);\n    return (0, utils_1.fetchData)(url, 'DELETE', params === null || params === void 0 ? void 0 : params.body, params === null || params === void 0 ? void 0 : params.headers, params === null || params === void 0 ? void 0 : params.credentials);\n}\nexports.deleteEndpoint = deleteEndpoint;\nfunction getEndpoint(baseUrl, path, params, rawUrl) {\n    if (rawUrl) {\n        return (0, utils_1.getData)(rawUrl, undefined, params === null || params === void 0 ? void 0 : params.credentials);\n    }\n    const url = makeUrl(baseUrl, path, params === null || params === void 0 ? void 0 : params.path, params === null || params === void 0 ? void 0 : params.query);\n    return (0, utils_1.getData)(url, params === null || params === void 0 ? void 0 : params.headers, params === null || params === void 0 ? void 0 : params.credentials);\n}\nexports.getEndpoint = getEndpoint;\n//# sourceMappingURL=endpoint.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccount = exports.createAccount = exports.verifyAuth = exports.getAuthNonce = exports.getContract = exports.getSafeOverviews = exports.unsubscribeAll = exports.unsubscribeSingle = exports.registerRecoveryModule = exports.deleteRegisteredEmail = exports.getRegisteredEmail = exports.verifyEmail = exports.resendEmailVerificationCode = exports.changeEmail = exports.registerEmail = exports.unregisterDevice = exports.unregisterSafe = exports.registerDevice = exports.getDelegates = exports.confirmSafeMessage = exports.proposeSafeMessage = exports.getSafeMessage = exports.getSafeMessages = exports.getDecodedData = exports.getMasterCopies = exports.getSafeApps = exports.getChainConfig = exports.getChainsConfig = exports.getTxPreview = exports.getConfirmationView = exports.proposeTransaction = exports.getNonces = exports.postSafeGasEstimation = exports.deleteTransaction = exports.getTransactionDetails = exports.getTransactionQueue = exports.getTransactionHistory = exports.getCollectiblesPage = exports.getCollectibles = exports.getAllOwnedSafes = exports.getOwnedSafes = exports.getFiatCurrencies = exports.getBalances = exports.getMultisigTransactions = exports.getModuleTransactions = exports.getIncomingTransfers = exports.getSafeInfo = exports.getRelayCount = exports.relayTransaction = exports.setBaseUrl = void 0;\nexports.getIndexingStatus = exports.putAccountDataSettings = exports.getAccountDataSettings = exports.getAccountDataTypes = exports.deleteAccount = void 0;\nconst endpoint_1 = require(\"./endpoint\");\nconst config_1 = require(\"./config\");\n__exportStar(require(\"./types/safe-info\"), exports);\n__exportStar(require(\"./types/safe-apps\"), exports);\n__exportStar(require(\"./types/transactions\"), exports);\n__exportStar(require(\"./types/chains\"), exports);\n__exportStar(require(\"./types/common\"), exports);\n__exportStar(require(\"./types/master-copies\"), exports);\n__exportStar(require(\"./types/decoded-data\"), exports);\n__exportStar(require(\"./types/safe-messages\"), exports);\n__exportStar(require(\"./types/notifications\"), exports);\n__exportStar(require(\"./types/relay\"), exports);\n// Can be set externally to a different CGW host\nlet baseUrl = config_1.DEFAULT_BASE_URL;\n/**\n * Set the base CGW URL\n */\nconst setBaseUrl = (url) => {\n    baseUrl = url;\n};\nexports.setBaseUrl = setBaseUrl;\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Relay a transaction from a Safe\n */\nfunction relayTransaction(chainId, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/relay', { path: { chainId }, body });\n}\nexports.relayTransaction = relayTransaction;\n/**\n * Get the relay limit and number of remaining relays remaining\n */\nfunction getRelayCount(chainId, address) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/relay/{address}', { path: { chainId, address } });\n}\nexports.getRelayCount = getRelayCount;\n/**\n * Get basic information about a Safe. E.g. owners, modules, version etc\n */\nfunction getSafeInfo(chainId, address) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}', { path: { chainId, address } });\n}\nexports.getSafeInfo = getSafeInfo;\n/**\n * Get filterable list of incoming transactions\n */\nfunction getIncomingTransfers(chainId, address, query, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/incoming-transfers/', {\n        path: { chainId, address },\n        query,\n    }, pageUrl);\n}\nexports.getIncomingTransfers = getIncomingTransfers;\n/**\n * Get filterable list of module transactions\n */\nfunction getModuleTransactions(chainId, address, query, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/module-transactions/', {\n        path: { chainId, address },\n        query,\n    }, pageUrl);\n}\nexports.getModuleTransactions = getModuleTransactions;\n/**\n * Get filterable list of multisig transactions\n */\nfunction getMultisigTransactions(chainId, address, query, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/multisig-transactions/', {\n        path: { chainId, address },\n        query,\n    }, pageUrl);\n}\nexports.getMultisigTransactions = getMultisigTransactions;\n/**\n * Get the total balance and all assets stored in a Safe\n */\nfunction getBalances(chainId, address, currency = 'usd', query = {}) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/balances/{currency}', {\n        path: { chainId, address, currency },\n        query,\n    });\n}\nexports.getBalances = getBalances;\n/**\n * Get a list of supported fiat currencies (e.g. USD, EUR etc)\n */\nfunction getFiatCurrencies() {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/balances/supported-fiat-codes');\n}\nexports.getFiatCurrencies = getFiatCurrencies;\n/**\n * Get the addresses of all Safes belonging to an owner\n */\nfunction getOwnedSafes(chainId, address) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/owners/{address}/safes', { path: { chainId, address } });\n}\nexports.getOwnedSafes = getOwnedSafes;\n/**\n * Get the addresses of all Safes belonging to an owner on all chains\n */\nfunction getAllOwnedSafes(address) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/owners/{address}/safes', { path: { address } });\n}\nexports.getAllOwnedSafes = getAllOwnedSafes;\n/**\n * Get NFTs stored in a Safe\n */\nfunction getCollectibles(chainId, address, query = {}) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/collectibles', {\n        path: { chainId, address },\n        query,\n    });\n}\nexports.getCollectibles = getCollectibles;\n/**\n * Get NFTs stored in a Safe\n */\nfunction getCollectiblesPage(chainId, address, query = {}, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v2/chains/{chainId}/safes/{address}/collectibles', { path: { chainId, address }, query }, pageUrl);\n}\nexports.getCollectiblesPage = getCollectiblesPage;\n/**\n * Get a list of past Safe transactions\n */\nfunction getTransactionHistory(chainId, address, query = {}, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/transactions/history', { path: { chainId, safe_address: address }, query }, pageUrl);\n}\nexports.getTransactionHistory = getTransactionHistory;\n/**\n * Get the list of pending transactions\n */\nfunction getTransactionQueue(chainId, address, query = {}, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/transactions/queued', { path: { chainId, safe_address: address }, query }, pageUrl);\n}\nexports.getTransactionQueue = getTransactionQueue;\n/**\n * Get the details of an individual transaction by its id\n */\nfunction getTransactionDetails(chainId, transactionId) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/transactions/{transactionId}', {\n        path: { chainId, transactionId },\n    });\n}\nexports.getTransactionDetails = getTransactionDetails;\n/**\n * Delete a transaction by its safeTxHash\n */\nfunction deleteTransaction(chainId, safeTxHash, signature) {\n    return (0, endpoint_1.deleteEndpoint)(baseUrl, '/v1/chains/{chainId}/transactions/{safeTxHash}', {\n        path: { chainId, safeTxHash },\n        body: { signature },\n    });\n}\nexports.deleteTransaction = deleteTransaction;\n/**\n * Request a gas estimate & recommmended tx nonce for a created transaction\n */\nfunction postSafeGasEstimation(chainId, address, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v2/chains/{chainId}/safes/{safe_address}/multisig-transactions/estimations', {\n        path: { chainId, safe_address: address },\n        body,\n    });\n}\nexports.postSafeGasEstimation = postSafeGasEstimation;\nfunction getNonces(chainId, address) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/nonces', {\n        path: { chainId, safe_address: address },\n    });\n}\nexports.getNonces = getNonces;\n/**\n * Propose a new transaction for other owners to sign/execute\n */\nfunction proposeTransaction(chainId, address, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/transactions/{safe_address}/propose', {\n        path: { chainId, safe_address: address },\n        body,\n    });\n}\nexports.proposeTransaction = proposeTransaction;\n/**\n * Returns decoded data\n */\nfunction getConfirmationView(chainId, safeAddress, data, to, value) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/views/transaction-confirmation', {\n        path: { chainId, safe_address: safeAddress },\n        body: { data, to, value },\n    });\n}\nexports.getConfirmationView = getConfirmationView;\n/**\n * Get a tx preview\n */\nfunction getTxPreview(chainId, safeAddress, data, to, value) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/transactions/{safe_address}/preview', {\n        path: { chainId, safe_address: safeAddress },\n        body: { data, to, value },\n    });\n}\nexports.getTxPreview = getTxPreview;\n/**\n * Returns all defined chain configs\n */\nfunction getChainsConfig(query) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains', {\n        query,\n    });\n}\nexports.getChainsConfig = getChainsConfig;\n/**\n * Returns a chain config\n */\nfunction getChainConfig(chainId) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}', {\n        path: { chainId: chainId },\n    });\n}\nexports.getChainConfig = getChainConfig;\n/**\n * Returns Safe Apps List\n */\nfunction getSafeApps(chainId, query = {}) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safe-apps', {\n        path: { chainId: chainId },\n        query,\n    });\n}\nexports.getSafeApps = getSafeApps;\n/**\n * Returns list of Master Copies\n */\nfunction getMasterCopies(chainId) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/about/master-copies', {\n        path: { chainId: chainId },\n    });\n}\nexports.getMasterCopies = getMasterCopies;\n/**\n * Returns decoded data\n */\nfunction getDecodedData(chainId, encodedData, to) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/data-decoder', {\n        path: { chainId: chainId },\n        body: { data: encodedData, to },\n    });\n}\nexports.getDecodedData = getDecodedData;\n/**\n * Returns list of `SafeMessage`s\n */\nfunction getSafeMessages(chainId, address, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/messages', { path: { chainId, safe_address: address }, query: {} }, pageUrl);\n}\nexports.getSafeMessages = getSafeMessages;\n/**\n * Returns a `SafeMessage`\n */\nfunction getSafeMessage(chainId, messageHash) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/messages/{message_hash}', {\n        path: { chainId, message_hash: messageHash },\n    });\n}\nexports.getSafeMessage = getSafeMessage;\n/**\n * Propose a new `SafeMessage` for other owners to sign\n */\nfunction proposeSafeMessage(chainId, address, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/messages', {\n        path: { chainId, safe_address: address },\n        body,\n    });\n}\nexports.proposeSafeMessage = proposeSafeMessage;\n/**\n * Add a confirmation to a `SafeMessage`\n */\nfunction confirmSafeMessage(chainId, messageHash, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/messages/{message_hash}/signatures', {\n        path: { chainId, message_hash: messageHash },\n        body,\n    });\n}\nexports.confirmSafeMessage = confirmSafeMessage;\n/**\n * Returns a list of delegates\n */\nfunction getDelegates(chainId, query = {}) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v2/chains/{chainId}/delegates', {\n        path: { chainId },\n        query,\n    });\n}\nexports.getDelegates = getDelegates;\n/**\n * Registers a device/Safe for notifications\n */\nfunction registerDevice(body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/register/notifications', {\n        body,\n    });\n}\nexports.registerDevice = registerDevice;\n/**\n * Unregisters a Safe from notifications\n */\nfunction unregisterSafe(chainId, address, uuid) {\n    return (0, endpoint_1.deleteEndpoint)(baseUrl, '/v1/chains/{chainId}/notifications/devices/{uuid}/safes/{safe_address}', {\n        path: { chainId, safe_address: address, uuid },\n    });\n}\nexports.unregisterSafe = unregisterSafe;\n/**\n * Unregisters a device from notifications\n */\nfunction unregisterDevice(chainId, uuid) {\n    return (0, endpoint_1.deleteEndpoint)(baseUrl, '/v1/chains/{chainId}/notifications/devices/{uuid}', {\n        path: { chainId, uuid },\n    });\n}\nexports.unregisterDevice = unregisterDevice;\n/**\n * Registers a email address for a safe signer.\n *\n * The signer wallet has to sign a message of format: `email-register-{chainId}-{safeAddress}-{emailAddress}-{signer}-{timestamp}`\n * The signature is valid for 5 minutes.\n *\n * @param chainId\n * @param safeAddress\n * @param body Signer address and email address\n * @param headers Signature and Signature timestamp\n * @returns 200 if signature matches the data\n */\nfunction registerEmail(chainId, safeAddress, body, headers) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/emails', {\n        path: { chainId, safe_address: safeAddress },\n        body,\n        headers,\n    });\n}\nexports.registerEmail = registerEmail;\n/**\n * Changes an already registered email address for a safe signer. The new email address still needs to be verified.\n *\n * The signer wallet has to sign a message of format: `email-edit-{chainId}-{safeAddress}-{emailAddress}-{signer}-{timestamp}`\n * The signature is valid for 5 minutes.\n *\n * @param chainId\n * @param safeAddress\n * @param signerAddress\n * @param body New email address\n * @param headers Signature and Signature timestamp\n * @returns 202 if signature matches the data\n */\nfunction changeEmail(chainId, safeAddress, signerAddress, body, headers) {\n    return (0, endpoint_1.putEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/emails/{signer}', {\n        path: { chainId, safe_address: safeAddress, signer: signerAddress },\n        body,\n        headers,\n    });\n}\nexports.changeEmail = changeEmail;\n/**\n * Resends an email verification code.\n */\nfunction resendEmailVerificationCode(chainId, safeAddress, signerAddress) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/emails/{signer}/verify-resend', {\n        path: { chainId, safe_address: safeAddress, signer: signerAddress },\n        body: '',\n    });\n}\nexports.resendEmailVerificationCode = resendEmailVerificationCode;\n/**\n * Verifies a pending email address registration.\n *\n * @param chainId\n * @param safeAddress\n * @param signerAddress address who signed the email registration\n * @param body Verification code\n */\nfunction verifyEmail(chainId, safeAddress, signerAddress, body) {\n    return (0, endpoint_1.putEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/emails/{signer}/verify', {\n        path: { chainId, safe_address: safeAddress, signer: signerAddress },\n        body,\n    });\n}\nexports.verifyEmail = verifyEmail;\n/**\n * Gets the registered email address of the signer\n *\n * The signer wallet will have to sign a message of format: `email-retrieval-{chainId}-{safe}-{signer}-{timestamp}`\n * The signature is valid for 5 minutes.\n *\n * @param chainId\n * @param safeAddress\n * @param signerAddress address of the owner of the Safe\n *\n * @returns email address and verified flag\n */\nfunction getRegisteredEmail(chainId, safeAddress, signerAddress, headers) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/emails/{signer}', {\n        path: { chainId, safe_address: safeAddress, signer: signerAddress },\n        headers,\n    });\n}\nexports.getRegisteredEmail = getRegisteredEmail;\n/**\n * Delete a registered email address for the signer\n *\n * The signer wallet will have to sign a message of format: `email-delete-{chainId}-{safe}-{signer}-{timestamp}`\n * The signature is valid for 5 minutes.\n *\n * @param chainId\n * @param safeAddress\n * @param signerAddress\n * @param headers\n */\nfunction deleteRegisteredEmail(chainId, safeAddress, signerAddress, headers) {\n    return (0, endpoint_1.deleteEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/emails/{signer}', {\n        path: { chainId, safe_address: safeAddress, signer: signerAddress },\n        headers,\n    });\n}\nexports.deleteRegisteredEmail = deleteRegisteredEmail;\n/**\n * Register a recovery module for receiving alerts\n * @param chainId\n * @param safeAddress\n * @param body - { moduleAddress: string }\n */\nfunction registerRecoveryModule(chainId, safeAddress, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/recovery', {\n        path: { chainId, safe_address: safeAddress },\n        body,\n    });\n}\nexports.registerRecoveryModule = registerRecoveryModule;\n/**\n * Delete email subscription for a single category\n * @param query\n */\nfunction unsubscribeSingle(query) {\n    return (0, endpoint_1.deleteEndpoint)(baseUrl, '/v1/subscriptions', { query });\n}\nexports.unsubscribeSingle = unsubscribeSingle;\n/**\n * Delete email subscription for all categories\n * @param query\n */\nfunction unsubscribeAll(query) {\n    return (0, endpoint_1.deleteEndpoint)(baseUrl, '/v1/subscriptions/all', { query });\n}\nexports.unsubscribeAll = unsubscribeAll;\n/**\n * Get Safe overviews per address\n */\nfunction getSafeOverviews(safes, query) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/safes', {\n        query: Object.assign(Object.assign({}, query), { safes: safes.join(',') }),\n    });\n}\nexports.getSafeOverviews = getSafeOverviews;\nfunction getContract(chainId, contractAddress) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/contracts/{contractAddress}', {\n        path: {\n            chainId: chainId,\n            contractAddress: contractAddress,\n        },\n    });\n}\nexports.getContract = getContract;\nfunction getAuthNonce() {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/auth/nonce', { credentials: 'include' });\n}\nexports.getAuthNonce = getAuthNonce;\nfunction verifyAuth(body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/auth/verify', {\n        body,\n        credentials: 'include',\n    });\n}\nexports.verifyAuth = verifyAuth;\nfunction createAccount(body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/accounts', {\n        body,\n        credentials: 'include',\n    });\n}\nexports.createAccount = createAccount;\nfunction getAccount(address) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/accounts/{address}', {\n        path: { address },\n        credentials: 'include',\n    });\n}\nexports.getAccount = getAccount;\nfunction deleteAccount(address) {\n    return (0, endpoint_1.deleteEndpoint)(baseUrl, '/v1/accounts/{address}', {\n        path: { address },\n        credentials: 'include',\n    });\n}\nexports.deleteAccount = deleteAccount;\nfunction getAccountDataTypes() {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/accounts/data-types');\n}\nexports.getAccountDataTypes = getAccountDataTypes;\nfunction getAccountDataSettings(address) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/accounts/{address}/data-settings', {\n        path: { address },\n        credentials: 'include',\n    });\n}\nexports.getAccountDataSettings = getAccountDataSettings;\nfunction putAccountDataSettings(address, body) {\n    return (0, endpoint_1.putEndpoint)(baseUrl, '/v1/accounts/{address}/data-settings', {\n        path: { address },\n        body,\n        credentials: 'include',\n    });\n}\nexports.putAccountDataSettings = putAccountDataSettings;\nfunction getIndexingStatus(chainId) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/about/indexing', {\n        path: { chainId },\n    });\n}\nexports.getIndexingStatus = getIndexingStatus;\n/* eslint-enable @typescript-eslint/explicit-module-boundary-types */\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FEATURES = exports.GAS_PRICE_TYPE = exports.RPC_AUTHENTICATION = void 0;\nvar RPC_AUTHENTICATION;\n(function (RPC_AUTHENTICATION) {\n    RPC_AUTHENTICATION[\"API_KEY_PATH\"] = \"API_KEY_PATH\";\n    RPC_AUTHENTICATION[\"NO_AUTHENTICATION\"] = \"NO_AUTHENTICATION\";\n    RPC_AUTHENTICATION[\"UNKNOWN\"] = \"UNKNOWN\";\n})(RPC_AUTHENTICATION = exports.RPC_AUTHENTICATION || (exports.RPC_AUTHENTICATION = {}));\nvar GAS_PRICE_TYPE;\n(function (GAS_PRICE_TYPE) {\n    GAS_PRICE_TYPE[\"ORACLE\"] = \"ORACLE\";\n    GAS_PRICE_TYPE[\"FIXED\"] = \"FIXED\";\n    GAS_PRICE_TYPE[\"FIXED_1559\"] = \"FIXED1559\";\n    GAS_PRICE_TYPE[\"UNKNOWN\"] = \"UNKNOWN\";\n})(GAS_PRICE_TYPE = exports.GAS_PRICE_TYPE || (exports.GAS_PRICE_TYPE = {}));\nvar FEATURES;\n(function (FEATURES) {\n    FEATURES[\"ERC721\"] = \"ERC721\";\n    FEATURES[\"SAFE_APPS\"] = \"SAFE_APPS\";\n    FEATURES[\"CONTRACT_INTERACTION\"] = \"CONTRACT_INTERACTION\";\n    FEATURES[\"DOMAIN_LOOKUP\"] = \"DOMAIN_LOOKUP\";\n    FEATURES[\"SPENDING_LIMIT\"] = \"SPENDING_LIMIT\";\n    FEATURES[\"EIP1559\"] = \"EIP1559\";\n    FEATURES[\"SAFE_TX_GAS_OPTIONAL\"] = \"SAFE_TX_GAS_OPTIONAL\";\n    FEATURES[\"TX_SIMULATION\"] = \"TX_SIMULATION\";\n    FEATURES[\"EIP1271\"] = \"EIP1271\";\n})(FEATURES = exports.FEATURES || (exports.FEATURES = {}));\n//# sourceMappingURL=chains.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenType = void 0;\nvar TokenType;\n(function (TokenType) {\n    TokenType[\"ERC20\"] = \"ERC20\";\n    TokenType[\"ERC721\"] = \"ERC721\";\n    TokenType[\"NATIVE_TOKEN\"] = \"NATIVE_TOKEN\";\n})(TokenType = exports.TokenType || (exports.TokenType = {}));\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NativeStakingStatus = exports.ConfirmationViewTypes = void 0;\nvar ConfirmationViewTypes;\n(function (ConfirmationViewTypes) {\n    ConfirmationViewTypes[\"GENERIC\"] = \"GENERIC\";\n    ConfirmationViewTypes[\"COW_SWAP_ORDER\"] = \"COW_SWAP_ORDER\";\n    ConfirmationViewTypes[\"COW_SWAP_TWAP_ORDER\"] = \"COW_SWAP_TWAP_ORDER\";\n    ConfirmationViewTypes[\"KILN_NATIVE_STAKING_DEPOSIT\"] = \"KILN_NATIVE_STAKING_DEPOSIT\";\n    ConfirmationViewTypes[\"KILN_NATIVE_STAKING_VALIDATORS_EXIT\"] = \"KILN_NATIVE_STAKING_VALIDATORS_EXIT\";\n    ConfirmationViewTypes[\"KILN_NATIVE_STAKING_WITHDRAW\"] = \"KILN_NATIVE_STAKING_WITHDRAW\";\n})(ConfirmationViewTypes = exports.ConfirmationViewTypes || (exports.ConfirmationViewTypes = {}));\nvar NativeStakingStatus;\n(function (NativeStakingStatus) {\n    NativeStakingStatus[\"NOT_STAKED\"] = \"NOT_STAKED\";\n    NativeStakingStatus[\"ACTIVATING\"] = \"ACTIVATING\";\n    NativeStakingStatus[\"DEPOSIT_IN_PROGRESS\"] = \"DEPOSIT_IN_PROGRESS\";\n    NativeStakingStatus[\"ACTIVE\"] = \"ACTIVE\";\n    NativeStakingStatus[\"EXIT_REQUESTED\"] = \"EXIT_REQUESTED\";\n    NativeStakingStatus[\"EXITING\"] = \"EXITING\";\n    NativeStakingStatus[\"EXITED\"] = \"EXITED\";\n    NativeStakingStatus[\"SLASHED\"] = \"SLASHED\";\n})(NativeStakingStatus = exports.NativeStakingStatus || (exports.NativeStakingStatus = {}));\n//# sourceMappingURL=decoded-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=master-copies.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeviceType = void 0;\nvar DeviceType;\n(function (DeviceType) {\n    DeviceType[\"ANDROID\"] = \"ANDROID\";\n    DeviceType[\"IOS\"] = \"IOS\";\n    DeviceType[\"WEB\"] = \"WEB\";\n})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));\n//# sourceMappingURL=notifications.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=relay.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeAppSocialPlatforms = exports.SafeAppFeatures = exports.SafeAppAccessPolicyTypes = void 0;\nvar SafeAppAccessPolicyTypes;\n(function (SafeAppAccessPolicyTypes) {\n    SafeAppAccessPolicyTypes[\"NoRestrictions\"] = \"NO_RESTRICTIONS\";\n    SafeAppAccessPolicyTypes[\"DomainAllowlist\"] = \"DOMAIN_ALLOWLIST\";\n})(SafeAppAccessPolicyTypes = exports.SafeAppAccessPolicyTypes || (exports.SafeAppAccessPolicyTypes = {}));\nvar SafeAppFeatures;\n(function (SafeAppFeatures) {\n    SafeAppFeatures[\"BATCHED_TRANSACTIONS\"] = \"BATCHED_TRANSACTIONS\";\n})(SafeAppFeatures = exports.SafeAppFeatures || (exports.SafeAppFeatures = {}));\nvar SafeAppSocialPlatforms;\n(function (SafeAppSocialPlatforms) {\n    SafeAppSocialPlatforms[\"TWITTER\"] = \"TWITTER\";\n    SafeAppSocialPlatforms[\"GITHUB\"] = \"GITHUB\";\n    SafeAppSocialPlatforms[\"DISCORD\"] = \"DISCORD\";\n})(SafeAppSocialPlatforms = exports.SafeAppSocialPlatforms || (exports.SafeAppSocialPlatforms = {}));\n//# sourceMappingURL=safe-apps.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImplementationVersionState = void 0;\nvar ImplementationVersionState;\n(function (ImplementationVersionState) {\n    ImplementationVersionState[\"UP_TO_DATE\"] = \"UP_TO_DATE\";\n    ImplementationVersionState[\"OUTDATED\"] = \"OUTDATED\";\n    ImplementationVersionState[\"UNKNOWN\"] = \"UNKNOWN\";\n})(ImplementationVersionState = exports.ImplementationVersionState || (exports.ImplementationVersionState = {}));\n//# sourceMappingURL=safe-info.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeMessageStatus = exports.SafeMessageListItemType = void 0;\nvar SafeMessageListItemType;\n(function (SafeMessageListItemType) {\n    SafeMessageListItemType[\"DATE_LABEL\"] = \"DATE_LABEL\";\n    SafeMessageListItemType[\"MESSAGE\"] = \"MESSAGE\";\n})(SafeMessageListItemType = exports.SafeMessageListItemType || (exports.SafeMessageListItemType = {}));\nvar SafeMessageStatus;\n(function (SafeMessageStatus) {\n    SafeMessageStatus[\"NEEDS_CONFIRMATION\"] = \"NEEDS_CONFIRMATION\";\n    SafeMessageStatus[\"CONFIRMED\"] = \"CONFIRMED\";\n})(SafeMessageStatus = exports.SafeMessageStatus || (exports.SafeMessageStatus = {}));\n//# sourceMappingURL=safe-messages.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LabelValue = exports.StartTimeValue = exports.DurationType = exports.DetailedExecutionInfoType = exports.TransactionListItemType = exports.ConflictType = exports.TransactionInfoType = exports.SettingsInfoType = exports.TransactionTokenType = exports.TransferDirection = exports.TransactionStatus = exports.Operation = void 0;\nvar Operation;\n(function (Operation) {\n    Operation[Operation[\"CALL\"] = 0] = \"CALL\";\n    Operation[Operation[\"DELEGATE\"] = 1] = \"DELEGATE\";\n})(Operation = exports.Operation || (exports.Operation = {}));\nvar TransactionStatus;\n(function (TransactionStatus) {\n    TransactionStatus[\"AWAITING_CONFIRMATIONS\"] = \"AWAITING_CONFIRMATIONS\";\n    TransactionStatus[\"AWAITING_EXECUTION\"] = \"AWAITING_EXECUTION\";\n    TransactionStatus[\"CANCELLED\"] = \"CANCELLED\";\n    TransactionStatus[\"FAILED\"] = \"FAILED\";\n    TransactionStatus[\"SUCCESS\"] = \"SUCCESS\";\n})(TransactionStatus = exports.TransactionStatus || (exports.TransactionStatus = {}));\nvar TransferDirection;\n(function (TransferDirection) {\n    TransferDirection[\"INCOMING\"] = \"INCOMING\";\n    TransferDirection[\"OUTGOING\"] = \"OUTGOING\";\n    TransferDirection[\"UNKNOWN\"] = \"UNKNOWN\";\n})(TransferDirection = exports.TransferDirection || (exports.TransferDirection = {}));\nvar TransactionTokenType;\n(function (TransactionTokenType) {\n    TransactionTokenType[\"ERC20\"] = \"ERC20\";\n    TransactionTokenType[\"ERC721\"] = \"ERC721\";\n    TransactionTokenType[\"NATIVE_COIN\"] = \"NATIVE_COIN\";\n})(TransactionTokenType = exports.TransactionTokenType || (exports.TransactionTokenType = {}));\nvar SettingsInfoType;\n(function (SettingsInfoType) {\n    SettingsInfoType[\"SET_FALLBACK_HANDLER\"] = \"SET_FALLBACK_HANDLER\";\n    SettingsInfoType[\"ADD_OWNER\"] = \"ADD_OWNER\";\n    SettingsInfoType[\"REMOVE_OWNER\"] = \"REMOVE_OWNER\";\n    SettingsInfoType[\"SWAP_OWNER\"] = \"SWAP_OWNER\";\n    SettingsInfoType[\"CHANGE_THRESHOLD\"] = \"CHANGE_THRESHOLD\";\n    SettingsInfoType[\"CHANGE_IMPLEMENTATION\"] = \"CHANGE_IMPLEMENTATION\";\n    SettingsInfoType[\"ENABLE_MODULE\"] = \"ENABLE_MODULE\";\n    SettingsInfoType[\"DISABLE_MODULE\"] = \"DISABLE_MODULE\";\n    SettingsInfoType[\"SET_GUARD\"] = \"SET_GUARD\";\n    SettingsInfoType[\"DELETE_GUARD\"] = \"DELETE_GUARD\";\n})(SettingsInfoType = exports.SettingsInfoType || (exports.SettingsInfoType = {}));\nvar TransactionInfoType;\n(function (TransactionInfoType) {\n    TransactionInfoType[\"TRANSFER\"] = \"Transfer\";\n    TransactionInfoType[\"SETTINGS_CHANGE\"] = \"SettingsChange\";\n    TransactionInfoType[\"CUSTOM\"] = \"Custom\";\n    TransactionInfoType[\"CREATION\"] = \"Creation\";\n    TransactionInfoType[\"SWAP_ORDER\"] = \"SwapOrder\";\n    TransactionInfoType[\"TWAP_ORDER\"] = \"TwapOrder\";\n    TransactionInfoType[\"SWAP_TRANSFER\"] = \"SwapTransfer\";\n    TransactionInfoType[\"NATIVE_STAKING_DEPOSIT\"] = \"NativeStakingDeposit\";\n    TransactionInfoType[\"NATIVE_STAKING_VALIDATORS_EXIT\"] = \"NativeStakingValidatorsExit\";\n    TransactionInfoType[\"NATIVE_STAKING_WITHDRAW\"] = \"NativeStakingWithdraw\";\n})(TransactionInfoType = exports.TransactionInfoType || (exports.TransactionInfoType = {}));\nvar ConflictType;\n(function (ConflictType) {\n    ConflictType[\"NONE\"] = \"None\";\n    ConflictType[\"HAS_NEXT\"] = \"HasNext\";\n    ConflictType[\"END\"] = \"End\";\n})(ConflictType = exports.ConflictType || (exports.ConflictType = {}));\nvar TransactionListItemType;\n(function (TransactionListItemType) {\n    TransactionListItemType[\"TRANSACTION\"] = \"TRANSACTION\";\n    TransactionListItemType[\"LABEL\"] = \"LABEL\";\n    TransactionListItemType[\"CONFLICT_HEADER\"] = \"CONFLICT_HEADER\";\n    TransactionListItemType[\"DATE_LABEL\"] = \"DATE_LABEL\";\n})(TransactionListItemType = exports.TransactionListItemType || (exports.TransactionListItemType = {}));\nvar DetailedExecutionInfoType;\n(function (DetailedExecutionInfoType) {\n    DetailedExecutionInfoType[\"MULTISIG\"] = \"MULTISIG\";\n    DetailedExecutionInfoType[\"MODULE\"] = \"MODULE\";\n})(DetailedExecutionInfoType = exports.DetailedExecutionInfoType || (exports.DetailedExecutionInfoType = {}));\nvar DurationType;\n(function (DurationType) {\n    DurationType[\"AUTO\"] = \"AUTO\";\n    DurationType[\"LIMIT_DURATION\"] = \"LIMIT_DURATION\";\n})(DurationType = exports.DurationType || (exports.DurationType = {}));\nvar StartTimeValue;\n(function (StartTimeValue) {\n    StartTimeValue[\"AT_MINING_TIME\"] = \"AT_MINING_TIME\";\n    StartTimeValue[\"AT_EPOCH\"] = \"AT_EPOCH\";\n})(StartTimeValue = exports.StartTimeValue || (exports.StartTimeValue = {}));\nvar LabelValue;\n(function (LabelValue) {\n    LabelValue[\"Queued\"] = \"Queued\";\n    LabelValue[\"Next\"] = \"Next\";\n})(LabelValue = exports.LabelValue || (exports.LabelValue = {}));\n//# sourceMappingURL=transactions.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getData = exports.fetchData = exports.stringifyQuery = exports.insertParams = void 0;\nconst isErrorResponse = (data) => {\n    const isObject = typeof data === 'object' && data !== null;\n    return isObject && 'code' in data && 'message' in data;\n};\nfunction replaceParam(str, key, value) {\n    return str.replace(new RegExp(`\\\\{${key}\\\\}`, 'g'), value);\n}\nfunction insertParams(template, params) {\n    return params\n        ? Object.keys(params).reduce((result, key) => {\n            return replaceParam(result, key, String(params[key]));\n        }, template)\n        : template;\n}\nexports.insertParams = insertParams;\nfunction stringifyQuery(query) {\n    if (!query) {\n        return '';\n    }\n    const searchParams = new URLSearchParams();\n    Object.keys(query).forEach((key) => {\n        if (query[key] != null) {\n            searchParams.append(key, String(query[key]));\n        }\n    });\n    const searchString = searchParams.toString();\n    return searchString ? `?${searchString}` : '';\n}\nexports.stringifyQuery = stringifyQuery;\nfunction parseResponse(resp) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let json;\n        try {\n            json = yield resp.json();\n        }\n        catch (_a) {\n            json = {};\n        }\n        if (!resp.ok) {\n            const errTxt = isErrorResponse(json)\n                ? `CGW error - ${json.code}: ${json.message}`\n                : `CGW error - status ${resp.statusText}`;\n            throw new Error(errTxt);\n        }\n        return json;\n    });\n}\nfunction fetchData(url, method, body, headers, credentials) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const requestHeaders = Object.assign({ 'Content-Type': 'application/json' }, headers);\n        const options = {\n            method: method !== null && method !== void 0 ? method : 'POST',\n            headers: requestHeaders,\n        };\n        if (credentials) {\n            options['credentials'] = credentials;\n        }\n        if (body != null) {\n            options.body = typeof body === 'string' ? body : JSON.stringify(body);\n        }\n        const resp = yield fetch(url, options);\n        return parseResponse(resp);\n    });\n}\nexports.fetchData = fetchData;\nfunction getData(url, headers, credentials) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const options = {\n            method: 'GET',\n        };\n        if (headers) {\n            options['headers'] = Object.assign(Object.assign({}, headers), { 'Content-Type': 'application/json' });\n        }\n        if (credentials) {\n            options['credentials'] = credentials;\n        }\n        const resp = yield fetch(url, options);\n        return parseResponse(resp);\n    });\n}\nexports.getData = getData;\n//# sourceMappingURL=utils.js.map","export const getSDKVersion = () => '9.1.0';\n//# sourceMappingURL=version.js.map","// i.e. 0-255 -> '00'-'ff'\nconst dec2hex = (dec) => dec.toString(16).padStart(2, '0');\nconst generateId = (len) => {\n    const arr = new Uint8Array((len || 40) / 2);\n    window.crypto.getRandomValues(arr);\n    return Array.from(arr, dec2hex).join('');\n};\nconst generateRequestId = () => {\n    if (typeof window !== 'undefined') {\n        return generateId(10);\n    }\n    return new Date().getTime().toString(36);\n};\nexport { generateRequestId };\n//# sourceMappingURL=utils.js.map","import { getSDKVersion } from '../version.js';\nimport { generateRequestId } from './utils.js';\nclass MessageFormatter {\n}\nMessageFormatter.makeRequest = (method, params) => {\n    const id = generateRequestId();\n    return {\n        id,\n        method,\n        params,\n        env: {\n            sdkVersion: getSDKVersion(),\n        },\n    };\n};\nMessageFormatter.makeResponse = (id, data, version) => ({\n    id,\n    success: true,\n    version,\n    data,\n});\nMessageFormatter.makeErrorResponse = (id, error, version) => ({\n    id,\n    success: false,\n    error,\n    version,\n});\nexport { MessageFormatter };\n//# sourceMappingURL=messageFormatter.js.map","export var Methods;\n(function (Methods) {\n    Methods[\"sendTransactions\"] = \"sendTransactions\";\n    Methods[\"rpcCall\"] = \"rpcCall\";\n    Methods[\"getChainInfo\"] = \"getChainInfo\";\n    Methods[\"getSafeInfo\"] = \"getSafeInfo\";\n    Methods[\"getTxBySafeTxHash\"] = \"getTxBySafeTxHash\";\n    Methods[\"getSafeBalances\"] = \"getSafeBalances\";\n    Methods[\"signMessage\"] = \"signMessage\";\n    Methods[\"signTypedMessage\"] = \"signTypedMessage\";\n    Methods[\"getEnvironmentInfo\"] = \"getEnvironmentInfo\";\n    Methods[\"getOffChainSignature\"] = \"getOffChainSignature\";\n    Methods[\"requestAddressBook\"] = \"requestAddressBook\";\n    Methods[\"wallet_getPermissions\"] = \"wallet_getPermissions\";\n    Methods[\"wallet_requestPermissions\"] = \"wallet_requestPermissions\";\n})(Methods || (Methods = {}));\nexport var RestrictedMethods;\n(function (RestrictedMethods) {\n    RestrictedMethods[\"requestAddressBook\"] = \"requestAddressBook\";\n})(RestrictedMethods || (RestrictedMethods = {}));\n//# sourceMappingURL=methods.js.map","import { MessageFormatter } from './messageFormatter.js';\nclass PostMessageCommunicator {\n    constructor(allowedOrigins = null, debugMode = false) {\n        this.allowedOrigins = null;\n        this.callbacks = new Map();\n        this.debugMode = false;\n        this.isServer = typeof window === 'undefined';\n        this.isValidMessage = ({ origin, data, source }) => {\n            const emptyOrMalformed = !data;\n            const sentFromParentEl = !this.isServer && source === window.parent;\n            const majorVersionNumber = typeof data.version !== 'undefined' && parseInt(data.version.split('.')[0]);\n            const allowedSDKVersion = typeof majorVersionNumber === 'number' && majorVersionNumber >= 1;\n            let validOrigin = true;\n            if (Array.isArray(this.allowedOrigins)) {\n                validOrigin = this.allowedOrigins.find((regExp) => regExp.test(origin)) !== undefined;\n            }\n            return !emptyOrMalformed && sentFromParentEl && allowedSDKVersion && validOrigin;\n        };\n        this.logIncomingMessage = (msg) => {\n            console.info(`Safe Apps SDK v1: A message was received from origin ${msg.origin}. `, msg.data);\n        };\n        this.onParentMessage = (msg) => {\n            if (this.isValidMessage(msg)) {\n                this.debugMode && this.logIncomingMessage(msg);\n                this.handleIncomingMessage(msg.data);\n            }\n        };\n        this.handleIncomingMessage = (payload) => {\n            const { id } = payload;\n            const cb = this.callbacks.get(id);\n            if (cb) {\n                cb(payload);\n                this.callbacks.delete(id);\n            }\n        };\n        this.send = (method, params) => {\n            const request = MessageFormatter.makeRequest(method, params);\n            if (this.isServer) {\n                throw new Error(\"Window doesn't exist\");\n            }\n            window.parent.postMessage(request, '*');\n            return new Promise((resolve, reject) => {\n                this.callbacks.set(request.id, (response) => {\n                    if (!response.success) {\n                        reject(new Error(response.error));\n                        return;\n                    }\n                    resolve(response);\n                });\n            });\n        };\n        this.allowedOrigins = allowedOrigins;\n        this.debugMode = debugMode;\n        if (!this.isServer) {\n            window.addEventListener('message', this.onParentMessage);\n        }\n    }\n}\nexport default PostMessageCommunicator;\nexport * from './methods.js';\n//# sourceMappingURL=index.js.map","export const isObjectEIP712TypedData = (obj) => {\n    return typeof obj === 'object' && obj != null && 'domain' in obj && 'types' in obj && 'message' in obj;\n};\n//# sourceMappingURL=sdk.js.map","export { Operation, TokenType, TransactionStatus, TransferDirection, } from '@safe-global/safe-gateway-typescript-sdk';\n//# sourceMappingURL=gateway.js.map","import { Methods } from '../communication/methods.js';\n//# sourceMappingURL=messaging.js.map","export * from './sdk.js';\nexport * from './rpc.js';\nexport * from './gateway.js';\nexport * from './messaging.js';\n//# sourceMappingURL=index.js.map","import { Methods } from '../communication/methods.js';\nimport { isObjectEIP712TypedData, } from '../types/index.js';\nclass TXs {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getBySafeTxHash(safeTxHash) {\n        if (!safeTxHash) {\n            throw new Error('Invalid safeTxHash');\n        }\n        const response = await this.communicator.send(Methods.getTxBySafeTxHash, { safeTxHash });\n        return response.data;\n    }\n    async signMessage(message) {\n        const messagePayload = {\n            message,\n        };\n        const response = await this.communicator.send(Methods.signMessage, messagePayload);\n        return response.data;\n    }\n    async signTypedMessage(typedData) {\n        if (!isObjectEIP712TypedData(typedData)) {\n            throw new Error('Invalid typed data');\n        }\n        const response = await this.communicator.send(Methods.signTypedMessage, { typedData });\n        return response.data;\n    }\n    async send({ txs, params }) {\n        if (!txs || !txs.length) {\n            throw new Error('No transactions were passed');\n        }\n        const messagePayload = {\n            txs,\n            params,\n        };\n        const response = await this.communicator.send(Methods.sendTransactions, messagePayload);\n        return response.data;\n    }\n}\nexport { TXs };\n//# sourceMappingURL=index.js.map","export const RPC_CALLS = {\n    eth_call: 'eth_call',\n    eth_gasPrice: 'eth_gasPrice',\n    eth_getLogs: 'eth_getLogs',\n    eth_getBalance: 'eth_getBalance',\n    eth_getCode: 'eth_getCode',\n    eth_getBlockByHash: 'eth_getBlockByHash',\n    eth_getBlockByNumber: 'eth_getBlockByNumber',\n    eth_getStorageAt: 'eth_getStorageAt',\n    eth_getTransactionByHash: 'eth_getTransactionByHash',\n    eth_getTransactionReceipt: 'eth_getTransactionReceipt',\n    eth_getTransactionCount: 'eth_getTransactionCount',\n    eth_estimateGas: 'eth_estimateGas',\n    safe_setSettings: 'safe_setSettings',\n};\n//# sourceMappingURL=constants.js.map","import { RPC_CALLS } from '../eth/constants.js';\nimport { Methods } from '../communication/methods.js';\nconst inputFormatters = {\n    defaultBlockParam: (arg = 'latest') => arg,\n    returnFullTxObjectParam: (arg = false) => arg,\n    blockNumberToHex: (arg) => Number.isInteger(arg) ? `0x${arg.toString(16)}` : arg,\n};\nclass Eth {\n    constructor(communicator) {\n        this.communicator = communicator;\n        this.call = this.buildRequest({\n            call: RPC_CALLS.eth_call,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getBalance = this.buildRequest({\n            call: RPC_CALLS.eth_getBalance,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getCode = this.buildRequest({\n            call: RPC_CALLS.eth_getCode,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getStorageAt = this.buildRequest({\n            call: RPC_CALLS.eth_getStorageAt,\n            formatters: [null, inputFormatters.blockNumberToHex, inputFormatters.defaultBlockParam],\n        });\n        this.getPastLogs = this.buildRequest({\n            call: RPC_CALLS.eth_getLogs,\n        });\n        this.getBlockByHash = this.buildRequest({\n            call: RPC_CALLS.eth_getBlockByHash,\n            formatters: [null, inputFormatters.returnFullTxObjectParam],\n        });\n        this.getBlockByNumber = this.buildRequest({\n            call: RPC_CALLS.eth_getBlockByNumber,\n            formatters: [inputFormatters.blockNumberToHex, inputFormatters.returnFullTxObjectParam],\n        });\n        this.getTransactionByHash = this.buildRequest({\n            call: RPC_CALLS.eth_getTransactionByHash,\n        });\n        this.getTransactionReceipt = this.buildRequest({\n            call: RPC_CALLS.eth_getTransactionReceipt,\n        });\n        this.getTransactionCount = this.buildRequest({\n            call: RPC_CALLS.eth_getTransactionCount,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getGasPrice = this.buildRequest({\n            call: RPC_CALLS.eth_gasPrice,\n        });\n        this.getEstimateGas = (transaction) => this.buildRequest({\n            call: RPC_CALLS.eth_estimateGas,\n        })([transaction]);\n        this.setSafeSettings = this.buildRequest({\n            call: RPC_CALLS.safe_setSettings,\n        });\n    }\n    buildRequest(args) {\n        const { call, formatters } = args;\n        return async (params) => {\n            if (formatters && Array.isArray(params)) {\n                formatters.forEach((formatter, i) => {\n                    if (formatter) {\n                        params[i] = formatter(params[i]);\n                    }\n                });\n            }\n            const payload = {\n                call,\n                params: params || [],\n            };\n            const response = await this.communicator.send(Methods.rpcCall, payload);\n            return response.data;\n        };\n    }\n}\nexport { Eth };\n//# sourceMappingURL=index.js.map","export function concat(values) {\n    if (typeof values[0] === 'string')\n        return concatHex(values);\n    return concatBytes(values);\n}\nexport function concatBytes(values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const arr of values) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\nexport function concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n//# sourceMappingURL=concat.js.map","import { InvalidDefinitionTypeError, } from '../../errors/abi.js';\nexport function formatAbiItem(abiItem, { includeName = false } = {}) {\n    if (abiItem.type !== 'function' &&\n        abiItem.type !== 'event' &&\n        abiItem.type !== 'error')\n        throw new InvalidDefinitionTypeError(abiItem.type);\n    return `${abiItem.name}(${formatAbiParams(abiItem.inputs, { includeName })})`;\n}\nexport function formatAbiParams(params, { includeName = false } = {}) {\n    if (!params)\n        return '';\n    return params\n        .map((param) => formatAbiParam(param, { includeName }))\n        .join(includeName ? ', ' : ',');\n}\nfunction formatAbiParam(param, { includeName }) {\n    if (param.type.startsWith('tuple')) {\n        return `(${formatAbiParams(param.components, { includeName })})${param.type.slice('tuple'.length)}`;\n    }\n    return param.type + (includeName && param.name ? ` ${param.name}` : '');\n}\n//# sourceMappingURL=formatAbiItem.js.map","export function isHex(value, { strict = true } = {}) {\n    if (!value)\n        return false;\n    if (typeof value !== 'string')\n        return false;\n    return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x');\n}\n//# sourceMappingURL=isHex.js.map","import { isHex } from './isHex.js';\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value) {\n    if (isHex(value, { strict: false }))\n        return Math.ceil((value.length - 2) / 2);\n    return value.length;\n}\n//# sourceMappingURL=size.js.map","export const version = '2.21.55';\n//# sourceMappingURL=version.js.map","import { version } from './version.js';\nlet errorConfig = {\n    getDocsUrl: ({ docsBaseUrl, docsPath = '', docsSlug, }) => docsPath\n        ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${docsSlug ? `#${docsSlug}` : ''}`\n        : undefined,\n    version: `viem@${version}`,\n};\nexport function setErrorConfig(config) {\n    errorConfig = config;\n}\nexport class BaseError extends Error {\n    constructor(shortMessage, args = {}) {\n        const details = (() => {\n            if (args.cause instanceof BaseError)\n                return args.cause.details;\n            if (args.cause?.message)\n                return args.cause.message;\n            return args.details;\n        })();\n        const docsPath = (() => {\n            if (args.cause instanceof BaseError)\n                return args.cause.docsPath || args.docsPath;\n            return args.docsPath;\n        })();\n        const docsUrl = errorConfig.getDocsUrl?.({ ...args, docsPath });\n        const message = [\n            shortMessage || 'An error occurred.',\n            '',\n            ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n            ...(docsUrl ? [`Docs: ${docsUrl}`] : []),\n            ...(details ? [`Details: ${details}`] : []),\n            ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : []),\n        ].join('\\n');\n        super(message, args.cause ? { cause: args.cause } : undefined);\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metaMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BaseError'\n        });\n        this.details = details;\n        this.docsPath = docsPath;\n        this.metaMessages = args.metaMessages;\n        this.name = args.name ?? this.name;\n        this.shortMessage = shortMessage;\n        this.version = version;\n    }\n    walk(fn) {\n        return walk(this, fn);\n    }\n}\nfunction walk(err, fn) {\n    if (fn?.(err))\n        return err;\n    if (err &&\n        typeof err === 'object' &&\n        'cause' in err &&\n        err.cause !== undefined)\n        return walk(err.cause, fn);\n    return fn ? null : err;\n}\n//# sourceMappingURL=base.js.map","import { formatAbiItem, formatAbiParams } from '../utils/abi/formatAbiItem.js';\nimport { size } from '../utils/data/size.js';\nimport { BaseError } from './base.js';\nexport class AbiConstructorNotFoundError extends BaseError {\n    constructor({ docsPath }) {\n        super([\n            'A constructor was not found on the ABI.',\n            'Make sure you are using the correct ABI and that the constructor exists on it.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiConstructorNotFoundError',\n        });\n    }\n}\nexport class AbiConstructorParamsNotFoundError extends BaseError {\n    constructor({ docsPath }) {\n        super([\n            'Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.',\n            'Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiConstructorParamsNotFoundError',\n        });\n    }\n}\nexport class AbiDecodingDataSizeInvalidError extends BaseError {\n    constructor({ data, size }) {\n        super([\n            `Data size of ${size} bytes is invalid.`,\n            'Size must be in increments of 32 bytes (size % 32 === 0).',\n        ].join('\\n'), {\n            metaMessages: [`Data: ${data} (${size} bytes)`],\n            name: 'AbiDecodingDataSizeInvalidError',\n        });\n    }\n}\nexport class AbiDecodingDataSizeTooSmallError extends BaseError {\n    constructor({ data, params, size, }) {\n        super([`Data size of ${size} bytes is too small for given parameters.`].join('\\n'), {\n            metaMessages: [\n                `Params: (${formatAbiParams(params, { includeName: true })})`,\n                `Data:   ${data} (${size} bytes)`,\n            ],\n            name: 'AbiDecodingDataSizeTooSmallError',\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"size\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = data;\n        this.params = params;\n        this.size = size;\n    }\n}\nexport class AbiDecodingZeroDataError extends BaseError {\n    constructor() {\n        super('Cannot decode zero data (\"0x\") with ABI parameters.', {\n            name: 'AbiDecodingZeroDataError',\n        });\n    }\n}\nexport class AbiEncodingArrayLengthMismatchError extends BaseError {\n    constructor({ expectedLength, givenLength, type, }) {\n        super([\n            `ABI encoding array length mismatch for type ${type}.`,\n            `Expected length: ${expectedLength}`,\n            `Given length: ${givenLength}`,\n        ].join('\\n'), { name: 'AbiEncodingArrayLengthMismatchError' });\n    }\n}\nexport class AbiEncodingBytesSizeMismatchError extends BaseError {\n    constructor({ expectedSize, value }) {\n        super(`Size of bytes \"${value}\" (bytes${size(value)}) does not match expected size (bytes${expectedSize}).`, { name: 'AbiEncodingBytesSizeMismatchError' });\n    }\n}\nexport class AbiEncodingLengthMismatchError extends BaseError {\n    constructor({ expectedLength, givenLength, }) {\n        super([\n            'ABI encoding params/values length mismatch.',\n            `Expected length (params): ${expectedLength}`,\n            `Given length (values): ${givenLength}`,\n        ].join('\\n'), { name: 'AbiEncodingLengthMismatchError' });\n    }\n}\nexport class AbiErrorInputsNotFoundError extends BaseError {\n    constructor(errorName, { docsPath }) {\n        super([\n            `Arguments (\\`args\\`) were provided to \"${errorName}\", but \"${errorName}\" on the ABI does not contain any parameters (\\`inputs\\`).`,\n            'Cannot encode error result without knowing what the parameter types are.',\n            'Make sure you are using the correct ABI and that the inputs exist on it.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiErrorInputsNotFoundError',\n        });\n    }\n}\nexport class AbiErrorNotFoundError extends BaseError {\n    constructor(errorName, { docsPath } = {}) {\n        super([\n            `Error ${errorName ? `\"${errorName}\" ` : ''}not found on ABI.`,\n            'Make sure you are using the correct ABI and that the error exists on it.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiErrorNotFoundError',\n        });\n    }\n}\nexport class AbiErrorSignatureNotFoundError extends BaseError {\n    constructor(signature, { docsPath }) {\n        super([\n            `Encoded error signature \"${signature}\" not found on ABI.`,\n            'Make sure you are using the correct ABI and that the error exists on it.',\n            `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiErrorSignatureNotFoundError',\n        });\n        Object.defineProperty(this, \"signature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.signature = signature;\n    }\n}\nexport class AbiEventSignatureEmptyTopicsError extends BaseError {\n    constructor({ docsPath }) {\n        super('Cannot extract event signature from empty topics.', {\n            docsPath,\n            name: 'AbiEventSignatureEmptyTopicsError',\n        });\n    }\n}\nexport class AbiEventSignatureNotFoundError extends BaseError {\n    constructor(signature, { docsPath }) {\n        super([\n            `Encoded event signature \"${signature}\" not found on ABI.`,\n            'Make sure you are using the correct ABI and that the event exists on it.',\n            `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiEventSignatureNotFoundError',\n        });\n    }\n}\nexport class AbiEventNotFoundError extends BaseError {\n    constructor(eventName, { docsPath } = {}) {\n        super([\n            `Event ${eventName ? `\"${eventName}\" ` : ''}not found on ABI.`,\n            'Make sure you are using the correct ABI and that the event exists on it.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiEventNotFoundError',\n        });\n    }\n}\nexport class AbiFunctionNotFoundError extends BaseError {\n    constructor(functionName, { docsPath } = {}) {\n        super([\n            `Function ${functionName ? `\"${functionName}\" ` : ''}not found on ABI.`,\n            'Make sure you are using the correct ABI and that the function exists on it.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiFunctionNotFoundError',\n        });\n    }\n}\nexport class AbiFunctionOutputsNotFoundError extends BaseError {\n    constructor(functionName, { docsPath }) {\n        super([\n            `Function \"${functionName}\" does not contain any \\`outputs\\` on ABI.`,\n            'Cannot decode function result without knowing what the parameter types are.',\n            'Make sure you are using the correct ABI and that the function exists on it.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiFunctionOutputsNotFoundError',\n        });\n    }\n}\nexport class AbiFunctionSignatureNotFoundError extends BaseError {\n    constructor(signature, { docsPath }) {\n        super([\n            `Encoded function signature \"${signature}\" not found on ABI.`,\n            'Make sure you are using the correct ABI and that the function exists on it.',\n            `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiFunctionSignatureNotFoundError',\n        });\n    }\n}\nexport class AbiItemAmbiguityError extends BaseError {\n    constructor(x, y) {\n        super('Found ambiguous types in overloaded ABI items.', {\n            metaMessages: [\n                `\\`${x.type}\\` in \\`${formatAbiItem(x.abiItem)}\\`, and`,\n                `\\`${y.type}\\` in \\`${formatAbiItem(y.abiItem)}\\``,\n                '',\n                'These types encode differently and cannot be distinguished at runtime.',\n                'Remove one of the ambiguous items in the ABI.',\n            ],\n            name: 'AbiItemAmbiguityError',\n        });\n    }\n}\nexport class BytesSizeMismatchError extends BaseError {\n    constructor({ expectedSize, givenSize, }) {\n        super(`Expected bytes${expectedSize}, got bytes${givenSize}.`, {\n            name: 'BytesSizeMismatchError',\n        });\n    }\n}\nexport class DecodeLogDataMismatch extends BaseError {\n    constructor({ abiItem, data, params, size, }) {\n        super([\n            `Data size of ${size} bytes is too small for non-indexed event parameters.`,\n        ].join('\\n'), {\n            metaMessages: [\n                `Params: (${formatAbiParams(params, { includeName: true })})`,\n                `Data:   ${data} (${size} bytes)`,\n            ],\n            name: 'DecodeLogDataMismatch',\n        });\n        Object.defineProperty(this, \"abiItem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"size\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.abiItem = abiItem;\n        this.data = data;\n        this.params = params;\n        this.size = size;\n    }\n}\nexport class DecodeLogTopicsMismatch extends BaseError {\n    constructor({ abiItem, param, }) {\n        super([\n            `Expected a topic for indexed event parameter${param.name ? ` \"${param.name}\"` : ''} on event \"${formatAbiItem(abiItem, { includeName: true })}\".`,\n        ].join('\\n'), { name: 'DecodeLogTopicsMismatch' });\n        Object.defineProperty(this, \"abiItem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.abiItem = abiItem;\n    }\n}\nexport class InvalidAbiEncodingTypeError extends BaseError {\n    constructor(type, { docsPath }) {\n        super([\n            `Type \"${type}\" is not a valid encoding type.`,\n            'Please provide a valid ABI type.',\n        ].join('\\n'), { docsPath, name: 'InvalidAbiEncodingType' });\n    }\n}\nexport class InvalidAbiDecodingTypeError extends BaseError {\n    constructor(type, { docsPath }) {\n        super([\n            `Type \"${type}\" is not a valid decoding type.`,\n            'Please provide a valid ABI type.',\n        ].join('\\n'), { docsPath, name: 'InvalidAbiDecodingType' });\n    }\n}\nexport class InvalidArrayError extends BaseError {\n    constructor(value) {\n        super([`Value \"${value}\" is not a valid array.`].join('\\n'), {\n            name: 'InvalidArrayError',\n        });\n    }\n}\nexport class InvalidDefinitionTypeError extends BaseError {\n    constructor(type) {\n        super([\n            `\"${type}\" is not a valid definition type.`,\n            'Valid types: \"function\", \"event\", \"error\"',\n        ].join('\\n'), { name: 'InvalidDefinitionTypeError' });\n    }\n}\nexport class UnsupportedPackedAbiType extends BaseError {\n    constructor(type) {\n        super(`Type \"${type}\" is not supported for packed encoding.`, {\n            name: 'UnsupportedPackedAbiType',\n        });\n    }\n}\n//# sourceMappingURL=abi.js.map","import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n    constructor({ address }) {\n        super(`Address \"${address}\" is invalid.`, {\n            metaMessages: [\n                '- Address must be a hex value of 20 bytes (40 hex characters).',\n                '- Address must match its checksum counterpart.',\n            ],\n            name: 'InvalidAddressError',\n        });\n    }\n}\n//# sourceMappingURL=address.js.map","import { BaseError } from './base.js';\nexport class IntegerOutOfRangeError extends BaseError {\n    constructor({ max, min, signed, size, value, }) {\n        super(`Number \"${value}\" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`, { name: 'IntegerOutOfRangeError' });\n    }\n}\nexport class InvalidBytesBooleanError extends BaseError {\n    constructor(bytes) {\n        super(`Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`, {\n            name: 'InvalidBytesBooleanError',\n        });\n    }\n}\nexport class InvalidHexBooleanError extends BaseError {\n    constructor(hex) {\n        super(`Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`, { name: 'InvalidHexBooleanError' });\n    }\n}\nexport class InvalidHexValueError extends BaseError {\n    constructor(value) {\n        super(`Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`, { name: 'InvalidHexValueError' });\n    }\n}\nexport class SizeOverflowError extends BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`, { name: 'SizeOverflowError' });\n    }\n}\n//# sourceMappingURL=encoding.js.map","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    get(key) {\n        const value = super.get(key);\n        if (super.has(key) && value !== undefined) {\n            this.delete(key);\n            super.set(key, value);\n        }\n        return value;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize) {\n            const firstKey = this.keys().next().value;\n            if (firstKey)\n                this.delete(firstKey);\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=lru.js.map","import { BaseError } from './base.js';\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \"${offset}\" is out-of-bounds (size: ${size}).`, { name: 'SliceOffsetOutOfBoundsError' });\n    }\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`, { name: 'SizeExceedsPaddingSizeError' });\n    }\n}\nexport class InvalidBytesLengthError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`, { name: 'InvalidBytesLengthError' });\n    }\n}\n//# sourceMappingURL=data.js.map","import { SizeExceedsPaddingSizeError, } from '../../errors/data.js';\nexport function pad(hexOrBytes, { dir, size = 32 } = {}) {\n    if (typeof hexOrBytes === 'string')\n        return padHex(hexOrBytes, { dir, size });\n    return padBytes(hexOrBytes, { dir, size });\n}\nexport function padHex(hex_, { dir, size = 32 } = {}) {\n    if (size === null)\n        return hex_;\n    const hex = hex_.replace('0x', '');\n    if (hex.length > size * 2)\n        throw new SizeExceedsPaddingSizeError({\n            size: Math.ceil(hex.length / 2),\n            targetSize: size,\n            type: 'hex',\n        });\n    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;\n}\nexport function padBytes(bytes, { dir, size = 32 } = {}) {\n    if (size === null)\n        return bytes;\n    if (bytes.length > size)\n        throw new SizeExceedsPaddingSizeError({\n            size: bytes.length,\n            targetSize: size,\n            type: 'bytes',\n        });\n    const paddedBytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n        const padEnd = dir === 'right';\n        paddedBytes[padEnd ? i : size - i - 1] =\n            bytes[padEnd ? i : bytes.length - i - 1];\n    }\n    return paddedBytes;\n}\n//# sourceMappingURL=pad.js.map","import { InvalidHexBooleanError, SizeOverflowError, } from '../../errors/encoding.js';\nimport { size as size_ } from '../data/size.js';\nimport { trim } from '../data/trim.js';\nimport { hexToBytes } from './toBytes.js';\nexport function assertSize(hexOrBytes, { size }) {\n    if (size_(hexOrBytes) > size)\n        throw new SizeOverflowError({\n            givenSize: size_(hexOrBytes),\n            maxSize: size,\n        });\n}\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex\n * - Example: https://viem.sh/docs/utilities/fromHex#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex(hex, toOrOpts) {\n    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;\n    const to = opts.to;\n    if (to === 'number')\n        return hexToNumber(hex, opts);\n    if (to === 'bigint')\n        return hexToBigInt(hex, opts);\n    if (to === 'string')\n        return hexToString(hex, opts);\n    if (to === 'boolean')\n        return hexToBool(hex, opts);\n    return hexToBytes(hex, opts);\n}\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex, opts = {}) {\n    const { signed } = opts;\n    if (opts.size)\n        assertSize(hex, { size: opts.size });\n    const value = BigInt(hex);\n    if (!signed)\n        return value;\n    const size = (hex.length - 2) / 2;\n    const max = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n    if (value <= max)\n        return value;\n    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;\n}\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = trim(hex);\n    }\n    if (trim(hex) === '0x00')\n        return false;\n    if (trim(hex) === '0x01')\n        return true;\n    throw new InvalidHexBooleanError(hex);\n}\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex, opts = {}) {\n    return Number(hexToBigInt(hex, opts));\n}\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex, opts = {}) {\n    let bytes = hexToBytes(hex);\n    if (opts.size) {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes, { dir: 'right' });\n    }\n    return new TextDecoder().decode(bytes);\n}\n//# sourceMappingURL=fromHex.js.map","import { IntegerOutOfRangeError, } from '../../errors/encoding.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex\n * - Example: https://viem.sh/docs/utilities/toHex#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToHex(value, opts);\n    if (typeof value === 'string') {\n        return stringToHex(value, opts);\n    }\n    if (typeof value === 'boolean')\n        return boolToHex(value, opts);\n    return bytesToHex(value, opts);\n}\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value, opts = {}) {\n    const hex = `0x${Number(value)}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value, opts = {}) {\n    let string = '';\n    for (let i = 0; i < value.length; i++) {\n        string += hexes[value[i]];\n    }\n    const hex = `0x${string}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { dir: 'right', size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(value_, opts = {}) {\n    const { signed, size } = opts;\n    const value = BigInt(value_);\n    let maxValue;\n    if (size) {\n        if (signed)\n            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n        else\n            maxValue = 2n ** (BigInt(size) * 8n) - 1n;\n    }\n    else if (typeof value_ === 'number') {\n        maxValue = BigInt(Number.MAX_SAFE_INTEGER);\n    }\n    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;\n    if ((maxValue && value > maxValue) || value < minValue) {\n        const suffix = typeof value_ === 'bigint' ? 'n' : '';\n        throw new IntegerOutOfRangeError({\n            max: maxValue ? `${maxValue}${suffix}` : undefined,\n            min: `${minValue}${suffix}`,\n            signed,\n            size,\n            value: `${value_}${suffix}`,\n        });\n    }\n    const hex = `0x${(signed && value < 0 ? (1n << BigInt(size * 8)) + BigInt(value) : value).toString(16)}`;\n    if (size)\n        return pad(hex, { size });\n    return hex;\n}\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_, opts = {}) {\n    const value = encoder.encode(value_);\n    return bytesToHex(value, opts);\n}\n//# sourceMappingURL=toHex.js.map","import { BaseError } from '../../errors/base.js';\nimport { isHex } from '../data/isHex.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nimport { numberToHex, } from './toHex.js';\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes\n * - Example: https://viem.sh/docs/utilities/toBytes#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToBytes(value, opts);\n    if (typeof value === 'boolean')\n        return boolToBytes(value, opts);\n    if (isHex(value))\n        return hexToBytes(value, opts);\n    return stringToBytes(value, opts);\n}\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value, opts = {}) {\n    const bytes = new Uint8Array(1);\n    bytes[0] = Number(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { size: opts.size });\n    }\n    return bytes;\n}\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n    zero: 48,\n    nine: 57,\n    A: 65,\n    F: 70,\n    a: 97,\n    f: 102,\n};\nfunction charCodeToBase16(char) {\n    if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n        return char - charCodeMap.zero;\n    if (char >= charCodeMap.A && char <= charCodeMap.F)\n        return char - (charCodeMap.A - 10);\n    if (char >= charCodeMap.a && char <= charCodeMap.f)\n        return char - (charCodeMap.a - 10);\n    return undefined;\n}\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = pad(hex, { dir: 'right', size: opts.size });\n    }\n    let hexString = hex.slice(2);\n    if (hexString.length % 2)\n        hexString = `0${hexString}`;\n    const length = hexString.length / 2;\n    const bytes = new Uint8Array(length);\n    for (let index = 0, j = 0; index < length; index++) {\n        const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++));\n        const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++));\n        if (nibbleLeft === undefined || nibbleRight === undefined) {\n            throw new BaseError(`Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`);\n        }\n        bytes[index] = nibbleLeft * 16 + nibbleRight;\n    }\n    return bytes;\n}\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(value, opts) {\n    const hex = numberToHex(value, opts);\n    return hexToBytes(hex);\n}\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(value, opts = {}) {\n    const bytes = encoder.encode(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { dir: 'right', size: opts.size });\n    }\n    return bytes;\n}\n//# sourceMappingURL=toBytes.js.map","function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n// copied from utils\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\nexport { anumber, anumber as number, abytes, abytes as bytes, ahash, aexists, aoutput };\nconst assert = {\n    number: anumber,\n    bytes: abytes,\n    hash: ahash,\n    exists: aexists,\n    output: aoutput,\n};\nexport default assert;\n//# sourceMappingURL=_assert.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// BigUint64Array is too slow as per 2024, so we implement it using Uint32Array.\n// TODO: re-check https://issues.chromium.org/issues/42212588\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { abytes, aexists, anumber, aoutput } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, isLE, byteSwap32, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        anumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        aexists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        aexists(this, false);\n        abytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        anumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        aoutput(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { keccak_256 } from '@noble/hashes/sha3';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function keccak256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = keccak_256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=keccak256.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { stringToBytes, } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { LruMap } from '../lru.js';\nimport { isAddress } from './isAddress.js';\nconst checksumAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function checksumAddress(address_, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (checksumAddressCache.has(`${address_}.${chainId}`))\n        return checksumAddressCache.get(`${address_}.${chainId}`);\n    const hexAddress = chainId\n        ? `${chainId}${address_.toLowerCase()}`\n        : address_.substring(2).toLowerCase();\n    const hash = keccak256(stringToBytes(hexAddress), 'bytes');\n    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n    for (let i = 0; i < 40; i += 2) {\n        if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n            address[i] = address[i].toUpperCase();\n        }\n        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n            address[i + 1] = address[i + 1].toUpperCase();\n        }\n    }\n    const result = `0x${address.join('')}`;\n    checksumAddressCache.set(`${address_}.${chainId}`, result);\n    return result;\n}\nexport function getAddress(address, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (!isAddress(address, { strict: false }))\n        throw new InvalidAddressError({ address });\n    return checksumAddress(address, chainId);\n}\n//# sourceMappingURL=getAddress.js.map","import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\n/** @internal */\nexport const isAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function isAddress(address, options) {\n    const { strict = true } = options ?? {};\n    const cacheKey = `${address}.${strict}`;\n    if (isAddressCache.has(cacheKey))\n        return isAddressCache.get(cacheKey);\n    const result = (() => {\n        if (!addressRegex.test(address))\n            return false;\n        if (address.toLowerCase() === address)\n            return true;\n        if (strict)\n            return checksumAddress(address) === address;\n        return true;\n    })();\n    isAddressCache.set(cacheKey, result);\n    return result;\n}\n//# sourceMappingURL=isAddress.js.map","import { SliceOffsetOutOfBoundsError, } from '../../errors/data.js';\nimport { isHex } from './isHex.js';\nimport { size } from './size.js';\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice(value, start, end, { strict } = {}) {\n    if (isHex(value, { strict: false }))\n        return sliceHex(value, start, end, {\n            strict,\n        });\n    return sliceBytes(value, start, end, {\n        strict,\n    });\n}\nfunction assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n        throw new SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: size(value),\n        });\n}\nfunction assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        size(value) !== end - start) {\n        throw new SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: size(value),\n        });\n    }\n}\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = value_.slice(start, end);\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = `0x${value_\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n//# sourceMappingURL=slice.js.map","export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/;\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;\n//# sourceMappingURL=regex.js.map","import { AbiEncodingArrayLengthMismatchError, AbiEncodingBytesSizeMismatchError, AbiEncodingLengthMismatchError, InvalidAbiEncodingTypeError, InvalidArrayError, } from '../../errors/abi.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { IntegerOutOfRangeError } from '../../errors/encoding.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { concat } from '../data/concat.js';\nimport { padHex } from '../data/pad.js';\nimport { size } from '../data/size.js';\nimport { slice } from '../data/slice.js';\nimport { boolToHex, numberToHex, stringToHex, } from '../encoding/toHex.js';\nimport { integerRegex } from '../regex.js';\n/**\n * @description Encodes a list of primitive values into an ABI-encoded hex value.\n *\n * - Docs: https://viem.sh/docs/abi/encodeAbiParameters#encodeabiparameters\n *\n *   Generates ABI encoded data using the [ABI specification](https://docs.soliditylang.org/en/latest/abi-spec), given a set of ABI parameters (inputs/outputs) and their corresponding values.\n *\n * @param params - a set of ABI Parameters (params), that can be in the shape of the inputs or outputs attribute of an ABI Item.\n * @param values - a set of values (values) that correspond to the given params.\n * @example\n * ```typescript\n * import { encodeAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   [\n *     { name: 'x', type: 'string' },\n *     { name: 'y', type: 'uint' },\n *     { name: 'z', type: 'bool' }\n *   ],\n *   ['wagmi', 420n, true]\n * )\n * ```\n *\n * You can also pass in Human Readable parameters with the parseAbiParameters utility.\n *\n * @example\n * ```typescript\n * import { encodeAbiParameters, parseAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   parseAbiParameters('string x, uint y, bool z'),\n *   ['wagmi', 420n, true]\n * )\n * ```\n */\nexport function encodeAbiParameters(params, values) {\n    if (params.length !== values.length)\n        throw new AbiEncodingLengthMismatchError({\n            expectedLength: params.length,\n            givenLength: values.length,\n        });\n    // Prepare the parameters to determine dynamic types to encode.\n    const preparedParams = prepareParams({\n        params: params,\n        values: values,\n    });\n    const data = encodeParams(preparedParams);\n    if (data.length === 0)\n        return '0x';\n    return data;\n}\nfunction prepareParams({ params, values, }) {\n    const preparedParams = [];\n    for (let i = 0; i < params.length; i++) {\n        preparedParams.push(prepareParam({ param: params[i], value: values[i] }));\n    }\n    return preparedParams;\n}\nfunction prepareParam({ param, value, }) {\n    const arrayComponents = getArrayComponents(param.type);\n    if (arrayComponents) {\n        const [length, type] = arrayComponents;\n        return encodeArray(value, { length, param: { ...param, type } });\n    }\n    if (param.type === 'tuple') {\n        return encodeTuple(value, {\n            param: param,\n        });\n    }\n    if (param.type === 'address') {\n        return encodeAddress(value);\n    }\n    if (param.type === 'bool') {\n        return encodeBool(value);\n    }\n    if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n        const signed = param.type.startsWith('int');\n        const [, , size = '256'] = integerRegex.exec(param.type) ?? [];\n        return encodeNumber(value, {\n            signed,\n            size: Number(size),\n        });\n    }\n    if (param.type.startsWith('bytes')) {\n        return encodeBytes(value, { param });\n    }\n    if (param.type === 'string') {\n        return encodeString(value);\n    }\n    throw new InvalidAbiEncodingTypeError(param.type, {\n        docsPath: '/docs/contract/encodeAbiParameters',\n    });\n}\nfunction encodeParams(preparedParams) {\n    // 1. Compute the size of the static part of the parameters.\n    let staticSize = 0;\n    for (let i = 0; i < preparedParams.length; i++) {\n        const { dynamic, encoded } = preparedParams[i];\n        if (dynamic)\n            staticSize += 32;\n        else\n            staticSize += size(encoded);\n    }\n    // 2. Split the parameters into static and dynamic parts.\n    const staticParams = [];\n    const dynamicParams = [];\n    let dynamicSize = 0;\n    for (let i = 0; i < preparedParams.length; i++) {\n        const { dynamic, encoded } = preparedParams[i];\n        if (dynamic) {\n            staticParams.push(numberToHex(staticSize + dynamicSize, { size: 32 }));\n            dynamicParams.push(encoded);\n            dynamicSize += size(encoded);\n        }\n        else {\n            staticParams.push(encoded);\n        }\n    }\n    // 3. Concatenate static and dynamic parts.\n    return concat([...staticParams, ...dynamicParams]);\n}\nfunction encodeAddress(value) {\n    if (!isAddress(value))\n        throw new InvalidAddressError({ address: value });\n    return { dynamic: false, encoded: padHex(value.toLowerCase()) };\n}\nfunction encodeArray(value, { length, param, }) {\n    const dynamic = length === null;\n    if (!Array.isArray(value))\n        throw new InvalidArrayError(value);\n    if (!dynamic && value.length !== length)\n        throw new AbiEncodingArrayLengthMismatchError({\n            expectedLength: length,\n            givenLength: value.length,\n            type: `${param.type}[${length}]`,\n        });\n    let dynamicChild = false;\n    const preparedParams = [];\n    for (let i = 0; i < value.length; i++) {\n        const preparedParam = prepareParam({ param, value: value[i] });\n        if (preparedParam.dynamic)\n            dynamicChild = true;\n        preparedParams.push(preparedParam);\n    }\n    if (dynamic || dynamicChild) {\n        const data = encodeParams(preparedParams);\n        if (dynamic) {\n            const length = numberToHex(preparedParams.length, { size: 32 });\n            return {\n                dynamic: true,\n                encoded: preparedParams.length > 0 ? concat([length, data]) : length,\n            };\n        }\n        if (dynamicChild)\n            return { dynamic: true, encoded: data };\n    }\n    return {\n        dynamic: false,\n        encoded: concat(preparedParams.map(({ encoded }) => encoded)),\n    };\n}\nfunction encodeBytes(value, { param }) {\n    const [, paramSize] = param.type.split('bytes');\n    const bytesSize = size(value);\n    if (!paramSize) {\n        let value_ = value;\n        // If the size is not divisible by 32 bytes, pad the end\n        // with empty bytes to the ceiling 32 bytes.\n        if (bytesSize % 32 !== 0)\n            value_ = padHex(value_, {\n                dir: 'right',\n                size: Math.ceil((value.length - 2) / 2 / 32) * 32,\n            });\n        return {\n            dynamic: true,\n            encoded: concat([padHex(numberToHex(bytesSize, { size: 32 })), value_]),\n        };\n    }\n    if (bytesSize !== Number.parseInt(paramSize))\n        throw new AbiEncodingBytesSizeMismatchError({\n            expectedSize: Number.parseInt(paramSize),\n            value,\n        });\n    return { dynamic: false, encoded: padHex(value, { dir: 'right' }) };\n}\nfunction encodeBool(value) {\n    if (typeof value !== 'boolean')\n        throw new BaseError(`Invalid boolean value: \"${value}\" (type: ${typeof value}). Expected: \\`true\\` or \\`false\\`.`);\n    return { dynamic: false, encoded: padHex(boolToHex(value)) };\n}\nfunction encodeNumber(value, { signed, size = 256 }) {\n    if (typeof size === 'number') {\n        const max = 2n ** (BigInt(size) - (signed ? 1n : 0n)) - 1n;\n        const min = signed ? -max - 1n : 0n;\n        if (value > max || value < min)\n            throw new IntegerOutOfRangeError({\n                max: max.toString(),\n                min: min.toString(),\n                signed,\n                size: size / 8,\n                value: value.toString(),\n            });\n    }\n    return {\n        dynamic: false,\n        encoded: numberToHex(value, {\n            size: 32,\n            signed,\n        }),\n    };\n}\nfunction encodeString(value) {\n    const hexValue = stringToHex(value);\n    const partsLength = Math.ceil(size(hexValue) / 32);\n    const parts = [];\n    for (let i = 0; i < partsLength; i++) {\n        parts.push(padHex(slice(hexValue, i * 32, (i + 1) * 32), {\n            dir: 'right',\n        }));\n    }\n    return {\n        dynamic: true,\n        encoded: concat([\n            padHex(numberToHex(size(hexValue), { size: 32 })),\n            ...parts,\n        ]),\n    };\n}\nfunction encodeTuple(value, { param }) {\n    let dynamic = false;\n    const preparedParams = [];\n    for (let i = 0; i < param.components.length; i++) {\n        const param_ = param.components[i];\n        const index = Array.isArray(value) ? i : param_.name;\n        const preparedParam = prepareParam({\n            param: param_,\n            value: value[index],\n        });\n        preparedParams.push(preparedParam);\n        if (preparedParam.dynamic)\n            dynamic = true;\n    }\n    return {\n        dynamic,\n        encoded: dynamic\n            ? encodeParams(preparedParams)\n            : concat(preparedParams.map(({ encoded }) => encoded)),\n    };\n}\nexport function getArrayComponents(type) {\n    const matches = type.match(/^(.*)\\[(\\d+)?\\]$/);\n    return matches\n        ? // Return `null` if the array is dynamic.\n            [matches[2] ? Number(matches[2]) : null, matches[1]]\n        : undefined;\n}\n//# sourceMappingURL=encodeAbiParameters.js.map","import { toBytes } from '../encoding/toBytes.js';\nimport { keccak256 } from './keccak256.js';\nconst hash = (value) => keccak256(toBytes(value));\nexport function hashSignature(sig) {\n    return hash(sig);\n}\n//# sourceMappingURL=hashSignature.js.map","// TODO: This looks cool. Need to check the performance of `new RegExp` versus defined inline though.\n// https://twitter.com/GabrielVergnaud/status/1622906834343366657\nexport function execTyped(regex, string) {\n    const match = regex.exec(string);\n    return match?.groups;\n}\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;\nexport const isTupleRegex = /^\\(.+?\\).*?$/;\n//# sourceMappingURL=regex.js.map","import { execTyped } from '../regex.js';\n// https://regexr.com/7f7rv\nconst tupleRegex = /^tuple(?<array>(\\[(\\d*)\\])*)$/;\n/**\n * Formats {@link AbiParameter} to human-readable ABI parameter.\n *\n * @param abiParameter - ABI parameter\n * @returns Human-readable ABI parameter\n *\n * @example\n * const result = formatAbiParameter({ type: 'address', name: 'from' })\n * //    ^? const result: 'address from'\n */\nexport function formatAbiParameter(abiParameter) {\n    let type = abiParameter.type;\n    if (tupleRegex.test(abiParameter.type) && 'components' in abiParameter) {\n        type = '(';\n        const length = abiParameter.components.length;\n        for (let i = 0; i < length; i++) {\n            const component = abiParameter.components[i];\n            type += formatAbiParameter(component);\n            if (i < length - 1)\n                type += ', ';\n        }\n        const result = execTyped(tupleRegex, abiParameter.type);\n        type += `)${result?.array ?? ''}`;\n        return formatAbiParameter({\n            ...abiParameter,\n            type,\n        });\n    }\n    // Add `indexed` to type if in `abiParameter`\n    if ('indexed' in abiParameter && abiParameter.indexed)\n        type = `${type} indexed`;\n    // Return human-readable ABI parameter\n    if (abiParameter.name)\n        return `${type} ${abiParameter.name}`;\n    return type;\n}\n//# sourceMappingURL=formatAbiParameter.js.map","import { formatAbiParameter, } from './formatAbiParameter.js';\n/**\n * Formats {@link AbiParameter}s to human-readable ABI parameters.\n *\n * @param abiParameters - ABI parameters\n * @returns Human-readable ABI parameters\n *\n * @example\n * const result = formatAbiParameters([\n *   //  ^? const result: 'address from, uint256 tokenId'\n *   { type: 'address', name: 'from' },\n *   { type: 'uint256', name: 'tokenId' },\n * ])\n */\nexport function formatAbiParameters(abiParameters) {\n    let params = '';\n    const length = abiParameters.length;\n    for (let i = 0; i < length; i++) {\n        const abiParameter = abiParameters[i];\n        params += formatAbiParameter(abiParameter);\n        if (i !== length - 1)\n            params += ', ';\n    }\n    return params;\n}\n//# sourceMappingURL=formatAbiParameters.js.map","import { formatAbiParameters, } from './formatAbiParameters.js';\n/**\n * Formats ABI item (e.g. error, event, function) into human-readable ABI item\n *\n * @param abiItem - ABI item\n * @returns Human-readable ABI item\n */\nexport function formatAbiItem(abiItem) {\n    if (abiItem.type === 'function')\n        return `function ${abiItem.name}(${formatAbiParameters(abiItem.inputs)})${abiItem.stateMutability && abiItem.stateMutability !== 'nonpayable'\n            ? ` ${abiItem.stateMutability}`\n            : ''}${abiItem.outputs?.length\n            ? ` returns (${formatAbiParameters(abiItem.outputs)})`\n            : ''}`;\n    if (abiItem.type === 'event')\n        return `event ${abiItem.name}(${formatAbiParameters(abiItem.inputs)})`;\n    if (abiItem.type === 'error')\n        return `error ${abiItem.name}(${formatAbiParameters(abiItem.inputs)})`;\n    if (abiItem.type === 'constructor')\n        return `constructor(${formatAbiParameters(abiItem.inputs)})${abiItem.stateMutability === 'payable' ? ' payable' : ''}`;\n    if (abiItem.type === 'fallback')\n        return `fallback() external${abiItem.stateMutability === 'payable' ? ' payable' : ''}`;\n    return 'receive() external payable';\n}\n//# sourceMappingURL=formatAbiItem.js.map","import { BaseError } from '../../errors/base.js';\nexport function normalizeSignature(signature) {\n    let active = true;\n    let current = '';\n    let level = 0;\n    let result = '';\n    let valid = false;\n    for (let i = 0; i < signature.length; i++) {\n        const char = signature[i];\n        // If the character is a separator, we want to reactivate.\n        if (['(', ')', ','].includes(char))\n            active = true;\n        // If the character is a \"level\" token, we want to increment/decrement.\n        if (char === '(')\n            level++;\n        if (char === ')')\n            level--;\n        // If we aren't active, we don't want to mutate the result.\n        if (!active)\n            continue;\n        // If level === 0, we are at the definition level.\n        if (level === 0) {\n            if (char === ' ' && ['event', 'function', ''].includes(result))\n                result = '';\n            else {\n                result += char;\n                // If we are at the end of the definition, we must be finished.\n                if (char === ')') {\n                    valid = true;\n                    break;\n                }\n            }\n            continue;\n        }\n        // Ignore spaces\n        if (char === ' ') {\n            // If the previous character is a separator, and the current section isn't empty, we want to deactivate.\n            if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {\n                current = '';\n                active = false;\n            }\n            continue;\n        }\n        result += char;\n        current += char;\n    }\n    if (!valid)\n        throw new BaseError('Unable to normalize signature.');\n    return result;\n}\n//# sourceMappingURL=normalizeSignature.js.map","import { formatAbiItem } from 'abitype';\nimport { normalizeSignature, } from './normalizeSignature.js';\n/**\n * Returns the signature for a given function or event definition.\n *\n * @example\n * const signature = toSignature('function ownerOf(uint256 tokenId)')\n * // 'ownerOf(uint256)'\n *\n * @example\n * const signature_3 = toSignature({\n *   name: 'ownerOf',\n *   type: 'function',\n *   inputs: [{ name: 'tokenId', type: 'uint256' }],\n *   outputs: [],\n *   stateMutability: 'view',\n * })\n * // 'ownerOf(uint256)'\n */\nexport const toSignature = (def) => {\n    const def_ = (() => {\n        if (typeof def === 'string')\n            return def;\n        return formatAbiItem(def);\n    })();\n    return normalizeSignature(def_);\n};\n//# sourceMappingURL=toSignature.js.map","import { hashSignature } from './hashSignature.js';\nimport { toSignature } from './toSignature.js';\n/**\n * Returns the hash (of the function/event signature) for a given event or function definition.\n */\nexport function toSignatureHash(fn) {\n    return hashSignature(toSignature(fn));\n}\n//# sourceMappingURL=toSignatureHash.js.map","import { slice } from '../data/slice.js';\nimport { toSignatureHash, } from './toSignatureHash.js';\n/**\n * Returns the function selector for a given function definition.\n *\n * @example\n * const selector = toFunctionSelector('function ownerOf(uint256 tokenId)')\n * // 0x6352211e\n */\nexport const toFunctionSelector = (fn) => slice(toSignatureHash(fn), 0, 4);\n//# sourceMappingURL=toFunctionSelector.js.map","import { toSignatureHash, } from './toSignatureHash.js';\n/**\n * Returns the event selector for a given event definition.\n *\n * @example\n * const selector = toEventSelector('Transfer(address indexed from, address indexed to, uint256 amount)')\n * // 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n */\nexport const toEventSelector = toSignatureHash;\n//# sourceMappingURL=toEventSelector.js.map","import { AbiItemAmbiguityError, } from '../../errors/abi.js';\nimport { isHex } from '../../utils/data/isHex.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { toEventSelector } from '../hash/toEventSelector.js';\nimport { toFunctionSelector, } from '../hash/toFunctionSelector.js';\nexport function getAbiItem(parameters) {\n    const { abi, args = [], name } = parameters;\n    const isSelector = isHex(name, { strict: false });\n    const abiItems = abi.filter((abiItem) => {\n        if (isSelector) {\n            if (abiItem.type === 'function')\n                return toFunctionSelector(abiItem) === name;\n            if (abiItem.type === 'event')\n                return toEventSelector(abiItem) === name;\n            return false;\n        }\n        return 'name' in abiItem && abiItem.name === name;\n    });\n    if (abiItems.length === 0)\n        return undefined;\n    if (abiItems.length === 1)\n        return abiItems[0];\n    let matchedAbiItem = undefined;\n    for (const abiItem of abiItems) {\n        if (!('inputs' in abiItem))\n            continue;\n        if (!args || args.length === 0) {\n            if (!abiItem.inputs || abiItem.inputs.length === 0)\n                return abiItem;\n            continue;\n        }\n        if (!abiItem.inputs)\n            continue;\n        if (abiItem.inputs.length === 0)\n            continue;\n        if (abiItem.inputs.length !== args.length)\n            continue;\n        const matched = args.every((arg, index) => {\n            const abiParameter = 'inputs' in abiItem && abiItem.inputs[index];\n            if (!abiParameter)\n                return false;\n            return isArgOfType(arg, abiParameter);\n        });\n        if (matched) {\n            // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).\n            if (matchedAbiItem &&\n                'inputs' in matchedAbiItem &&\n                matchedAbiItem.inputs) {\n                const ambiguousTypes = getAmbiguousTypes(abiItem.inputs, matchedAbiItem.inputs, args);\n                if (ambiguousTypes)\n                    throw new AbiItemAmbiguityError({\n                        abiItem,\n                        type: ambiguousTypes[0],\n                    }, {\n                        abiItem: matchedAbiItem,\n                        type: ambiguousTypes[1],\n                    });\n            }\n            matchedAbiItem = abiItem;\n        }\n    }\n    if (matchedAbiItem)\n        return matchedAbiItem;\n    return abiItems[0];\n}\n/** @internal */\nexport function isArgOfType(arg, abiParameter) {\n    const argType = typeof arg;\n    const abiParameterType = abiParameter.type;\n    switch (abiParameterType) {\n        case 'address':\n            return isAddress(arg, { strict: false });\n        case 'bool':\n            return argType === 'boolean';\n        case 'function':\n            return argType === 'string';\n        case 'string':\n            return argType === 'string';\n        default: {\n            if (abiParameterType === 'tuple' && 'components' in abiParameter)\n                return Object.values(abiParameter.components).every((component, index) => {\n                    return isArgOfType(Object.values(arg)[index], component);\n                });\n            // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n            // https://regexr.com/6v8hp\n            if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(abiParameterType))\n                return argType === 'number' || argType === 'bigint';\n            // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n            // https://regexr.com/6va55\n            if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n                return argType === 'string' || arg instanceof Uint8Array;\n            // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n            // https://regexr.com/6va6i\n            if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n                return (Array.isArray(arg) &&\n                    arg.every((x) => isArgOfType(x, {\n                        ...abiParameter,\n                        // Pop off `[]` or `[M]` from end of type\n                        type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, ''),\n                    })));\n            }\n            return false;\n        }\n    }\n}\n/** @internal */\nexport function getAmbiguousTypes(sourceParameters, targetParameters, args) {\n    for (const parameterIndex in sourceParameters) {\n        const sourceParameter = sourceParameters[parameterIndex];\n        const targetParameter = targetParameters[parameterIndex];\n        if (sourceParameter.type === 'tuple' &&\n            targetParameter.type === 'tuple' &&\n            'components' in sourceParameter &&\n            'components' in targetParameter)\n            return getAmbiguousTypes(sourceParameter.components, targetParameter.components, args[parameterIndex]);\n        const types = [sourceParameter.type, targetParameter.type];\n        const ambiguous = (() => {\n            if (types.includes('address') && types.includes('bytes20'))\n                return true;\n            if (types.includes('address') && types.includes('string'))\n                return isAddress(args[parameterIndex], { strict: false });\n            if (types.includes('address') && types.includes('bytes'))\n                return isAddress(args[parameterIndex], { strict: false });\n            return false;\n        })();\n        if (ambiguous)\n            return types;\n    }\n    return;\n}\n//# sourceMappingURL=getAbiItem.js.map","import { AbiFunctionNotFoundError, } from '../../errors/abi.js';\nimport { toFunctionSelector, } from '../hash/toFunctionSelector.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nimport { getAbiItem } from './getAbiItem.js';\nconst docsPath = '/docs/contract/encodeFunctionData';\nexport function prepareEncodeFunctionData(parameters) {\n    const { abi, args, functionName } = parameters;\n    let abiItem = abi[0];\n    if (functionName) {\n        const item = getAbiItem({\n            abi,\n            args,\n            name: functionName,\n        });\n        if (!item)\n            throw new AbiFunctionNotFoundError(functionName, { docsPath });\n        abiItem = item;\n    }\n    if (abiItem.type !== 'function')\n        throw new AbiFunctionNotFoundError(undefined, { docsPath });\n    return {\n        abi: [abiItem],\n        functionName: toFunctionSelector(formatAbiItem(abiItem)),\n    };\n}\n//# sourceMappingURL=prepareEncodeFunctionData.js.map","import { concatHex } from '../data/concat.js';\nimport { encodeAbiParameters, } from './encodeAbiParameters.js';\nimport { prepareEncodeFunctionData } from './prepareEncodeFunctionData.js';\nexport function encodeFunctionData(parameters) {\n    const { args } = parameters;\n    const { abi, functionName } = (() => {\n        if (parameters.abi.length === 1 &&\n            parameters.functionName?.startsWith('0x'))\n            return parameters;\n        return prepareEncodeFunctionData(parameters);\n    })();\n    const abiItem = abi[0];\n    const signature = functionName;\n    const data = 'inputs' in abiItem && abiItem.inputs\n        ? encodeAbiParameters(abiItem.inputs, args ?? [])\n        : undefined;\n    return concatHex([signature, data ?? '0x']);\n}\n//# sourceMappingURL=encodeFunctionData.js.map","export const presignMessagePrefix = '\\x19Ethereum Signed Message:\\n';\n//# sourceMappingURL=strings.js.map","import { presignMessagePrefix } from '../../constants/strings.js';\nimport { concat } from '../data/concat.js';\nimport { size } from '../data/size.js';\nimport { bytesToHex, stringToHex, } from '../encoding/toHex.js';\nexport function toPrefixedMessage(message_) {\n    const message = (() => {\n        if (typeof message_ === 'string')\n            return stringToHex(message_);\n        if (typeof message_.raw === 'string')\n            return message_.raw;\n        return bytesToHex(message_.raw);\n    })();\n    const prefix = stringToHex(`${presignMessagePrefix}${size(message)}`);\n    return concat([prefix, message]);\n}\n//# sourceMappingURL=toPrefixedMessage.js.map","import { keccak256 } from '../hash/keccak256.js';\nimport { toPrefixedMessage } from './toPrefixedMessage.js';\nexport function hashMessage(message, to_) {\n    return keccak256(toPrefixedMessage(message), to_);\n}\n//# sourceMappingURL=hashMessage.js.map","export const stringify = (value, replacer, space) => JSON.stringify(value, (key, value_) => {\n    const value = typeof value_ === 'bigint' ? value_.toString() : value_;\n    return typeof replacer === 'function' ? replacer(key, value) : value;\n}, space);\n//# sourceMappingURL=stringify.js.map","import { stringify } from '../utils/stringify.js';\nimport { BaseError } from './base.js';\nexport class InvalidDomainError extends BaseError {\n    constructor({ domain }) {\n        super(`Invalid domain \"${stringify(domain)}\".`, {\n            metaMessages: ['Must be a valid EIP-712 domain.'],\n        });\n    }\n}\nexport class InvalidPrimaryTypeError extends BaseError {\n    constructor({ primaryType, types, }) {\n        super(`Invalid primary type \\`${primaryType}\\` must be one of \\`${JSON.stringify(Object.keys(types))}\\`.`, {\n            docsPath: '/api/glossary/Errors#typeddatainvalidprimarytypeerror',\n            metaMessages: ['Check that the primary type is a key in `types`.'],\n        });\n    }\n}\nexport class InvalidStructTypeError extends BaseError {\n    constructor({ type }) {\n        super(`Struct type \"${type}\" is invalid.`, {\n            metaMessages: ['Struct type must not be a Solidity type.'],\n            name: 'InvalidStructTypeError',\n        });\n    }\n}\n//# sourceMappingURL=typedData.js.map","import { BytesSizeMismatchError } from '../errors/abi.js';\nimport { InvalidAddressError } from '../errors/address.js';\nimport { InvalidDomainError, InvalidPrimaryTypeError, InvalidStructTypeError, } from '../errors/typedData.js';\nimport { isAddress } from './address/isAddress.js';\nimport { size } from './data/size.js';\nimport { numberToHex } from './encoding/toHex.js';\nimport { bytesRegex, integerRegex } from './regex.js';\nimport { hashDomain, } from './signature/hashTypedData.js';\nimport { stringify } from './stringify.js';\nexport function serializeTypedData(parameters) {\n    const { domain: domain_, message: message_, primaryType, types, } = parameters;\n    const normalizeData = (struct, data_) => {\n        const data = { ...data_ };\n        for (const param of struct) {\n            const { name, type } = param;\n            if (type === 'address')\n                data[name] = data[name].toLowerCase();\n        }\n        return data;\n    };\n    const domain = (() => {\n        if (!types.EIP712Domain)\n            return {};\n        if (!domain_)\n            return {};\n        return normalizeData(types.EIP712Domain, domain_);\n    })();\n    const message = (() => {\n        if (primaryType === 'EIP712Domain')\n            return undefined;\n        return normalizeData(types[primaryType], message_);\n    })();\n    return stringify({ domain, message, primaryType, types });\n}\nexport function validateTypedData(parameters) {\n    const { domain, message, primaryType, types } = parameters;\n    const validateData = (struct, data) => {\n        for (const param of struct) {\n            const { name, type } = param;\n            const value = data[name];\n            const integerMatch = type.match(integerRegex);\n            if (integerMatch &&\n                (typeof value === 'number' || typeof value === 'bigint')) {\n                const [_type, base, size_] = integerMatch;\n                // If number cannot be cast to a sized hex value, it is out of range\n                // and will throw.\n                numberToHex(value, {\n                    signed: base === 'int',\n                    size: Number.parseInt(size_) / 8,\n                });\n            }\n            if (type === 'address' && typeof value === 'string' && !isAddress(value))\n                throw new InvalidAddressError({ address: value });\n            const bytesMatch = type.match(bytesRegex);\n            if (bytesMatch) {\n                const [_type, size_] = bytesMatch;\n                if (size_ && size(value) !== Number.parseInt(size_))\n                    throw new BytesSizeMismatchError({\n                        expectedSize: Number.parseInt(size_),\n                        givenSize: size(value),\n                    });\n            }\n            const struct = types[type];\n            if (struct) {\n                validateReference(type);\n                validateData(struct, value);\n            }\n        }\n    };\n    // Validate domain types.\n    if (types.EIP712Domain && domain) {\n        if (typeof domain !== 'object')\n            throw new InvalidDomainError({ domain });\n        validateData(types.EIP712Domain, domain);\n    }\n    // Validate message types.\n    if (primaryType !== 'EIP712Domain') {\n        if (types[primaryType])\n            validateData(types[primaryType], message);\n        else\n            throw new InvalidPrimaryTypeError({ primaryType, types });\n    }\n}\nexport function getTypesForEIP712Domain({ domain, }) {\n    return [\n        typeof domain?.name === 'string' && { name: 'name', type: 'string' },\n        domain?.version && { name: 'version', type: 'string' },\n        typeof domain?.chainId === 'number' && {\n            name: 'chainId',\n            type: 'uint256',\n        },\n        domain?.verifyingContract && {\n            name: 'verifyingContract',\n            type: 'address',\n        },\n        domain?.salt && { name: 'salt', type: 'bytes32' },\n    ].filter(Boolean);\n}\nexport function domainSeparator({ domain }) {\n    return hashDomain({\n        domain,\n        types: {\n            EIP712Domain: getTypesForEIP712Domain({ domain }),\n        },\n    });\n}\n/** @internal */\nfunction validateReference(type) {\n    // Struct type must not be a Solidity type.\n    if (type === 'address' ||\n        type === 'bool' ||\n        type === 'string' ||\n        type.startsWith('bytes') ||\n        type.startsWith('uint') ||\n        type.startsWith('int'))\n        throw new InvalidStructTypeError({ type });\n}\n//# sourceMappingURL=typedData.js.map","// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts\nimport { encodeAbiParameters, } from '../abi/encodeAbiParameters.js';\nimport { concat } from '../data/concat.js';\nimport { toHex } from '../encoding/toHex.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { getTypesForEIP712Domain, validateTypedData, } from '../typedData.js';\nexport function hashTypedData(parameters) {\n    const { domain = {}, message, primaryType, } = parameters;\n    const types = {\n        EIP712Domain: getTypesForEIP712Domain({ domain }),\n        ...parameters.types,\n    };\n    // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n    // as we can't statically check this with TypeScript.\n    validateTypedData({\n        domain,\n        message,\n        primaryType,\n        types,\n    });\n    const parts = ['0x1901'];\n    if (domain)\n        parts.push(hashDomain({\n            domain,\n            types: types,\n        }));\n    if (primaryType !== 'EIP712Domain')\n        parts.push(hashStruct({\n            data: message,\n            primaryType,\n            types: types,\n        }));\n    return keccak256(concat(parts));\n}\nexport function hashDomain({ domain, types, }) {\n    return hashStruct({\n        data: domain,\n        primaryType: 'EIP712Domain',\n        types,\n    });\n}\nexport function hashStruct({ data, primaryType, types, }) {\n    const encoded = encodeData({\n        data,\n        primaryType,\n        types,\n    });\n    return keccak256(encoded);\n}\nfunction encodeData({ data, primaryType, types, }) {\n    const encodedTypes = [{ type: 'bytes32' }];\n    const encodedValues = [hashType({ primaryType, types })];\n    for (const field of types[primaryType]) {\n        const [type, value] = encodeField({\n            types,\n            name: field.name,\n            type: field.type,\n            value: data[field.name],\n        });\n        encodedTypes.push(type);\n        encodedValues.push(value);\n    }\n    return encodeAbiParameters(encodedTypes, encodedValues);\n}\nfunction hashType({ primaryType, types, }) {\n    const encodedHashType = toHex(encodeType({ primaryType, types }));\n    return keccak256(encodedHashType);\n}\nexport function encodeType({ primaryType, types, }) {\n    let result = '';\n    const unsortedDeps = findTypeDependencies({ primaryType, types });\n    unsortedDeps.delete(primaryType);\n    const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n    for (const type of deps) {\n        result += `${type}(${types[type]\n            .map(({ name, type: t }) => `${t} ${name}`)\n            .join(',')})`;\n    }\n    return result;\n}\nfunction findTypeDependencies({ primaryType: primaryType_, types, }, results = new Set()) {\n    const match = primaryType_.match(/^\\w*/u);\n    const primaryType = match?.[0];\n    if (results.has(primaryType) || types[primaryType] === undefined) {\n        return results;\n    }\n    results.add(primaryType);\n    for (const field of types[primaryType]) {\n        findTypeDependencies({ primaryType: field.type, types }, results);\n    }\n    return results;\n}\nfunction encodeField({ types, name, type, value, }) {\n    if (types[type] !== undefined) {\n        return [\n            { type: 'bytes32' },\n            keccak256(encodeData({ data: value, primaryType: type, types })),\n        ];\n    }\n    if (type === 'bytes') {\n        const prepend = value.length % 2 ? '0' : '';\n        value = `0x${prepend + value.slice(2)}`;\n        return [{ type: 'bytes32' }, keccak256(value)];\n    }\n    if (type === 'string')\n        return [{ type: 'bytes32' }, keccak256(toHex(value))];\n    if (type.lastIndexOf(']') === type.length - 1) {\n        const parsedType = type.slice(0, type.lastIndexOf('['));\n        const typeValuePairs = value.map((item) => encodeField({\n            name,\n            type: parsedType,\n            types,\n            value: item,\n        }));\n        return [\n            { type: 'bytes32' },\n            keccak256(encodeAbiParameters(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v))),\n        ];\n    }\n    return [{ type }, value];\n}\n//# sourceMappingURL=hashTypedData.js.map","const MAGIC_VALUE = '0x1626ba7e';\nconst MAGIC_VALUE_BYTES = '0x20c13b0b';\nexport { MAGIC_VALUE, MAGIC_VALUE_BYTES };\n//# sourceMappingURL=signatures.js.map","export const PERMISSIONS_REQUEST_REJECTED = 4001;\nexport class PermissionsError extends Error {\n    constructor(message, code, data) {\n        super(message);\n        this.code = code;\n        this.data = data;\n        // Should adjust prototype manually because how TS handles the type extension compilation\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, PermissionsError.prototype);\n    }\n}\n//# sourceMappingURL=permissions.js.map","import { Methods, RestrictedMethods } from '../communication/methods.js';\nimport { PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\nclass Wallet {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getPermissions() {\n        const response = await this.communicator.send(Methods.wallet_getPermissions, undefined);\n        return response.data;\n    }\n    async requestPermissions(permissions) {\n        if (!this.isPermissionRequestValid(permissions)) {\n            throw new PermissionsError('Permissions request is invalid', PERMISSIONS_REQUEST_REJECTED);\n        }\n        try {\n            const response = await this.communicator.send(Methods.wallet_requestPermissions, permissions);\n            return response.data;\n        }\n        catch {\n            throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n        }\n    }\n    isPermissionRequestValid(permissions) {\n        return permissions.every((pr) => {\n            if (typeof pr === 'object') {\n                return Object.keys(pr).every((method) => {\n                    if (Object.values(RestrictedMethods).includes(method)) {\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            return false;\n        });\n    }\n}\nexport { Wallet };\n//# sourceMappingURL=index.js.map","import { Wallet } from '../wallet/index.js';\nimport { PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\nconst hasPermission = (required, permissions) => permissions.some((permission) => permission.parentCapability === required);\nconst requirePermission = () => (_, propertyKey, descriptor) => {\n    const originalMethod = descriptor.value;\n    descriptor.value = async function () {\n        // @ts-expect-error accessing private property from decorator. 'this' context is the class instance\n        const wallet = new Wallet(this.communicator);\n        let currentPermissions = await wallet.getPermissions();\n        if (!hasPermission(propertyKey, currentPermissions)) {\n            currentPermissions = await wallet.requestPermissions([{ [propertyKey]: {} }]);\n        }\n        if (!hasPermission(propertyKey, currentPermissions)) {\n            throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n        }\n        return originalMethod.apply(this);\n    };\n    return descriptor;\n};\nexport default requirePermission;\n//# sourceMappingURL=requirePermissions.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { encodeFunctionData, hashMessage, hashTypedData } from 'viem';\nimport { MAGIC_VALUE_BYTES, MAGIC_VALUE } from './signatures.js';\nimport { Methods } from '../communication/methods.js';\nimport { RPC_CALLS } from '../eth/constants.js';\nimport { isObjectEIP712TypedData, } from '../types/index.js';\nimport requirePermission from '../decorators/requirePermissions.js';\nclass Safe {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getChainInfo() {\n        const response = await this.communicator.send(Methods.getChainInfo, undefined);\n        return response.data;\n    }\n    async getInfo() {\n        const response = await this.communicator.send(Methods.getSafeInfo, undefined);\n        return response.data;\n    }\n    // There is a possibility that this method will change because we may add pagination to the endpoint\n    async experimental_getBalances({ currency = 'usd' } = {}) {\n        const response = await this.communicator.send(Methods.getSafeBalances, {\n            currency,\n        });\n        return response.data;\n    }\n    async check1271Signature(messageHash, signature = '0x') {\n        const safeInfo = await this.getInfo();\n        const encodedIsValidSignatureCall = encodeFunctionData({\n            abi: [\n                {\n                    constant: false,\n                    inputs: [\n                        {\n                            name: '_dataHash',\n                            type: 'bytes32',\n                        },\n                        {\n                            name: '_signature',\n                            type: 'bytes',\n                        },\n                    ],\n                    name: 'isValidSignature',\n                    outputs: [\n                        {\n                            name: '',\n                            type: 'bytes4',\n                        },\n                    ],\n                    payable: false,\n                    stateMutability: 'nonpayable',\n                    type: 'function',\n                },\n            ],\n            functionName: 'isValidSignature',\n            args: [messageHash, signature],\n        });\n        const payload = {\n            call: RPC_CALLS.eth_call,\n            params: [\n                {\n                    to: safeInfo.safeAddress,\n                    data: encodedIsValidSignatureCall,\n                },\n                'latest',\n            ],\n        };\n        try {\n            const response = await this.communicator.send(Methods.rpcCall, payload);\n            return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    async check1271SignatureBytes(messageHash, signature = '0x') {\n        const safeInfo = await this.getInfo();\n        const encodedIsValidSignatureCall = encodeFunctionData({\n            abi: [\n                {\n                    constant: false,\n                    inputs: [\n                        {\n                            name: '_data',\n                            type: 'bytes',\n                        },\n                        {\n                            name: '_signature',\n                            type: 'bytes',\n                        },\n                    ],\n                    name: 'isValidSignature',\n                    outputs: [\n                        {\n                            name: '',\n                            type: 'bytes4',\n                        },\n                    ],\n                    payable: false,\n                    stateMutability: 'nonpayable',\n                    type: 'function',\n                },\n            ],\n            functionName: 'isValidSignature',\n            args: [messageHash, signature],\n        });\n        const payload = {\n            call: RPC_CALLS.eth_call,\n            params: [\n                {\n                    to: safeInfo.safeAddress,\n                    data: encodedIsValidSignatureCall,\n                },\n                'latest',\n            ],\n        };\n        try {\n            const response = await this.communicator.send(Methods.rpcCall, payload);\n            return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE_BYTES;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    calculateMessageHash(message) {\n        return hashMessage(message);\n    }\n    calculateTypedMessageHash(typedMessage) {\n        const chainId = typeof typedMessage.domain.chainId === 'object'\n            ? typedMessage.domain.chainId.toNumber()\n            : Number(typedMessage.domain.chainId);\n        let primaryType = typedMessage.primaryType;\n        if (!primaryType) {\n            const fields = Object.values(typedMessage.types);\n            // We try to infer primaryType (simplified ether's version)\n            const primaryTypes = Object.keys(typedMessage.types).filter((typeName) => fields.every((dataTypes) => dataTypes.every(({ type }) => type.replace('[', '').replace(']', '') !== typeName)));\n            if (primaryTypes.length === 0 || primaryTypes.length > 1)\n                throw new Error('Please specify primaryType');\n            primaryType = primaryTypes[0];\n        }\n        return hashTypedData({\n            message: typedMessage.message,\n            domain: {\n                ...typedMessage.domain,\n                chainId,\n                verifyingContract: typedMessage.domain.verifyingContract,\n                salt: typedMessage.domain.salt,\n            },\n            types: typedMessage.types,\n            primaryType,\n        });\n    }\n    async getOffChainSignature(messageHash) {\n        const response = await this.communicator.send(Methods.getOffChainSignature, messageHash);\n        return response.data;\n    }\n    async isMessageSigned(message, signature = '0x') {\n        let check;\n        if (typeof message === 'string') {\n            check = async () => {\n                const messageHash = this.calculateMessageHash(message);\n                const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n                return messageHashSigned;\n            };\n        }\n        if (isObjectEIP712TypedData(message)) {\n            check = async () => {\n                const messageHash = this.calculateTypedMessageHash(message);\n                const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n                return messageHashSigned;\n            };\n        }\n        if (check) {\n            const isValid = await check();\n            return isValid;\n        }\n        throw new Error('Invalid message type');\n    }\n    async isMessageHashSigned(messageHash, signature = '0x') {\n        const checks = [this.check1271Signature.bind(this), this.check1271SignatureBytes.bind(this)];\n        for (const check of checks) {\n            const isValid = await check(messageHash, signature);\n            if (isValid) {\n                return true;\n            }\n        }\n        return false;\n    }\n    async getEnvironmentInfo() {\n        const response = await this.communicator.send(Methods.getEnvironmentInfo, undefined);\n        return response.data;\n    }\n    async requestAddressBook() {\n        const response = await this.communicator.send(Methods.requestAddressBook, undefined);\n        return response.data;\n    }\n}\n__decorate([\n    requirePermission()\n], Safe.prototype, \"requestAddressBook\", null);\nexport { Safe };\n//# sourceMappingURL=index.js.map","import InterfaceCommunicator from './communication/index.js';\nimport { TXs } from './txs/index.js';\nimport { Eth } from './eth/index.js';\nimport { Safe } from './safe/index.js';\nimport { Wallet } from './wallet/index.js';\nclass SafeAppsSDK {\n    constructor(opts = {}) {\n        const { allowedDomains = null, debug = false } = opts;\n        this.communicator = new InterfaceCommunicator(allowedDomains, debug);\n        this.eth = new Eth(this.communicator);\n        this.txs = new TXs(this.communicator);\n        this.safe = new Safe(this.communicator);\n        this.wallet = new Wallet(this.communicator);\n    }\n}\nexport default SafeAppsSDK;\n//# sourceMappingURL=sdk.js.map","import SDK from './sdk.js';\nexport default SDK;\nexport * from './sdk.js';\nexport * from './types/index.js';\nexport * from './communication/methods.js';\nexport * from './communication/messageFormatter.js';\nexport { getSDKVersion } from './version.js';\nexport * from './eth/constants.js';\n//# sourceMappingURL=index.js.map"],"names":[],"sourceRoot":"","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77]}