{"version":3,"file":"static/chunks/9826.76f4b3947354e2cb.js","mappings":"6OAUA,IAAMA,EAAe,KACnBC,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACC,EAAAA,EAAeA,CAACC,OAAO,CAACC,YAAY,CACjD,EAEaC,EAAoB,OAAC,QAAEC,CAAM,CAAoC,GACtE,WAAEC,CAAS,aAAEC,CAAW,gBAAEC,CAAc,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACC,EAAAA,CAAaA,EAY3E,MAVAC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACRC,CAAAA,EAAAA,EAAAA,EAAAA,CAAmBA,GAAGC,IAAI,CAACP,GAAWQ,KAAK,CAACN,EAC9C,EAAG,CAACF,EAAWE,EAAe,EAE9BG,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACJJ,GACFQ,CAAAA,EAAAA,EAAAA,EAAAA,CAAQA,CAACC,CADM,CACNA,CAAMA,CAACC,IAAI,CAAEV,EAAYW,OAAO,CAE7C,EAAG,CAACX,EAAY,EAGd,WAACY,EAAAA,CAAiBA,CAAAA,CAACC,SAAUrB,YAC3B,UAACsB,EAAAA,GAAUA,CAAAA,CAACC,GAAI,OAAC,SAAEC,CAAO,CAAE,SAAM,CAAEC,MAAOD,EAAQE,OAAO,CAACC,KAAK,YAAK,sBAErE,UAACC,EAAAA,CAAWA,CAAAA,CAACC,QAASvB,EAAOuB,OAAO,CAAEC,cAAc,IAACC,WAAW,IAACC,cAAc,IAE/E,UAACV,EAAAA,GAAUA,CAAAA,CAACW,GAAI,WAAG,sJAMzB,EAAC,EC/BuB,OAAC,MAQVC,GARYL,CAAO,CAAwB,GACxD,MACE,UAACM,EAAAA,CAAQA,CAAAA,CAACC,MAAM,sBAAsBC,SAAS,wBAC7C,UAAChC,EAAiBA,CAACC,OAAQ,OAATD,EAAWwB,CAAQ,KAG3C","sources":["webpack://_N_E/./src/components/tx-flow/flows/RemoveGuard/ReviewRemoveGuard.tsx","webpack://_N_E/./src/components/tx-flow/flows/RemoveGuard/index.tsx"],"sourcesContent":["import { useContext, useEffect } from 'react'\nimport { Typography } from '@mui/material'\nimport SignOrExecuteForm from '@/components/tx/SignOrExecuteForm'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { Errors, logError } from '@/services/exceptions'\nimport { trackEvent, SETTINGS_EVENTS } from '@/services/analytics'\nimport { createRemoveGuardTx } from '@/services/tx/tx-sender'\nimport { type RemoveGuardFlowProps } from '.'\nimport { SafeTxContext } from '@/components/tx-flow/SafeTxProvider'\n\nconst onFormSubmit = () => {\n  trackEvent(SETTINGS_EVENTS.MODULES.REMOVE_GUARD)\n}\n\nexport const ReviewRemoveGuard = ({ params }: { params: RemoveGuardFlowProps }) => {\n  const { setSafeTx, safeTxError, setSafeTxError } = useContext(SafeTxContext)\n\n  useEffect(() => {\n    createRemoveGuardTx().then(setSafeTx).catch(setSafeTxError)\n  }, [setSafeTx, setSafeTxError])\n\n  useEffect(() => {\n    if (safeTxError) {\n      logError(Errors._807, safeTxError.message)\n    }\n  }, [safeTxError])\n\n  return (\n    <SignOrExecuteForm onSubmit={onFormSubmit}>\n      <Typography sx={({ palette }) => ({ color: palette.primary.light })}>Transaction guard</Typography>\n\n      <EthHashInfo address={params.address} showCopyButton hasExplorer shortAddress={false} />\n\n      <Typography my={2}>\n        Once the transaction guard has been removed, checks by the transaction guard will not be conducted before or\n        after any subsequent transactions.\n      </Typography>\n    </SignOrExecuteForm>\n  )\n}\n","import TxLayout from '@/components/tx-flow/common/TxLayout'\nimport { ReviewRemoveGuard } from '@/components/tx-flow/flows/RemoveGuard/ReviewRemoveGuard'\n\n// TODO: This can possibly be combined with the remove module type\nexport type RemoveGuardFlowProps = {\n  address: string\n}\n\nconst RemoveGuardFlow = ({ address }: RemoveGuardFlowProps) => {\n  return (\n    <TxLayout title=\"Confirm transaction\" subtitle=\"Remove guard\">\n      <ReviewRemoveGuard params={{ address }} />\n    </TxLayout>\n  )\n}\n\nexport default RemoveGuardFlow\n"],"names":["onFormSubmit","trackEvent","SETTINGS_EVENTS","MODULES","REMOVE_GUARD","ReviewRemoveGuard","params","setSafeTx","safeTxError","setSafeTxError","useContext","SafeTxContext","useEffect","createRemoveGuardTx","then","catch","logError","Errors","_807","message","SignOrExecuteForm","onSubmit","Typography","sx","palette","color","primary","light","EthHashInfo","address","showCopyButton","hasExplorer","shortAddress","my","RemoveGuardFlow","TxLayout","title","subtitle"],"sourceRoot":"","ignoreList":[]}