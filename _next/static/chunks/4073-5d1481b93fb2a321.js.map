{"version":3,"file":"static/chunks/4073-5d1481b93fb2a321.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/icons-material/esm/CircleOutlined.js","webpack://_N_E/./src/components/safe-messages/Msg/index.tsx","webpack://_N_E/./src/components/safe-messages/DecodedMsg/index.tsx","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/safe-messages/MsgShareLink/index.tsx","webpack://_N_E/./public/images/messages/dot.svg","webpack://_N_E/./src/components/safe-messages/MsgSigners/index.tsx","webpack://_N_E/./src/components/safe-messages/DecodedMsg/styles.module.css","webpack://_N_E/./src/components/safe-messages/Msg/styles.module.css","webpack://_N_E/./src/components/safe-messages/MsgSigners/styles.module.css","webpack://_N_E/./public/images/messages/required.svg"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}), 'CircleOutlined');","import { TextField } from '@mui/material'\nimport { useMemo } from 'react'\nimport type { ReactElement } from 'react'\nimport type { SafeMessage } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport css from './styles.module.css'\n\nconst MAX_ROWS = 10\n\nconst Msg = ({ message }: { message: SafeMessage['message'] }): ReactElement => {\n  const isTextMessage = typeof message === 'string'\n\n  const readableData = useMemo(() => {\n    return isTextMessage ? message : JSON.stringify(message, null, 2)\n  }, [isTextMessage, message])\n\n  return (\n    <TextField\n      maxRows={MAX_ROWS}\n      multiline\n      disabled\n      fullWidth\n      className={css.msg}\n      inputProps={{\n        value: readableData,\n      }}\n    />\n  )\n}\n\nexport default Msg\n","import { generateDataRowValue, TxDataRow } from '@/components/transactions/TxDetails/Summary/TxDataRow'\nimport { Value } from '@/components/transactions/TxDetails/TxData/DecodedData/ValueArray'\nimport { isByte } from '@/utils/transaction-guards'\nimport { type EIP712Normalized, normalizeTypedData } from '@/utils/web3'\nimport { Box, Typography } from '@mui/material'\nimport type { SafeMessage } from '@safe-global/safe-gateway-typescript-sdk'\nimport { ErrorBoundary } from '@sentry/react'\nimport classNames from 'classnames'\nimport { isAddress } from 'ethers'\nimport type { ReactElement } from 'react'\nimport Msg from '../Msg'\nimport css from './styles.module.css'\nimport { logError, Errors } from '@/services/exceptions'\n\nconst EIP712_DOMAIN_TYPE = 'EIP712Domain'\n\nconst DecodedTypedObject = ({ displayedType, eip712Msg }: { displayedType: string; eip712Msg: EIP712Normalized }) => {\n  const { types, message: msg, domain } = eip712Msg\n  const findType = (paramName: string) => types[displayedType].find((paramType) => paramType.name === paramName)?.type\n  return (\n    <Box>\n      <Typography\n        textTransform=\"uppercase\"\n        fontWeight={700}\n        variant=\"caption\"\n        sx={({ palette }) => ({ color: `${palette.border.main}` })}\n      >\n        {displayedType}\n      </Typography>\n\n      {Object.entries(displayedType === EIP712_DOMAIN_TYPE ? domain : msg).map((param, index) => {\n        const [paramName, paramValue] = param\n        const type = findType(paramName) || 'string'\n\n        const isArrayValueParam = Array.isArray(paramValue)\n        const isNested = Object.keys(types).some((typeName) => typeName === type || `${typeName}[]` === type)\n        const inlineType = isAddress(paramValue as string) ? 'address' : isByte(type) ? 'bytes' : undefined\n        const paramValueAsString = typeof paramValue === 'string' ? paramValue : JSON.stringify(paramValue, null, 2)\n        return (\n          <TxDataRow key={`${displayedType}_param-${index}`} title={`${param[0]}(${type}):`}>\n            {isNested ? (\n              <Box\n                className={css.nestedMsg}\n                sx={{\n                  borderRadius: (theme) => `${theme.shape.borderRadius}px`,\n                }}\n              >\n                {paramValueAsString}\n              </Box>\n            ) : isArrayValueParam ? (\n              <Value method={displayedType} type={type} value={paramValueAsString} />\n            ) : (\n              generateDataRowValue(paramValueAsString, inlineType, true)\n            )}\n          </TxDataRow>\n        )\n      })}\n    </Box>\n  )\n}\n\nexport const DecodedMsg = ({\n  message,\n  isInModal = false,\n}: {\n  message: SafeMessage['message'] | undefined\n  isInModal?: boolean\n}): ReactElement | null => {\n  const isTextMessage = typeof message === 'string'\n\n  if (!message) {\n    return null\n  }\n  if (isTextMessage) {\n    return <Msg message={message} />\n  }\n\n  // Normalize message such that we know the primaryType\n  let normalizedMsg: EIP712Normalized\n  try {\n    normalizedMsg = normalizeTypedData(message)\n  } catch (error) {\n    logError(Errors._809, error)\n    normalizedMsg = message as EIP712Normalized\n  }\n\n  return (\n    <Box\n      className={classNames(css.container, { [css.scrollable]: isInModal })}\n      sx={{\n        borderRadius: (theme) => `${theme.shape.borderRadius}px`,\n      }}\n    >\n      <ErrorBoundary fallback={<div>Error decoding message</div>}>\n        <DecodedTypedObject eip712Msg={normalizedMsg} displayedType={EIP712_DOMAIN_TYPE} />\n        <DecodedTypedObject eip712Msg={normalizedMsg} displayedType={normalizedMsg.primaryType} />\n      </ErrorBoundary>\n    </Box>\n  )\n}\n","export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import type { ReactElement } from 'react'\nimport { Button, IconButton, Link, SvgIcon } from '@mui/material'\nimport ShareIcon from '@/public/images/common/share.svg'\nimport { AppRoutes } from '@/config/routes'\nimport { useRouter } from 'next/router'\nimport Track from '@/components/common/Track'\nimport { MESSAGE_EVENTS } from '@/services/analytics/events/txList'\nimport React from 'react'\nimport CopyTooltip from '@/components/common/CopyTooltip'\nimport useOrigin from '@/hooks/useOrigin'\n\nconst MsgShareLink = ({ safeMessageHash, button }: { safeMessageHash: string; button?: boolean }): ReactElement => {\n  const router = useRouter()\n  const { safe = '' } = router.query\n  const href = `${AppRoutes.transactions.msg}?safe=${safe}&messageHash=${safeMessageHash}`\n  const txUrl = useOrigin() + href\n\n  return (\n    <Track {...MESSAGE_EVENTS.COPY_DEEPLINK}>\n      <CopyTooltip text={txUrl} initialToolTipText=\"Copy the message URL\">\n        {button ? (\n          <Button data-testid=\"share-btn\" aria-label=\"Share\" variant=\"contained\" size=\"small\" onClick={() => {}}>\n            Copy link\n          </Button>\n        ) : (\n          <IconButton data-testid=\"share-btn\" component={Link} aria-label=\"Share\">\n            <SvgIcon component={ShareIcon} inheritViewBox fontSize=\"small\" color=\"border\" />\n          </IconButton>\n        )}\n      </CopyTooltip>\n    </Track>\n  )\n}\n\nexport default MsgShareLink\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgDot = function SvgDot(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 10,\n    viewBox: \"0 0 10 10\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5 9.375C7.41625 9.375 9.375 7.41625 9.375 5C9.375 2.58375 7.41625 0.625 5 0.625C2.58375 0.625 0.625 2.58375 0.625 5C0.625 7.41625 2.58375 9.375 5 9.375Z\",\n    fill: \"currentColor\"\n  })));\n};\nexport default SvgDot;","import { useState, type ReactElement } from 'react'\nimport { Box, Link, List, ListItem, ListItemIcon, ListItemText, Skeleton, SvgIcon, Typography } from '@mui/material'\nimport { SafeMessageStatus } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { SafeMessage } from '@safe-global/safe-gateway-typescript-sdk'\nimport CircleOutlinedIcon from '@mui/icons-material/CircleOutlined'\n\nimport CreatedIcon from '@/public/images/messages/created.svg'\nimport SignedIcon from '@/public/images/messages/signed.svg'\nimport DotIcon from '@/public/images/messages/dot.svg'\nimport EthHashInfo from '@/components/common/EthHashInfo'\n\nimport css from '@/components/safe-messages/MsgSigners/styles.module.css'\nimport txSignersCss from '@/components/transactions/TxSigners/styles.module.css'\n\n// Icons\n\nconst Created = () => (\n  <SvgIcon\n    component={CreatedIcon}\n    inheritViewBox\n    className={css.icon}\n    sx={{\n      '& path:last-of-type': { fill: ({ palette }) => palette.background.paper },\n    }}\n  />\n)\n\nconst Signed = () => (\n  <SvgIcon\n    component={SignedIcon}\n    inheritViewBox\n    className={css.icon}\n    sx={{\n      '& path:last-of-type': { fill: ({ palette }) => palette.background.paper },\n    }}\n  />\n)\n\nconst Dot = () => <SvgIcon component={DotIcon} inheritViewBox className={css.dot} />\n\nconst shouldHideConfirmations = (msg: SafeMessage): boolean => {\n  const isConfirmed = msg.status === SafeMessageStatus.CONFIRMED\n\n  // Threshold reached or more than 3 confirmations\n  return isConfirmed || msg.confirmations.length > 3\n}\n\nexport const MsgSigners = ({\n  msg,\n  showOnlyConfirmations = false,\n  showMissingSignatures = false,\n  backgroundColor,\n}: {\n  msg: SafeMessage\n  showOnlyConfirmations?: boolean\n  showMissingSignatures?: boolean\n  backgroundColor?: string\n}): ReactElement => {\n  const [hideConfirmations, setHideConfirmations] = useState<boolean>(shouldHideConfirmations(msg))\n\n  const toggleHide = () => {\n    setHideConfirmations((prev) => !prev)\n  }\n\n  const { confirmations, confirmationsRequired, confirmationsSubmitted } = msg\n\n  const missingConfirmations = [...new Array(Math.max(0, confirmationsRequired - confirmationsSubmitted))]\n\n  const isConfirmed = msg.status === SafeMessageStatus.CONFIRMED\n\n  return (\n    <List className={css.signers}>\n      {!showOnlyConfirmations && (\n        <ListItem>\n          <ListItemIcon>\n            <Created />\n          </ListItemIcon>\n          <ListItemText primaryTypographyProps={{ fontWeight: 700 }}>Created</ListItemText>\n        </ListItem>\n      )}\n      <ListItem>\n        <ListItemIcon sx={{ backgroundColor }}>\n          <Signed />\n        </ListItemIcon>\n        <ListItemText primaryTypographyProps={{ fontWeight: 700 }}>\n          Confirmations{' '}\n          <Box component=\"span\" className={txSignersCss.confirmationsTotal}>\n            ({`${confirmationsSubmitted} of ${confirmationsRequired}`})\n          </Box>\n        </ListItemText>\n      </ListItem>\n      {!hideConfirmations &&\n        confirmations.map(({ owner }) => (\n          <ListItem key={owner.value} sx={{ py: 0 }}>\n            <ListItemIcon sx={{ backgroundColor }}>\n              <Dot />\n            </ListItemIcon>\n            <ListItemText>\n              <EthHashInfo address={owner.value} name={owner.name} hasExplorer showCopyButton />\n            </ListItemText>\n          </ListItem>\n        ))}\n      {!showOnlyConfirmations && confirmations.length > 0 && (\n        <ListItem>\n          <ListItemIcon sx={{ backgroundColor }}>\n            <Dot />\n          </ListItemIcon>\n          <ListItemText>\n            <Link\n              component=\"button\"\n              onClick={toggleHide}\n              sx={{\n                fontSize: 'medium',\n              }}\n            >\n              {hideConfirmations ? 'Show all' : 'Hide all'}\n            </Link>\n          </ListItemText>\n        </ListItem>\n      )}\n      {showMissingSignatures &&\n        missingConfirmations.map((_, idx) => (\n          <ListItem key={`skeleton${idx}`} sx={{ py: 0 }}>\n            <ListItemIcon sx={{ backgroundColor }}>\n              <SvgIcon component={CircleOutlinedIcon} className={css.dot} color=\"border\" fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText>\n              <Box\n                sx={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  gap: 1,\n                }}\n              >\n                <Skeleton variant=\"circular\" width={36} height={36} />\n                <Typography\n                  variant=\"body2\"\n                  sx={{\n                    color: 'text.secondary',\n                  }}\n                >\n                  Confirmation #{idx + 1 + confirmationsSubmitted}\n                </Typography>\n              </Box>\n            </ListItemText>\n          </ListItem>\n        ))}\n      {isConfirmed && (\n        <ListItem>\n          <ListItemIcon sx={{ backgroundColor }}>\n            <Dot />\n          </ListItemIcon>\n          <ListItemText>Confirmed</ListItemText>\n        </ListItem>\n      )}\n    </List>\n  )\n}\n\nexport default MsgSigners\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nestedMsg\":\"styles_nestedMsg__mQC31\",\"container\":\"styles_container__KwUhH\",\"scrollable\":\"styles_scrollable___Xrsh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"msg\":\"styles_msg__XIN0y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"styles_icon__svaC6\",\"dot\":\"styles_dot__FbJan\",\"signers\":\"styles_signers__lNNaR\"};","var _path, _path2, _path3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgRequired = function SvgRequired(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M16.523 27.1792L16.5323 28.9685C16.5336 29.1699 16.6963 29.3325 16.8976 29.3325H18.675C18.7723 29.3325 18.8656 29.2939 18.935 29.2259L24.3057 23.8539C24.5163 23.6432 24.5163 23.3005 24.3057 23.0899L22.7296 21.5139C22.5376 21.3219 22.2257 21.3219 22.0337 21.5139L16.6296 26.9192C16.5603 26.9872 16.5216 27.0819 16.523 27.1792\",\n    className: \"illustration-light-fill\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M25.912 22.2467L27.884 20.2761C28.032 20.1281 28.032 19.8867 27.884 19.7387L26.1146 17.9694C25.9666 17.8214 25.7253 17.8214 25.5773 17.9694L23.6066 19.9414C23.4573 20.0894 23.4573 20.3307 23.6066 20.4787L25.376 22.2467C25.524 22.3947 25.764 22.3947 25.912 22.2467\",\n    className: \"illustration-light-fill\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M17.3312 10.6934V6.44008L21.5672 10.6721L17.3312 10.6934ZM25.3338 14.6654V14.6601V14.6547V11.1627C25.3338 10.8427 25.2058 10.5374 24.9792 10.3121L17.7365 3.07608C17.4738 2.81341 17.1192 2.66675 16.7485 2.66675H6.66715C5.19249 2.66675 4.00049 3.86008 4.00049 5.33341V26.6667C4.00049 28.1387 5.19249 29.3334 6.66715 29.3334H11.9858C11.9912 29.3334 11.9952 29.3361 12.0005 29.3361C12.7378 29.3361 13.3338 28.7387 13.3338 28.0027C13.3338 27.2667 12.7378 26.6694 12.0005 26.6694V26.6667H6.66715V5.33341H14.6645V10.6934C14.6645 12.1454 15.8485 13.3267 17.3032 13.3267H22.6672V14.6721H22.6698C22.6778 15.4027 23.2685 15.9934 24.0005 15.9934C24.7338 15.9934 25.3245 15.4027 25.3312 14.6721H25.3338V14.6654Z\",\n    className: \"illustration-light-fill\"\n  })));\n};\nexport default SvgRequired;"],"names":["createSvgIcon","_jsx","d","message","Msg","isTextMessage","readableData","useMemo","JSON","stringify","TextField","maxRows","MAX_ROWS","multiline","disabled","fullWidth","className","css","inputProps","value","EIP712_DOMAIN_TYPE","DecodedTypedObject","displayedType","eip712Msg","types","msg","domain","findType","paramName","find","paramType","name","type","Box","Typography","textTransform","fontWeight","variant","sx","palette","color","border","main","Object","entries","map","param","index","paramValue","isArrayValueParam","Array","isArray","isNested","keys","some","typeName","inlineType","isAddress","isByte","undefined","paramValueAsString","TxDataRow","title","borderRadius","theme","shape","Value","method","generateDataRowValue","DecodedMsg","normalizedMsg","isInModal","normalizeTypedData","error","logError","Errors","_809","classNames","ErrorBoundary","fallback","div","primaryType","safeMessageHash","MsgShareLink","button","safe","router","useRouter","query","href","AppRoutes","transactions","txUrl","useOrigin","Track","MESSAGE_EVENTS","COPY_DEEPLINK","CopyTooltip","text","initialToolTipText","Button","data-testid","aria-label","size","onClick","IconButton","component","Link","SvgIcon","ShareIcon","inheritViewBox","fontSize","Created","CreatedIcon","fill","background","paper","Signed","SignedIcon","Dot","DotIcon","shouldHideConfirmations","status","SafeMessageStatus","CONFIRMED","confirmations","length","MsgSigners","showOnlyConfirmations","showMissingSignatures","backgroundColor","hideConfirmations","setHideConfirmations","useState","confirmationsRequired","confirmationsSubmitted","missingConfirmations","Math","max","isConfirmed","List","ListItem","ListItemIcon","ListItemText","primaryTypographyProps","txSignersCss","owner","py","EthHashInfo","address","hasExplorer","showCopyButton","toggleHide","prev","_","idx","CircleOutlinedIcon","display","flexDirection","alignItems","gap","Skeleton","width","height"],"sourceRoot":"","ignoreList":[0]}