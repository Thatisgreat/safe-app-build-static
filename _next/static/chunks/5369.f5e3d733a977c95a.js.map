{"version":3,"file":"static/chunks/5369.f5e3d733a977c95a.js","mappings":"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","sources":["webpack://_N_E/./src/components/tx-flow/flows/SafeAppsTx/ReviewSafeAppsTx.tsx","webpack://_N_E/./src/components/tx-flow/flows/SafeAppsTx/index.tsx"],"sourcesContent":["import useWallet from '@/hooks/wallets/useWallet'\nimport { useContext, useEffect, useMemo } from 'react'\nimport type { ReactElement } from 'react'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport SignOrExecuteForm from '@/components/tx/SignOrExecuteForm'\nimport type { SafeAppsTxParams } from '.'\nimport { trackSafeAppTxCount } from '@/services/safe-apps/track-app-usage-count'\nimport { getTxOrigin } from '@/utils/transactions'\nimport { createMultiSendCallOnlyTx, createTx, dispatchSafeAppsTx } from '@/services/tx/tx-sender'\nimport useOnboard from '@/hooks/wallets/useOnboard'\nimport useHighlightHiddenTab from '@/hooks/useHighlightHiddenTab'\nimport { SafeTxContext } from '@/components/tx-flow/SafeTxProvider'\nimport { isTxValid } from '@/components/safe-apps/utils'\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport { asError } from '@/services/exceptions/utils'\n\ntype ReviewSafeAppsTxProps = {\n  safeAppsTx: SafeAppsTxParams\n  onSubmit?: (txId: string, safeTxHash: string) => void\n}\n\nconst ReviewSafeAppsTx = ({\n  safeAppsTx: { txs, requestId, params, appId, app },\n  onSubmit,\n}: ReviewSafeAppsTxProps): ReactElement => {\n  const onboard = useOnboard()\n  const wallet = useWallet()\n  const { safeTx, setSafeTx, safeTxError, setSafeTxError, setTxOrigin } = useContext(SafeTxContext)\n\n  useHighlightHiddenTab()\n\n  useEffect(() => {\n    setTxOrigin(app?.url)\n    return () => setTxOrigin(undefined)\n  }, [setTxOrigin, app?.url])\n\n  useEffect(() => {\n    const createSafeTx = async (): Promise<SafeTransaction> => {\n      const isMultiSend = txs.length > 1\n      const tx = isMultiSend ? await createMultiSendCallOnlyTx(txs) : await createTx(txs[0])\n\n      if (params?.safeTxGas !== undefined) {\n        // FIXME: do it properly via the Core SDK\n        // @ts-expect-error safeTxGas readonly\n        tx.data.safeTxGas = params.safeTxGas\n      }\n\n      return tx\n    }\n\n    createSafeTx().then(setSafeTx).catch(setSafeTxError)\n  }, [txs, setSafeTx, setSafeTxError, params])\n\n  const handleSubmit = async (txId: string) => {\n    if (!safeTx || !onboard || !wallet?.provider) return\n    trackSafeAppTxCount(Number(appId))\n\n    let safeTxHash = ''\n    try {\n      safeTxHash = await dispatchSafeAppsTx(safeTx, requestId, wallet.provider, txId)\n    } catch (error) {\n      setSafeTxError(asError(error))\n    }\n\n    onSubmit?.(txId, safeTxHash)\n  }\n\n  const origin = useMemo(() => getTxOrigin(app), [app])\n  const error = !isTxValid(txs)\n\n  return (\n    <SignOrExecuteForm onSubmit={handleSubmit} origin={origin} showMethodCall>\n      {error ? (\n        <ErrorMessage error={safeTxError}>\n          This Safe App initiated a transaction which cannot be processed. Please get in touch with the developer of\n          this Safe App for more information.\n        </ErrorMessage>\n      ) : null}\n    </SignOrExecuteForm>\n  )\n}\n\nexport default ReviewSafeAppsTx\n","import type { BaseTransaction, RequestId, SendTransactionRequestParams } from '@safe-global/safe-apps-sdk'\nimport TxLayout from '@/components/tx-flow/common/TxLayout'\nimport type { SafeAppData } from '@safe-global/safe-gateway-typescript-sdk'\nimport ReviewSafeAppsTx from './ReviewSafeAppsTx'\nimport { AppTitle } from '@/components/tx-flow/flows/SignMessage'\n\nexport type SafeAppsTxParams = {\n  appId?: string\n  app?: Partial<SafeAppData>\n  requestId: RequestId\n  txs: BaseTransaction[]\n  params?: SendTransactionRequestParams\n}\n\nconst SafeAppsTxFlow = ({\n  data,\n  onSubmit,\n}: {\n  data: SafeAppsTxParams\n  onSubmit?: (txId: string, safeTxHash: string) => void\n}) => {\n  return (\n    <TxLayout\n      title=\"Confirm transaction\"\n      subtitle={<AppTitle name={data.app?.name} logoUri={data.app?.iconUrl} txs={data.txs} />}\n      step={0}\n    >\n      <ReviewSafeAppsTx safeAppsTx={data} onSubmit={onSubmit} />\n    </TxLayout>\n  )\n}\n\nexport default SafeAppsTxFlow\n"],"names":["safeAppsTx","txs","requestId","ReviewSafeAppsTx","params","appId","app","onSubmit","onboard","useOnboard","wallet","useWallet","safeTx","setSafeTx","safeTxError","setSafeTxError","setTxOrigin","useContext","SafeTxContext","useHighlightHiddenTab","useEffect","url","undefined","createSafeTx","tx","isMultiSend","length","createMultiSendCallOnlyTx","createTx","safeTxGas","data","then","catch","handleSubmit","txId","provider","trackSafeAppTxCount","Number","safeTxHash","dispatchSafeAppsTx","error","asError","origin","useMemo","getTxOrigin","isTxValid","SignOrExecuteForm","showMethodCall","ErrorMessage","SafeAppsTxFlow","TxLayout","title","subtitle","AppTitle","name","logoUri","iconUrl","step"],"sourceRoot":"","ignoreList":[]}