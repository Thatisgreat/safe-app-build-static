{"version":3,"file":"static/chunks/pages/settings/notifications-651e8746afd3adb8.js","mappings":"gFACA,4CACA,0BACA,WACA,OAAe,EAAQ,KAA+C,CACtE,EACA,SAFsB,kOEiCtB,MA9BgB,OAAC,CAAEA,MAAI,CAAuB,CA8B/BC,EA7BPC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBC,EAAYC,KAAKC,GAAG,CAAC,EAAGN,EAAKO,GAAG,CAAC,GAASC,EAAIC,IAAI,EAAEC,OAAO,CAACR,EAAOS,QAAQ,GAC3EC,EAAQV,EAAOU,KAAK,CAACC,IAAI,CAAG,CAAEA,KAAMX,EAAOU,KAAK,CAACC,IAAI,OAAKC,EAEhE,MACE,UAACC,EAAAA,GAAIA,CAAAA,CAACC,MAAOZ,EAAWa,QAAQ,aAAaC,wBAAwB,IAACC,UAAWC,IAAAA,IAAQ,UACtFpB,EAAKO,GAAG,CAAC,CAACC,EAAKa,IACd,UAACC,EAAAA,GAAGA,CAAAA,CAEFb,KAAM,CAAEE,SAAUH,EAAIC,IAAI,OAAEG,CAAM,EAClCW,UAAWC,CAAAA,GACXC,SAAU,EACVN,UAAWC,IAAAA,GAAO,CAClBM,MACE,UAACC,EAAAA,GAAUA,CAAAA,CACTV,QAAQ,QACRW,WAAY,IACZC,MAAOzB,IAAciB,EAAM,UAAY,gBACvCF,UAAWC,IAAAA,KAAS,UAEnBZ,EAAIkB,KAAK,IAZTlB,EAAIC,IAAI,IAmBvB,mHCTA,MAnBmB,OAAC,OAClBqB,CAAK,QACLC,CAAM,IAiBOC,MAhBbC,CAAQ,CAKT,EAWwBD,CAVvB,CAUuB,KATrB,WAACE,EAAAA,GAAGA,CAAAA,CAACf,UAAWgB,IAAWf,IAAAA,SAAAA,CAAa,CAAI,CAACA,IAAAA,MAAAA,CAAU,CAAG,CAACa,CAAS,aAClE,EADwBE,CAACf,EACzB,KAACO,EAAAA,GAAUA,CAAAA,CAACV,QAAQ,KAAKE,UAAWC,CAAAA,GAAAA,KAAAA,CAAS,SAC1CU,IAEFC,IAGP,2GCGA,MAtBuB,OAAC,QAAEA,CAAM,CAAuB,GAC/CK,EAAQC,CAAAA,EAAAA,EAAAA,CAqBDC,CArBCD,CAAeA,GACvBE,EAAeC,CAAAA,EAAAA,EAAAA,CAAAA,CAAeA,EAoBT,QAlB3B,GAAeD,EAGb,IAHY,CAGZ,MAACE,CAH0B,CAG1BA,GAAKA,CAAAA,CAACC,SAAS,oBACd,UAACC,EAAAA,GAAUA,CAAAA,CAACC,GAAI,CAAEhB,WAAY,GAAI,WAAG,+BAAuC,oBAAkB,IAC7FG,GAAU,gCAAgC,OAAKK,EAAMS,SAAS,CAAC,2DAEhE,UAACX,EAAAA,GAAGA,CAAAA,CACFU,GAAI,CACFE,GAAI,CACN,WAEA,UAACC,EAAAA,CAAaA,CAAAA,CAAAA,QAZgB,IAgBtC,qJCSA,MAAeC,CAAAA,EAAAA,SAAAA,CAAAA,CAAQA,CAvBO,OAAC,aAC7BC,CAAW,OACXb,CAAK,CAIN,GACOc,EAAWD,EACbE,EAAAA,EAAgBA,CAACC,MAAM,CAAEC,GAAUC,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACD,EAAM5C,IAAI,CAAE2B,IAC9DmB,EAAAA,EAAuBA,CAE3B,MACE,UAACvB,EAAAA,CAAUA,CAAAA,CACTF,MAAOmB,EAAc,WAAa,cAClClB,OACE,UAACyB,MAAAA,CAAIrC,UAAWC,CAAAA,GAAAA,UAAAA,CAAc,SAC5B,UAACnB,EAAAA,CAAOA,CAAAA,CAACD,KAAMkD,OAKzB,EAAC,CAGCD,YAAaQ,EAAAA,CAAcA,CAC3BrB,MAAOC,EAAAA,EAAeA,EACtB,qFCjCK,SAASqB,IACd,GAAM,CAACC,EAAS,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACxBC,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GACxB,MAAOC,EAAQF,QAAAA,EAAAA,KAAAA,EAAAA,EAAQG,OAAAA,CAARH,EAAmBF,GAAYM,CAAAA,EAAAA,EAAAA,EAAAA,CAA8BA,CAACN,EAAUE,EAAOG,QAAO,CACvG,uZCaA,WAAKE,CAAAA,8PAAAA,GAAAA,GAAAA,CAAAA,GA2DL,MApDkC,OAAuB,UACvDC,CAAQ,YACRC,CAAU,GAkDGC,cAjDbC,CAAe,UAiDuBD,CAhDtCE,CAAS,cACTC,GAAe,CAAK,qBACpBC,GAAsB,CAAK,CACO,GAC5BZ,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAClBY,EAAgBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,GAChCpC,EAAeC,CAAAA,EAAAA,EAAAA,CAAAA,CAAeA,GAC9BoC,EAAMC,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,GAChBC,EAAgBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CACpCX,KACKE,EAAkB,CAACA,EAAgB,CAAG,EAAE,EAKzC,MAAEzD,CAAI,YAAEmE,CAAU,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAElCC,EAAmB,CAACrE,EAAKsE,QAAQ,CAEjCC,EAAUC,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IACjBxB,EAID,CAACe,CAJD,EAIQI,EAJC,UAIW,mBAIpBE,GAAoB,CAACT,EACvB,mBAD4C,gCAIzCK,SACH,MADkB,uDAXlB,6BAcD,CAACL,EAAqBK,EAAeI,EAAkBN,EAAKf,EAAQmB,EAAW,SAElF,GAAoBzC,EAAqB4B,GAAS,GAC7CiB,EACDb,EAAkBJ,EAFY,CAEH,EADjB,CAIZ,GAHa,EAGb,KAACmB,EAAAA,GAAOA,CAAAA,CAACxD,MAAOsD,WACd,UAACG,OAAAA,CAAKC,QAAS3B,OAAS/C,EAAY4D,WAAgBP,GAAS,OAL5CA,GAAS,EAQhC,iFC/BO,IAAMsB,EAAyB,CAACC,EAAoCC,IAClEC,IACLC,IAAUH,EAAO,CAACI,EAAeC,GADtBH,EAET,IAAMI,CADCH,CACqBF,CAAe,CAACI,EAAQ,CAAGE,OAAOC,IAAI,CAACP,CAAe,CAACI,EAAQ,EAAI,EAAE,CACjG,OAAOI,IAAWL,EAAeE,EACnC,GACA,GAAmBF,EAAcM,IAFdD,EAEoB,CAAG,GAIjCE,EAAuB,GAC3BJ,OAAOK,OAAO,CAACC,GAAYC,MAAM,CAAkB,CAACC,EAAAA,QAAK,CAACV,EAASW,EAAkB,GAE1F,OADAD,CAAG,CAACV,EAAQ,CAAGE,OAAOC,IAAI,CAACQ,GACpBD,CACT,EAAG,CAAC,GAIOE,EAAmC,IAG9C,GAAKC,CAAD,CAIJ,OAAOX,OAJc,MAID,CAACW,GAAgBJ,MAAM,CAAkB,CAACC,EAAAA,QAAK,SAAEV,CAAO,aAAE9C,CAAW,CAAE,GAMzF,OALKwD,CAAG,CAACV,EAAQ,EAAE,CACjBU,CAAG,CAACV,EAAQ,CAAG,IAGjBU,CAAG,CAACV,EAAQ,CAACc,IAAI,CAAC5D,GACXwD,CACT,EAAG,CAAC,EACN,EAAC,EAGuC,CACtCK,EACAC,IAEOd,OAAOK,OAAO,CAACS,GAAiBP,MAAM,CAAkB,CAACC,EAAAA,QAAK,CAACV,EAASD,EAAc,GAO3F,OANcgB,EAAOE,IAAI,CAAC,GAAW5E,EAAM2D,OAAO,GAAKA,KAGrDU,CAAG,CAACV,EAAQ,CAAGD,CAAAA,EAGVW,CACT,EAAG,CAAC,GAIOQ,EAAwB,CACnCC,EACAX,EACAY,KAEA,IAAMC,EAAQf,EAAqBE,GAE7BO,EAASO,MAAMC,IAAI,CACvB,IAAIC,IAAI,IACHtB,OAAOC,IAAI,CAACK,GAAc,CAAC,MAC3BN,OAAOC,IAAI,CAACiB,GAAwB,CAAC,MACrClB,OAAOC,IAAI,CAACgB,GAAc,CAAC,GAC/B,GAGCH,EAAmC,CAAC,EACxC,IAAK,IAAMhB,KAAWe,EAAQ,KAEFM,EADAF,EAA1B,IAAMM,EAAoBN,QAAAA,QAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAACnB,EAAAA,GAAbmB,KAAAA,EAAAA,EAAAA,EAAAA,EAAyB,EAAE,CAC/CR,EAAoBU,CAAAA,QAAAA,EAAAA,CAAK,CAACrB,EAAAA,GAANqB,KAAAA,MAAAA,KAAAA,EAAAA,EAAgBhE,MAAM,CAAEqE,GAAiBD,EAAkBE,QAAQ,CAACD,GAAAA,GAAkB,EAAE,CAG5GE,EAAsBN,MAAMC,IAAI,CACpC,IAAIC,IAAI,IAH0BJ,OAAAA,EAAAA,KAAAA,EAAAA,CAAsB,CAACpB,EAAAA,GAAY,EAAE,IAG3BW,KAAsBc,EAAkB,GAEtFT,CALoCI,CAKpBpB,EAAQ,CAAG4B,CAC7B,CAEA,OAAOZ,CACT,EAAC,EAEuC,GAC/Bd,OAAO2B,MAAM,CAACb,GAAiBP,MAAM,CAAC,CAACC,EAAKX,IACzCW,GAAOX,EAAcM,MAAM,CAClC,GAGQyB,EAAuB,CAACd,EAAkCe,IAGrE,GAA0B,CAAtBxB,OAFmBA,OAAO,CAACS,GAEnBX,MAAM,EAIXH,OAAOK,OAAO,CAACS,GAAiBgB,KAAK,CAAC,OAAC,CAAChC,EAASD,EAAc,GAC9DkC,EAAW/B,OAAOC,IAAI,CAAC4B,GAAeJ,QAAQ,CAAC3B,GAC/CkC,QAAenC,EAAAA,KAAAA,EAAAA,EAAeiC,KAAK,CAAC,QAAiBD,CAAtChC,QAA4D,QAAtBgC,EAAAA,CAAa,CAAC/B,EAAQ,GAAtB+B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAwBJ,QAAQ,CAACzE,KAC5F,OAAO+E,GAAYC,CACrB,GAIWC,EAA8B,CACzCJ,EACAK,IAEOlC,OAAOK,OAAO,CAACwB,GACnB1E,MAAM,CAAC,OAAC,EAAG0C,EAAc,UAAKA,EAAcM,MAAM,CAAG,IACrDI,MAAM,CAAC,CAACC,EAAAA,QAAK,CAACV,EAASD,EAAc,GAC9BsC,EAAa,QAACD,EAAAA,KAAAA,EAAAA,CAAsB,CAACpC,EAAAA,EACrCsC,EAAYvC,EAAcwC,IAAI,CAAC,QAAkBH,CADnCA,OACkC,QAACA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,CAAsB,CAACpC,EAAAA,GAAvBoC,KAAAA,EAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAiCT,QAAQ,CAACzE,EAAAA,IAKjG,OAHImF,GAAcC,CAAAA,GAAW,CAC3B5B,IAAO,EAEFA,CACT,EAAG,GAGM8B,EAA+B,CAC1CT,EACAK,IAEOlC,OAAOK,OAAO,CAACwB,GAAeQ,IAAI,CAAC,OAAC,CAACvC,EAASD,EAAc,GACjE,OAAOA,EAAcwC,IAAI,CAAC,QAAkBH,QAAD,CAACA,SAAAA,KAAAA,EAAAA,OAAAA,GAAAA,CAAsB,CAACpC,EAAQ,GAA/BoC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiCT,QAAQ,CAACzE,EAAAA,GACxF,GAGWuF,EAAiC,CAC5CV,EACAK,IAEOlC,OAAOK,OAAO,CAAC6B,GAAwB,CAAC,GAAGG,IAAI,CAAC,OAAC,CAACvC,EAASD,EAAc,GAC9E,OAAOA,EAAcwC,IAAI,CAAC,QAAkBR,QAAD,UAACA,EAAAA,CAAa,CAAC/B,EAAAA,GAAd+B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAwBJ,QAAQ,CAACzE,EAAAA,GAC/E,GAMWwF,GAAsB,CACjCX,EACAK,KAEA,IAAMO,EAAkBzC,OAAOK,OAAO,CAACwB,GAAetB,MAAM,CAAkB,CAACC,EAAAA,QAAK,CAACV,EAASD,EAAc,GACpG6C,EAAyB7C,EAAc1C,MAAM,CACjD,QAAkB+E,QAAD,QAACA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,CAAsB,CAACpC,EAAAA,GAAvBoC,KAAAA,EAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAiCT,QAAQ,CAACzE,EAAAA,IAO9D,OAJI0F,EAAuBvC,MAAM,CAAG,GAAG,CACrCK,CAAG,CAACV,EAAQ,CAAG4C,CAAAA,EAGVlC,CACT,EAAG,CAAC,GAIJ,GAFuBR,CAEnB2C,MAF0BhB,MAAM,CAACc,GAAiBJ,IAAI,CAAC,GAAmBxC,EAAcM,MAAM,CAAG,GAGnG,OAAOsC,CAEX,EAAC,GAGoC,CACnCZ,EACAK,KAEA,GAAI,CAACA,EACH,OAGF,IAAMU,EAAoB5C,OAJC,OAIa,CAACkC,GAAsB3B,MAAM,CACnE,CAACC,EAAAA,QAAK,CAACV,EAASD,EAAc,GACtBgD,EAA2BhD,EAAc1C,MAAM,CACnD,QAAkB0E,QAAD,UAACA,EAAAA,CAAa,CAAC/B,EAAAA,GAAd+B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAwBJ,QAAQ,CAACzE,EAAAA,IAMrD,OAHI6F,EAAyB1C,MAAM,CAAG,GAAG,CACvCK,CAAG,CAACV,EAAQ,CAAG+C,CAAAA,EAEVrC,CACT,EACA,CAAC,GAKH,GAFyBR,CAErB8C,MAF4BnB,MAAM,CAACiB,GAAmBP,EAEpC,EAFwC,CAAC,GAAmBxC,EAAcM,MAAM,CAAG,GAGvG,OAAOyC,CAEX,EAAC,GAGsC,CACrC9C,EACAD,EACAqC,IAEA,EAAKA,EAAD,CAIArC,EAAcM,MAAM,GAAK+B,CAAoB,CAACpC,EAAQ,CAACK,GAJhC,GAIsC,EAAE,EAI9C2B,KAAK,CAAC,QAClBI,EAAP,eAAOA,EAAAA,CAAoB,CAACpC,EAAAA,GAArBoC,KAAAA,MAAAA,KAAAA,EAAAA,EAA+BT,QAAQ,CAACzE,EACjD,GAGW+F,GAA0B,KACrC,IAAMlC,EAASmC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAClBtD,EAAkBuD,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACC,EAAAA,EAAqBA,EACtD,CAACC,EAAWC,EAAa,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAC,GACrC,SAAEtF,EAAU,EAAE,CAAE,CAAGF,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,IAAM,CAAC,EACnC,CAACoD,EAAW,CAAGqC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAACvF,GAChCuC,EAAa2C,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACM,EAAAA,EAAmBA,EAE/C,mBAAEC,CAAiB,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,CAA0BA,GAClD,+BAAEC,CAA6B,6BAAEC,CAA2B,uBAAEC,CAAqB,CAAE,CACzFC,CAAAA,EAAAA,EAAAA,CAAAA,CAA4BA,GAExB,iBAAEC,CAAe,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAuBA,GAG7C,CAAClC,EAAemC,EAAiB,CAAGX,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,CAAkB,CAAC,GAG/DnB,EAAuB9C,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IAE5BsB,EADgB8C,KAEtB,CAACA,EAAkB,EAGtBS,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACR,IAAIC,GAAY,EAMhB,OAJIhC,GAAwBgC,GAC1BF,EAAiB9B,GAGZ,GAJgC,EAKrCgC,EAAY,EACd,CACF,EAAG,CAAChC,EAAqB,EAGzB,IAAMpB,EAAkB1B,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,KAE9B,IAAM+E,EAAgB3E,EADRwB,EAAsBC,EAAYX,EAAY4B,GACRxC,GACpD,OAAO0E,EADsC3E,EACN4E,OAAO,CAAEF,EAClD,EAAG,CAAClD,EAAYX,EAAY4B,EAAsBxC,EAAiBmB,EAAOwD,OAAO,CAAC,EAE5EC,EAAuBlF,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IAC5BmF,EAAyBzD,GAC/B,CAACA,EAAgB,EAEd0D,EAAgBpF,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IACrBwC,EAAqBd,EAAiBe,GAC5C,CAACf,EAAiBe,EAAc,EAiB7B4C,EAA0BrF,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IAC/B6C,EAA4BJ,EAAeK,GACjD,CAACA,EAAsBL,EAAc,EAElC6C,EAAUtF,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IAEpBkD,EAA6BT,EAAeK,IAC5CK,EAA+BV,EAAeK,GAE/C,CAACL,EAAeK,EAAqB,EAElCyC,EAAS,UACb,GAAI,CAACD,EACH,OADY,GAIdtB,GAAa,GAMT,CAFc,MAAMwB,CAAAA,EAAAA,EAAAA,EAAAA,CAA6BA,GAErC,CACdxB,GAAa,GACb,MACF,CAEA,IAAMyB,EAAgD,EAAE,CAKlDpC,EAAkBzB,EAHGwB,GAAoBX,EAAeK,GAGI,CAAC,EAAG4B,GAElErB,GACFoC,EAAqBjE,CAHuBkE,GAGnB,CAAClB,EAAsBnB,IAGlD,CAJqB,GAIfG,EAAoBmC,GAAsBlD,EAAeK,GAC/D,GAAIU,EAAmB,CACrB,IAAMoC,EAAyBhF,OAAOK,OAAO,CAACuC,GAAmBqC,OAAO,CAAC,OAAC,CAACnF,EAASD,EAAc,UAChG,GAA4BC,EAASD,EAAeqC,GAC3CwB,EAA8B5D,GAEhCD,EAAcvF,GAAG,CAAC,GAAiBqJ,EAA4B7D,EAAS9C,EAHJ,CAI7E,GAEA6H,EAAqBjE,IAAI,IAAIoE,EAC/B,CAEA,MAAME,QAAQC,GAAG,CAACN,GAElBO,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACC,EAAAA,CAAwBA,CAACC,aAAa,EAEjDlC,EAAa,GACf,SAEA,GAAgC,CAA5BkB,EAEA,UAAC5I,EAAAA,GAAUA,CAAAA,CAACiB,GAAI,CAAEf,MAAO,OAAC,SAAE2J,CAAO,CAAE,UAAKA,EAAQC,OAAO,CAACC,KAAK,CAAC,WAC7D1H,EAAU,iBAAmB,wBAMlC,WAAC2H,EAAAA,GAAIA,CAAAA,CAACC,SAAS,cACb,WAACD,EAAAA,GAAIA,CAAAA,CAACE,IAAI,IAACC,GAAI,GAAIC,QAAQ,OAAOC,WAAW,SAASC,eAAe,gBAAgBC,GAAI,YACvF,WAACvK,EAAAA,GAAUA,CAAAA,CAACV,QAAQ,KAAKW,WAAY,IAAKmK,QAAQ,mBAAS,sBACrCxB,EAAqB,OAG3C,WAACrI,EAAAA,GAAGA,CAAAA,CAAC6J,QAAQ,OAAOC,WAAW,mBAC5BtB,EAA0B,GACzB,WAAC/I,EAAAA,GAAUA,CAAAA,CAACoK,QAAQ,SAASI,GAAI,EAAGC,UAAU,kBAAQ,uFACsC,IACzF1B,EAAwB,QAAM2B,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAAC3B,MAI/C,UAACrG,EAAyBA,CAACD,WAAYkI,EAAAA,EAAUA,CAACC,aAAxBlI,UAA+C,UACtE,GACC,UAACmI,EAAAA,GAAMA,CAAAA,CAACvL,QAAQ,YAAYwL,SAAU,CAAC9B,GAAW,CAAC+B,GAAQtD,EAAW5D,QAASoF,WAC5ExB,EAAY,UAACuD,EAAAA,GAAgBA,CAAAA,CAACC,KAAM,KAAS,iBAOxD,UAACjB,EAAAA,GAAIA,CAAAA,CAACE,IAAI,IAACC,GAAI,YACb,WAACe,EAAAA,GAAKA,CAAAA,CAACjK,GAAI,CAAEkK,OAAQ,OAAC,SAAEtB,CAAO,CAAE,SAAK,aAAkC,OAArBA,EAAQsB,MAAM,CAACpB,KAAK,EAAG,YACxE,UAACqB,EAAAA,GAAIA,CAAAA,UACH,UAACC,EAAAA,GAAQA,CAAAA,CAACC,cAAc,IAAC9L,UAAWC,IAAAA,IAAQ,UAC1C,WAAC8L,EAAAA,GAAcA,CAAAA,CAAC1H,QA7GR,CA6GiB2H,IA5GnClD,EAAiB,IACf,EACS,EAAE,CAGJhE,OAAOK,GAJK,IAIE,CAACS,GAAiBP,MAAM,CAAC,CAACC,EAAAA,QAAK,CAACV,EAASD,EAAc,GAC1E,MAAO,CACL,GAAGW,CAAG,CACN,CAACV,EAAQ,CAAED,CACb,CACF,EAAG,CAAC,GAER,EAgGkDsH,KAAK,cACzC,UAACC,EAAAA,GAAYA,CAAAA,CAAClM,UAAWC,IAAAA,IAAQ,UAC/B,UAACkM,EAAAA,GAAQA,CAAAA,CAACC,KAAK,QAAQC,QAAS/C,EAAegD,aAAa,QAE9D,UAACC,EAAAA,GAAYA,CAAAA,CAACjC,QAAQ,aAAakC,uBAAwB,CAAE1M,QAAS,IAAK,WAKjF,UAAC2M,EAAAA,GAAOA,CAAAA,CAAAA,GAEP3H,OAAOK,OAAO,CAACS,GAAiBxG,GAAG,CAAC,GAA2BsN,EAAGC,SAEnDhH,KAFsB,CAACf,EAASD,EAAc,GAC5D,GAA6B,IAAzBA,EAAcM,MAAM,CAAQ,OAChC,IAAMhE,EAAAA,QAAQ0E,EAAAA,EAAOwD,OAAAA,GAAPxD,KAAAA,MAAAA,KAAAA,EAAAA,EAAgBE,IAAI,CAAC,GAAW5E,EAAM2D,OAAO,GAAKA,GAE1DgI,EAAkBjI,EAAciC,KAAK,CAAC,QACnCD,EAAP,eAAOA,EAAAA,CAAa,CAAC/B,EAAAA,GAAd+B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAwBJ,QAAQ,CAAC1D,EAC1C,GAWA,MACE,WAACgK,EAAAA,QAAQA,CAAAA,WACP,WAACjB,EAAAA,GAAIA,CAAAA,WACH,UAACC,EAAAA,GAAQA,CAAAA,CAACC,cAAc,IAAC9L,UAAWC,IAAAA,IAAQ,UAC1C,WAAC8L,EAAAA,GAAcA,CAAAA,CAAC1H,QAbF,CAaWyI,IAZ/BhE,EAAiB,IACR,CACL,GAAGiE,CAAI,CACP,CAACnI,EAAQ,CAAEgI,EAAkB,EAAE,CAAGjI,EACpC,EAEJ,EAMgDsH,KAAK,cAC3C,UAACC,EAAAA,GAAYA,CAAAA,CAAClM,UAAWC,IAAAA,IAAQ,UAC/B,UAACkM,EAAAA,GAAQA,CAAAA,CAACC,KAAK,QAAQC,QAASO,EAAiBN,aAAa,QAEhE,UAACC,EAAAA,GAAYA,CAAAA,CACXjC,QAAS,GAAoB,aAAjBrJ,EAAAA,KAAAA,EAAAA,EAAOS,OAAPT,EAAgB,CAAC,kBAC7BuL,uBAAwB,CAAE1M,QAAS,IAAK,SAK9C,UAAC8L,EAAAA,GAAIA,CAAAA,CAACE,cAAc,IAAC9L,UAAWC,IAAAA,IAAQ,UACrC0E,EAAcvF,GAAG,CAAC,QACMuH,EAAAA,EAAvB,IAAMqG,EAAiBrG,QAAAA,EAAAA,QAAAA,EAAAA,CAAa,CAAC/B,EAAQ,GAAtB+B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAwBJ,QAAQ,CAACzE,EAAAA,GAAjC6E,KAAAA,OAAAA,EAavB,MACE,UAACkF,EAAAA,GAAQA,CAAAA,CAACC,SAd4D,KAc9C,aACtB,WAACC,EAAAA,GAAcA,CAAAA,CAACtK,GAAI,CAAEwL,GAAI,EAAGC,GAAI,EAAI,EAAG7I,QAbvB,CAagC8I,IAZnDrE,EAAiB,QAITiE,EACKA,EAJX,MAAO,CACL,GAAGA,CAAI,CACP,CAACnI,EAAQ,CAAEoI,EAAAA,QACPD,EAAAA,CAAI,CAACnI,EAAQ,GAAbmI,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAe9K,MAAM,CAAC,GAAU,CAACmL,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACC,EAAMvL,IACnD,IAAKiL,QAAAA,EAAAA,CAAI,CAACnI,EAAAA,GAALmI,KAAAA,IAAAA,EAAAA,EAAiB,EAAE,CAAGjL,EAAY,CAE/C,EACF,EAImEmK,KAAK,cAClE,UAACC,EAAAA,GAAYA,CAAAA,CAAClM,UAAWC,IAAAA,IAAQ,UAC/B,UAACkM,EAAAA,GAAQA,CAAAA,CAACC,KAAK,QAAQC,QAASW,EAAgBV,aAAa,QAE/D,UAACgB,EAAAA,CAAWA,CAAAA,CACVC,WAAY,GACZC,MAAM,CAAEvM,QAAAA,KAAAA,EAAAA,EAAOwM,CAAPxM,QAAgB,CAExB4B,QAASf,GAAe,GACxB4L,cAAc,EACdC,UAAU,EACV/I,QAASA,GAJJ9C,OARmBA,EAiBlC,QAIH4K,IAAMC,EAAI1H,MAAM,CAAG,EAAI,UAACwH,EAAAA,GAAOA,CAAAA,CAAAA,GAAM,OAnDzB7H,EAsDnB,UAKV,EAAC,wCC1fM,IAAMgJ,GAAW,KACtB,GAAM,CAACC,EAAOC,EAAS,CAAG3F,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAC,GAQnC,MANAY,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACiB,aAArB,OAAOgF,WACTD,EAASC,UAAUC,SAAS,CAACzH,QAAQ,CAAC,OAE1C,EAAG,EAAE,EAEEsH,CACT,EAAC,mDC4CD,OA/C4B,KAC1B,GAAM,MAAEnO,CAAI,CAAE,CAAGoE,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtB,CAACmK,EAAeC,EAAiB,CAAG/F,CAAAA,EAAAA,EAAAA,EA6C7BgG,MA7C6BhG,CAAQA,EAAC,GAC7C,OA4C0BgG,EAAA,WA5CxBC,CAAkB,cAAEC,CAAY,CAAE,CAAGxF,CAAAA,EAAAA,EAAAA,CAAAA,CAAuBA,GAC9DyF,EAAgCC,CAAAA,EAAAA,GAAAA,EAAAA,CAAgCA,GAEtE,GAAI,CAACF,GAAgB,CAACC,EAEpB,MAAO,uBAF4C,EAKrD,IAAME,EAAiB,UACrBN,GAAiB,GACjB,MAAME,IACNF,GAAiB,EACnB,EAEA,MACE,iCACE,WAAC5M,EAAAA,GAAKA,CAAAA,CAACC,SAAS,oBACd,UAACf,EAAAA,GAAUA,CAAAA,CAACV,QAAQ,QAAQW,WAAY,IAAKsK,GAAI,WAAG,qBAGpD,UAACvK,EAAAA,GAAUA,CAAAA,CAACV,QAAQ,iBAAS2O,GAAAA,CAAeA,MAE9C,UAAC1N,EAAAA,GAAGA,CAAAA,UACF,UAACmC,EAAyBA,CACxBD,WAAYkI,EAAAA,EAAUA,CAACC,aADClI,UACsB,CAC9CG,aAAc,CAAC4K,GAAiBvO,EAAKsE,QAAQ,UAE5C,GACC,UAACqH,EAAAA,GAAMA,CAAAA,CACLvL,QAAQ,YACR2L,KAAK,QACLhK,GAAI,CAAEiN,MAAO,OAAQ,EACrBrK,QAASmK,EACTlD,SAAU,CAACC,GAAQ0C,GAAiB,CAACvO,EAAKsE,QAAQ,UACnD,mBAQb,EChBa2K,GAAoB,KAC/B,GAAM,MAAEjP,CAAI,YAAEmE,CAAU,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAClC8K,EAAUC,CAAAA,EAAAA,GAAAA,CAAAA,CAAcA,GACxBhB,EAAQD,KACR,CAACK,EADeL,EACiB,CAAGzF,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAC,GAC7C,CAAC2G,EAAqBC,EAAuB,CAAG5G,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAC,GACzD6G,EAAQC,CAAAA,EAAAA,EAAAA,GAAAA,CAAQA,GAChBC,EAAgBC,CAAAA,EAAAA,EAAAA,GAAAA,CAAaA,CAACH,EAAMI,WAAW,CAACC,EAAE,CAAC,OAEnD,mBAAEC,CAAiB,CAAEC,gBAAc,mBAAEjH,CAAiB,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,CAA0BA,GACrF,6BAAEE,CAA2B,+BAAED,CAA6B,CAAEE,uBAAqB,CAAE,CACzFC,CAAAA,EAAAA,EAAAA,CAAAA,CAA4BA,GAExB6G,EAAcD,EAAe7P,EAAKkF,OAAO,CAAElF,EAAKmD,OAAO,CAAChD,KAAK,EAE7D4P,EAAiB,IACrBV,GAAuB,GAEvBO,EAAkB5P,EAAKkF,OAAO,CAAElF,EAAKmD,OAAO,CAAChD,KAAK,CAAE6P,GAEpDX,GAAuB,EACzB,EAEMY,EAAsB9B,GAAS+B,GAAAA,EAAMA,CAErCC,EAAiB,UAGrB,GAFA3B,GAAiB,GAEb,CAACsB,EAAa,CAChB,MAAM9G,EAAsB,CAAE,CAAChJ,EAAKkF,OAAO,CAAC,CAAE,CAAClF,EAAKmD,OAAO,CAAChD,KAAK,CAAE,GACnEqK,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACC,EAAAA,CAAwBA,CAAC2F,WAAW,EAC/C5B,GAAiB,GACjB,MACF,CAEA,IAAMzI,EAAiB6C,GAIQyH,MAHKtK,EAChCX,OAAO2B,MAAM,CAAChB,GAAgBxD,MAAM,CAAC,OAAC,SAAE2C,CAAO,CAAE,UAAKA,IAAYlF,EAAKkF,OAAO,GAAEK,MAAM,CACtF,GAIF,MAAMuD,EAA8B9I,EAAKkF,OAAO,EAEhD,MAAM6D,EAA4B/I,EAAKkF,OAAO,CAAElF,EAAKmD,OAAO,CAAChD,KAAK,EAGpEqK,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACC,EAAAA,CAAwBA,CAAC6F,YAAY,EAChD9B,GAAiB,EACnB,EAEA,MACE,iCACE,UAACxC,EAAAA,GAAKA,CAAAA,CAACjK,GAAI,CAAEwO,EAAG,EAAGlF,GAAI,CAAE,WACvB,WAACP,EAAAA,GAAIA,CAAAA,CAACC,SAAS,IAACyF,QAAS,YACvB,UAAC1F,EAAAA,GAAIA,CAAAA,CAACE,IAAI,IAACyF,GAAI,EAAGxF,GAAI,YACpB,UAACnK,EAAAA,GAAUA,CAAAA,CACTV,QAAQ,KACR2B,GAAI,CACFhB,WAAY,GACd,WACD,yBAKH,UAAC+J,EAAAA,GAAIA,CAAAA,CAACE,IAAI,IAACC,EAAE,aACX,WAACH,EAAAA,GAAIA,CAAAA,CACHC,SAAS,IACThJ,GAAI,CACF2O,IAAK,IACLC,cAAe,QACjB,YAEA,UAAClC,GAAmBA,CAAAA,GAEpB,WAAC3N,EAAAA,GAAUA,CAAAA,WAAC,IAFQ2N,6BAGatK,EAAa,oBAAsB,qBAAqB,iJAE9D,UAACyM,GAAAA,CAAYA,CAAAA,CAAChR,KAAMiR,GAAAA,EAAiBA,CAACC,kBAAkB,UAAE,YAGpFb,GACC,WAACrO,EAAAA,GAAKA,CAAAA,CAACC,SAAS,OAAOvB,UAAWC,IAAAA,SAAa,WAC7C,UAACO,EAAAA,GAAUA,CAAAA,CACTV,QAAQ,QACR2B,GAAI,CACFhB,WAAY,IACZsK,GAAI,CACN,WACD,oBAGD,WAACvK,EAAAA,GAAUA,CAAAA,CAACV,QAAQ,kBAAQ,uEAC0C,UAAC2Q,IAAAA,UAAE,oBAAmB,KAAM,IAChG,UAACA,IAAAA,UAAE,kBAAiB,MAAM,UAACA,IAAAA,UAAE,8BAA6B,kDAK/D5M,EACC,iCACE,UAAC4I,EAAAA,GAAOA,CAAAA,CAAAA,GACR,UAACtL,GAAAA,CAAcA,CAAAA,CAACP,OAAO,sCAEvB,WAACyB,MAAAA,CAAIqO,MAAO,CAAE9F,QAAS,OAAQE,eAAgB,eAAgB,YAC7D,UAACwC,EAAAA,CAAWA,CAAAA,CACVzK,QAASnD,EAAKmD,OAAO,CAAChD,KAAK,CAC3B8Q,cAAc,IACdjD,aAAc,CAACwB,EACfvB,UAAU,EACViD,WAAW,MAEb,UAAC1N,EAAyBA,CACxBD,WAAYkI,EAAAA,EAAUA,CAACC,aADClI,UACsB,CAC9CG,aAAc,CAAC4K,GAAiBvO,EAAKsE,QAAQ,UAE5C,GACC,UAAC6M,EAAAA,GAAgBA,CAAAA,CACfC,cAAY,uBACZC,QAAS,UAACC,EAAAA,GAAMA,CAAAA,CAAC3E,QAAS,CAAC,CAACmD,EAAayB,SAAUpB,IACnDtP,MAAOiP,EAAc,KAAO,MAC5BlE,SAAU,CAACC,GAAQ0C,GAAiB,CAACvO,EAAKsE,QAAQ,QAM1D,UAAC0H,EAAAA,GAAKA,CAAAA,CAAC1L,UAAWC,IAAAA,UAAc,CAAEH,QAAQ,oBACxC,WAACU,EAAAA,GAAUA,CAAAA,CAACV,QAAQ,kBAAQ,wFAC4D,IACtF,UAACoR,IAAIA,CAAC5R,KAAM6R,GAAAA,CAASA,CAAhBD,QAAyB,CAACE,aAAa,CAAEC,QAAQ,IAACC,cAAc,aACnE,UAACC,EAAAA,GAAOA,CAAAA,UAAC,yBACJ,YAMb,UAAC1J,GAAuBA,CAAAA,aAMjC2H,GACC,UAAC9D,EAAAA,GAAKA,CAAAA,CAACjK,GAAI,CAAEwO,EAAG,CAAE,WAChB,WAACzF,EAAAA,GAAIA,CAAAA,CAACC,SAAS,IAACyF,QAAS,YACvB,UAAC1F,EAAAA,GAAIA,CAAAA,CAACE,IAAI,IAACyF,GAAI,EAAGxF,GAAI,YACpB,UAACnK,EAAAA,GAAUA,CAAAA,CACTV,QAAQ,KACR2B,GAAI,CACFhB,WAAY,GACd,WACD,mBAKH,UAAC+J,EAAAA,GAAIA,CAAAA,CAACE,IAAI,IAACC,EAAE,aACX,WAAC6G,EAAAA,GAASA,CAAAA,WACR,UAACX,EAAAA,GAAgBA,CAAAA,CACfE,QACE,UAAC5E,EAAAA,GAAQA,CAAAA,CACPE,QAASmD,CAAW,CAACiC,EAAAA,CAAWA,CAACC,cAAc,CAAC,EAAIlC,CAAW,CAACiC,EAAAA,CAAWA,CAACE,cAAc,CAAC,CAC3FrG,SAAUwD,EACVmC,SAAU,CAACW,EAAGvF,KACZoD,EAAe,CACb,GAAGD,CAAW,CACd,CAACiC,EAAAA,CAAWA,CAACC,cAAc,CAAC,CAAErF,EAC9B,CAACoF,EAAAA,CAAWA,CAACE,cAAc,CAAC,CAAEtF,CAChC,GAEAnC,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAAC,CAAE,GAAGC,EAAAA,CAAwBA,CAAC0H,mBAAmB,CAAEtR,MAAO8L,CAAQ,EAC/E,IAGJ9L,MAAM,0BAGR,UAACsQ,EAAAA,GAAgBA,CAAAA,CACfE,QACE,UAAC5E,EAAAA,GAAQA,CAAAA,CACPE,QACEmD,CAAW,CAACiC,EAAAA,CAAWA,CAACK,kBAAkB,CAAC,EAC3CtC,CAAW,CAACiC,EAAAA,CAAWA,CAACM,6BAA6B,CAAC,CAExDzG,SAAUwD,EACVmC,SAAU,CAACW,EAAGvF,KACZoD,EAAe,CACb,GAAGD,CAAW,CACd,CAACiC,EAAAA,CAAWA,CAACK,kBAAkB,CAAC,CAAEzF,EAClC,CAACoF,EAAAA,CAAWA,CAACM,6BAA6B,CAAC,CAAE1F,CAC/C,GAEAnC,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAAC,CAAE,GAAGC,EAAAA,CAAwBA,CAAC6H,mBAAmB,CAAEzR,MAAO8L,CAAQ,EAC/E,IAGJ9L,MAAM,0BAGR,UAACsQ,EAAAA,GAAgBA,CAAAA,CACfE,QACE,UAAC5E,EAAAA,GAAQA,CAAAA,CACPE,QAASmD,CAAW,CAACiC,EAAAA,CAAWA,CAACQ,oBAAoB,CAAC,CACtD3G,SAAUwD,EACVmC,SAAU,CAACW,EAAGvF,KACZ,IAAM6F,EAAuC,KAC3CzC,EAAe,CACb,GAAGD,CAAW,CACd,CAACiC,EAAAA,CAAWA,CAACQ,oBAAoB,CAAC,CAAE5F,CACtC,GAEAnC,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAAC,CAAE,GAAGC,EAAAA,CAAwBA,CAACgI,2BAA2B,CAAE5R,MAAO8L,CAAQ,EACvF,EAEIA,EACF3D,EAAsB,CACpB,CAAChJ,EAAKkF,CAFG,MAEI,CAAC,CAAE,CAAClF,EAAKmD,OAAO,CAAChD,KAAK,CAAC,GAEnCuS,IAAI,CAAC,IACAC,GACFH,GAEJ,GACCI,GAJiB,EAIZ,CAAC,IAAM,MAEfJ,GAEJ,IAGJ3R,MACE,iCACE,UAACC,EAAAA,GAAUA,CAAAA,UAAC,0BACX,CAACgP,CAAW,CAACiC,EAAAA,CAAWA,CAACQ,oBAAoB,CAAC,EAC7C,UAACzR,EAAAA,GAAUA,CAAAA,CACTV,QAAQ,QACR2B,GAAI,CACFf,MAAO,gBACT,WAECkO,EAAU,0BAA4B,oBAK/CtD,SAAU,CAACsD,GAAW,CAACY,gBASzC,EAAC,gBCxQD,OAtBoC,IACG+C,CAAAA,EAAAA,CAEjC,CAFiCA,EAAAA,CAAaA,CAACC,CAqBtCC,EArBsCD,EAAQA,CAAChC,YAqB9BiC,EAAA,IArBgD,EAE3C,CAKjC,gCACE,UAACC,IAAIA,UACH,CADGA,EACH,OAAC/R,QAAAA,UAAO,GAAc,OAAXgS,GAAAA,EAAUA,CAAC,mCAGxB,UAACC,EAAAA,CAAcA,CAAAA,CAAAA,GAEf,UAACC,OAAAA,UACC,UAAClE,GAAiBA,CAAAA,QAZf,KAYeA,kECrBnB,eAAKmE,CAAAA,uPAAAA,OASX,EAEM,SAAK3H,CAAAA,+RAAAA,OAOX,IAgDD,EAAsC,CACpC,MAAc,EAAF,EAAS,EACnB,mBAAgC,CAAF,CAC9B,oBAAiC,CAAF,CAC/B,iBAA8B,CAAF,CAC5B,mBAAiC,EAAF,GAAQ,EACvC,yBAAsC,CAAF,CACtC,EACA,SAAiB,EAAF,EAAS,EACtB,mBAAgC,CAAF,CAC9B,oBAAiC,CAAF,CAC/B,mBAAiC,EAAF,GAAQ,EACvC,yBAAsC,CAAF,CACtC,EACA,YAAoB,EAAF,EAAS,EACzB,mBAAiC,EAAF,GAAQ,EACvC,yBAAsC,CAAF,GAEtC,yBAAiC,EAAF,KAAG,gBAAE4H,CAAc,CAAE,SAAM,CACxD,mBAAiC,EAAF,GAAQ,EACvC,yBAAsC,CAAF,CACpC,+BAA6C,EAAF,YAAG,OAAEC,CAAK,CAAE,wDAAG,CAAC,EACzD,GAAI,CAACA,EAAO,OAAO,EAEnB,IAAMC,EAAgBF,EAAelN,IAAI,CAAC,GAAQqN,EAAGF,KAAK,CAACnQ,OAAO,GAAKmQ,EAAMnQ,OAAO,QAEpF,EAAIoQ,GACKE,OAAOF,EAAcG,GADX,GACiB,EAAID,OAAOF,EAAcI,KAAK,EAAI,CAIxE,CACF,GACA,kBAA0B,EAAF,EAAS,EAC/B,yBAAsC,CAAF,CACtC,CACF,CAAC,4IC7FM,IAAMC,EAAW,KACtB,IAAM5Q,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAClBiM,EAAUC,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,GACxB0E,EAAoBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAoBA,GACxCC,EAAaC,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,GAChCC,EAAcpR,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,GAC5BqR,EAA6BC,CAAAA,EAAAA,EAAAA,CAAAA,CAA6BA,GAG1DC,EAA2C5P,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CACtD,IAAO,EACL,CAAC4O,EAAAA,EAAIA,CAACiB,KAAK,CAAC,CAAEnF,EACd,CAACkE,EAAAA,EAAIA,CAACkB,WAAW,CAAC,CAAE,CAAC,CAACT,EACtB,CAACT,EAAAA,EAAIA,CAACmB,QAAQ,CAAC,CAAE,CAAC,CAACR,EACnB,CAACX,EAAAA,EAAIA,CAACoB,SAAS,CAAC,CAAEP,EAClB,CAACb,EAAAA,EAAIA,CAACqB,wBAAwB,CAAC,CAAEP,EACjC,CAACd,EAAAA,EAAIA,CAACsB,WAAW,CAAC,CAAE,CAAC,CAAC1R,EACtB,CAACoQ,EAAAA,EAAIA,CAACuB,iBAAiB,CAAC,CAAE,CAAC3R,EAC3B,CAACoQ,EAAAA,EAAIA,CAACwB,UAAU,CAAC,EAAE,EACrB,EACA,CAAC1F,EAAS2E,EAAmBE,EAAYE,EAAaC,EAA4BlR,EAAO,EAY3F,MATcwB,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CACnB,IACE,OAAQiB,OAAO,CAAC2O,GAAyCzO,MAAM,CAC7D,CAACC,EAAAA,QAAK,CAACiP,EAAMC,EAAa,UAAMA,EAAe,IAAIlP,EAAKiP,EAAK,CAAGjP,GAChE,EAAE,EAEN,CAACwO,EAAkB,CAIvB,EAAC,0BCtCM,IAAMW,EAAe,KAC1B,IAAM1B,EAAiB2B,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACC,EAAAA,EAAoBA,EAEvD,MAAO,CACL,CAAC7B,EAAAA,EAAIA,CAACqB,wBAAwB,CAAC,CAAE,gBAAEpB,CAAe,CACpD,CACF,EAAC,ECLiC,CAAiB6B,EAAYC,IAC7DD,EAAMvP,MAAM,CAAgC,CAACC,EAAKiP,KAChD,IAAMO,EAAoBC,EAAAA,EAAoB,CAACR,EAAK,QAEpD,EAIO,CAAE,CAJL,EAIQjP,CAAG,CAAE,CAACiP,EAAK,CAAEO,EAAkBD,CAAK,CAACN,EAAK,CAAkB,EAH/DjP,CAIX,EAAG,CAAC,GAAE,ECNqB,SAC3BrC,CAAAA,mFACG,CAAC4R,EAAM,GAEJG,EAAY1B,IACZ2B,EAAYR,EADQnB,EAGpB4B,EAAkBhR,CAAAA,EAAAA,EAAAA,CAFMuQ,MAENvQ,CAAOA,CAAC,IACvBiR,EAAmBH,EAAWC,GACpC,CAACD,EAAWC,EAAU,EAqBzB,IAtB2BE,EAGDjR,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IACzBY,OAAOK,OAAO,CAAC+P,GAAiB7P,MAAM,CAAC,CAACC,EAAAA,QAAK,CAACiP,EAAMa,EAAY,GAC/DC,QAAkBD,EAAAA,KAAAA,EAAAA,CAAa,CAACnS,EAAW,QAEjD,GAFwBmS,EAEAzV,IAApB0V,EAEK/P,EAGsB,GALI,SAKQ,OAAhC+P,EAEF,CAAE,GAAG/P,CAAG,CAAE,CAACiP,EAAK,CAAEc,EAAgBR,EAA6B,EAIjE,CAAE,GAAGvP,CAAG,CAAE,CAACiP,EAAK,CAAEc,CAAgB,CAC3C,EAAG,CAAC,GACH,CAACH,EAAiBjS,EAAY4R,EAAM,CAGzC,EAAC,EClC+B,SAC9B5R,CAAAA,6BACG4R,EAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAIH,OAAO/P,OAAO2B,MAAM,CAFA6O,EAAcrS,KAAe4R,IAEf1N,EAFDmO,EAEK,CAAEC,GAASA,EACnD,EAAC,8BChBD,IAAIC,EAAWC,EAAQ,KAAa,EAChCC,EAAgBD,EAAQ,KAAkB,CADxBA,CAElBE,EAAoBF,EAAQ,KAAsB,CAD3BA,CAEvBG,EAAWH,EAAQ,KAAa,CADLA,CAE3BI,EAAYJ,EAAQ,KAAc,CADhBA,CAElBK,EAAWL,EAAQ,KAAa,CADbA,GA8DhBM,OAAO,CA7DQN,EA6DLO,OA7COC,CAAK,CAAExP,CAAM,CAAEyP,CAAQ,CAAEC,CAAU,EACzD,IAAIC,EAAQ,CAAC,EACT7P,EAAWmP,EACXW,EAAW,GACXpR,EAASgR,EAAMhR,MAAM,CACrBqR,EAAS,EAAE,CACXC,EAAe9P,EAAOxB,MAAM,CAEhC,GAAI,CAACA,EACH,MADW,CACJqR,EAELJ,IACFzP,EAASmP,EAASnP,EADN,EACwByP,GAAAA,EAElCC,GACF5P,EAAWoP,EACXU,EAAW,GAFG,CAIP5P,EAAOxB,MAAM,EA/BD,EA+BKuR,IACxBjQ,EAAWuP,EACXO,GAAW,EACX5P,EAAS,GAHiC,CAG7B+O,EAAS/O,IAExBgQ,EACA,KAAO,EAAEL,EAAQnR,GAAQ,CACvB,IAAIpF,EAAQoW,CAAK,CAACG,EAAM,CACpBM,EAAuB,MAAZR,EAAmBrW,EAAQqW,EAASrW,GAGnD,GADAA,EAAQ,GAAyB,IAAVA,EAAeA,EAAQ,EAC1CwW,GAAYK,GAAaA,EAAU,CAErC,IADA,IAAIC,EAAcJ,EACXI,KACL,GAAIlQ,CAAM,CAACkQ,EAAY,EADH,CACQD,EAC1B,QADoC,CAC3BD,EAGbH,EAAO5Q,IAAI,CAAC7F,EACd,MACU0G,CAAL,CAAcE,EAAQiQ,CAAlB,CAA4BP,IACnCG,EAAO5Q,IAAI,CAAC7F,EADoC,CAIpD,OAAOyW,CACT,gCChEA,IAAIM,EAAYnB,EAAQ,KAAc,EAClCoB,EAAgBpB,EAAQ,KAAkB,CADvBA,CAqCvBqB,EAAOf,OAAO,CApCaN,EAoCVsB,OAvBRA,EAAYd,CAAK,CAAEe,CAAK,CAAEC,CAAS,CAAEC,CAAQ,CAAEZ,CAAM,EAC5D,IAAIF,EAAQ,CAAC,EACTnR,EAASgR,EAAMhR,MAAM,CAKzB,IAHAgS,IAAcA,EAAYJ,CAAAA,CAAY,CACtCP,IADcW,EACM,IAATX,EAEFF,EAAQnR,GAAQ,CACvB,IAAIpF,EAAQoW,CAAK,CAACG,EAAM,CACpBY,EAAQ,GAAKC,EAAUpX,GACrBmX,EAAQ,EAEVD,CAH+B,CAGnBlX,EAAOmX,EAAQ,EAAGC,EAAWC,EAAUZ,GAEnDM,EAAUN,EAAQzW,GAEVqX,GACVZ,EAAM,CAACA,EAAOrR,EADM,IACA,CAAC,CAAGpF,CAAAA,CAE5B,CACA,OAAOyW,CACT,gCCnCA,IAAIa,EAAS1B,EAAQ,KAAW,EAC5B2B,EAAc3B,EAAQ,KAAe,CADrBA,CAEhB4B,EAAU5B,EAAQ,KAAW,CADRA,CAIrB6B,EAAmBH,EAASA,EAAOI,IAHlB9B,cAGoC,MAAG9V,EAc5DmX,EAAOf,OAAO,CALd,EAKiBc,OALRA,CAAmB,EAC1B,OAAOQ,EAAQxX,IAAUuX,EAAYvX,IACnC,CAAC,CAAEyX,CAAAA,GAAoBzX,GAASA,CAAK,CAACyX,EAAAA,CAC1C,+BCjBA,IAAItB,EAAiBP,EAAQ,KAAmB,EAC5CsB,EAActB,EAAQ,KAAgB,CADdA,CAExB+B,EAAW/B,EAAQ,KAAa,CADXA,CAErBgC,EAAoBhC,EAAQ,KAAqB,CAD/BA,CAwBlBzQ,EAAawS,EAAS,MAvBK/B,GAuBIQ,CAAK,CAAExP,CAAM,EAC9C,OAAOgR,EAAkBxB,GACrBD,EAAeC,EAAOc,EAAYtQ,EAAQ,EAAGgR,GAAmB,IAChE,EAAE,GAGRX,EAAOf,OAAO,CAAG/Q,gCChCjB,IAAI0S,EAAkBjC,EAAQ,KAAoB,EAC9CkC,EAAalC,EAAQ,KAAe,CADXA,CAEzBmC,EAAenC,EAAQ,IAAiB,EAwC5CqB,EAAOf,OAAO,CAVd,CA9B0BN,CAwCT/Q,OAVRA,CAAgB,CAAEwR,CAAQ,EACjC,IAAII,EAAS,CAAC,EAMd,OALAJ,EAAW0B,EAAa1B,EAAU,GAElCyB,EAAWE,EAAQ,SAAShY,CAAK,CAAEiY,CAAG,CAAED,CAAM,EAC5CH,EAAgBpB,EAAQwB,EAAK5B,EAASrW,EAAOiY,EAAKD,GACpD,GACOvB,CACT,aCvCA,WAAkB,0FCAlB,WAAkB,oOCAlB,WAAkB","sources":["webpack://_N_E/?27c1","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/NavTabs/index.tsx","webpack://_N_E/./src/components/common/PageHeader/index.tsx","webpack://_N_E/./src/components/new-safe/create/NetworkWarning/index.tsx","webpack://_N_E/./src/components/settings/SettingsHeader/index.tsx","webpack://_N_E/./src/features/recovery/hooks/useIsRecoverer.ts","webpack://_N_E/./src/components/common/CheckWalletWithPermission/index.tsx","webpack://_N_E/./src/components/settings/PushNotifications/GlobalPushNotifications.tsx","webpack://_N_E/./src/hooks/useIsMac.ts","webpack://_N_E/./src/components/notification-center/NotificationRenewal/index.tsx","webpack://_N_E/./src/components/settings/PushNotifications/index.tsx","webpack://_N_E/./src/pages/settings/notifications.tsx","webpack://_N_E/./src/permissions/config.ts","webpack://_N_E/./src/permissions/hooks/useRoles.ts","webpack://_N_E/./src/permissions/hooks/useRoleProps.ts","webpack://_N_E/./src/permissions/getRolePermissions.ts","webpack://_N_E/./src/permissions/hooks/usePermission.ts","webpack://_N_E/./src/permissions/hooks/useHasPermission.ts","webpack://_N_E/../../node_modules/lodash/_baseDifference.js","webpack://_N_E/../../node_modules/lodash/_baseFlatten.js","webpack://_N_E/../../node_modules/lodash/_isFlattenable.js","webpack://_N_E/../../node_modules/lodash/difference.js","webpack://_N_E/../../node_modules/lodash/mapValues.js","webpack://_N_E/./src/components/common/NavTabs/styles.module.css","webpack://_N_E/./src/components/common/PageHeader/styles.module.css","webpack://_N_E/./src/components/settings/PushNotifications/styles.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/settings/notifications\",\n      function () {\n        return require(\"private-next-pages/settings/notifications.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/settings/notifications\"])\n      });\n    }\n  ","export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import React from 'react'\nimport NextLink from 'next/link'\nimport { Tab, Tabs, Typography } from '@mui/material'\nimport { useRouter } from 'next/router'\nimport type { NavItem } from '@/components/sidebar/SidebarNavigation/config'\nimport css from './styles.module.css'\n\nconst NavTabs = ({ tabs }: { tabs: NavItem[] }) => {\n  const router = useRouter()\n  const activeTab = Math.max(0, tabs.map((tab) => tab.href).indexOf(router.pathname))\n  const query = router.query.safe ? { safe: router.query.safe } : undefined\n\n  return (\n    <Tabs value={activeTab} variant=\"scrollable\" allowScrollButtonsMobile className={css.tabs}>\n      {tabs.map((tab, idx) => (\n        <Tab\n          key={tab.href}\n          href={{ pathname: tab.href, query }}\n          component={NextLink}\n          tabIndex={0}\n          className={css.tab}\n          label={\n            <Typography\n              variant=\"body2\"\n              fontWeight={700}\n              color={activeTab === idx ? 'primary' : 'primary.light'}\n              className={css.label}\n            >\n              {tab.label}\n            </Typography>\n          }\n        />\n      ))}\n    </Tabs>\n  )\n}\n\nexport default NavTabs\n","import { Box, Typography } from '@mui/material'\nimport classNames from 'classnames'\n\nimport type { ReactElement } from 'react'\n\nimport css from './styles.module.css'\n\nconst PageHeader = ({\n  title,\n  action,\n  noBorder,\n}: {\n  title: string\n  action?: ReactElement\n  noBorder?: boolean\n}): ReactElement => {\n  return (\n    <Box className={classNames(css.container, { [css.border]: !noBorder })}>\n      <Typography variant=\"h3\" className={css.title}>\n        {title}\n      </Typography>\n      {action}\n    </Box>\n  )\n}\n\nexport default PageHeader\n","import { Alert, AlertTitle, Box } from '@mui/material'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport ChainSwitcher from '@/components/common/ChainSwitcher'\nimport useIsWrongChain from '@/hooks/useIsWrongChain'\n\nconst NetworkWarning = ({ action }: { action?: string }) => {\n  const chain = useCurrentChain()\n  const isWrongChain = useIsWrongChain()\n\n  if (!chain || !isWrongChain) return null\n\n  return (\n    <Alert severity=\"warning\">\n      <AlertTitle sx={{ fontWeight: 700 }}>Change your wallet network</AlertTitle>You are trying to{' '}\n      {action || 'sign or execute a transaction'} on {chain.chainName}. Make sure that your wallet is set to the same\n      network.\n      <Box\n        sx={{\n          mt: 2,\n        }}\n      >\n        <ChainSwitcher />\n      </Box>\n    </Alert>\n  )\n}\n\nexport default NetworkWarning\n","import type { ReactElement } from 'react'\n\nimport NavTabs from '@/components/common/NavTabs'\nimport PageHeader from '@/components/common/PageHeader'\nimport { generalSettingsNavItems, settingsNavItems } from '@/components/sidebar/SidebarNavigation/config'\nimport css from '@/components/common/PageHeader/styles.module.css'\nimport useSafeAddress from '@/hooks/useSafeAddress'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { isRouteEnabled } from '@/utils/chains'\nimport madProps from '@/utils/mad-props'\n\nexport const SettingsHeader = ({\n  safeAddress,\n  chain,\n}: {\n  safeAddress: ReturnType<typeof useSafeAddress>\n  chain: ReturnType<typeof useCurrentChain>\n}): ReactElement => {\n  const navItems = safeAddress\n    ? settingsNavItems.filter((route) => isRouteEnabled(route.href, chain))\n    : generalSettingsNavItems\n\n  return (\n    <PageHeader\n      title={safeAddress ? 'Settings' : 'Preferences'}\n      action={\n        <div className={css.navWrapper}>\n          <NavTabs tabs={navItems} />\n        </div>\n      }\n    />\n  )\n}\n\nexport default madProps(SettingsHeader, {\n  safeAddress: useSafeAddress,\n  chain: useCurrentChain,\n})\n","import { selectDelayModifierByRecoverer } from '@/features/recovery/services/selectors'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport useRecovery from '@/features/recovery/hooks/useRecovery'\n\nexport function useIsRecoverer() {\n  const [recovery] = useRecovery()\n  const wallet = useWallet()\n  return Boolean(wallet?.address && recovery && selectDelayModifierByRecoverer(recovery, wallet.address))\n}\n","import { useSafeSDK } from '@/hooks/coreSDK/safeCoreSDK'\nimport { useMemo, type ReactElement } from 'react'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport useConnectWallet from '../ConnectWallet/useConnectWallet'\nimport useIsWrongChain from '@/hooks/useIsWrongChain'\nimport { Tooltip } from '@mui/material'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport type { Permission, PermissionProps } from '@/permissions/config'\nimport { useHasPermission } from '@/permissions/hooks/useHasPermission'\n\ntype CheckWalletWithPermissionProps<\n  P extends Permission,\n  PProps = PermissionProps<P> extends undefined ? { permissionProps?: never } : { permissionProps: PermissionProps<P> },\n> = {\n  children: (ok: boolean) => ReactElement\n  permission: P\n  noTooltip?: boolean\n  checkNetwork?: boolean\n  allowUndeployedSafe?: boolean\n} & PProps\n\nenum Message {\n  WalletNotConnected = 'Please connect your wallet',\n  SDKNotInitialized = 'SDK is not initialized yet',\n  NotSafeOwner = 'Your connected wallet is not a signer of this Safe Account',\n  SafeNotActivated = 'You need to activate the Safe before transacting',\n}\n\nconst CheckWalletWithPermission = <P extends Permission>({\n  children,\n  permission,\n  permissionProps,\n  noTooltip,\n  checkNetwork = false,\n  allowUndeployedSafe = false,\n}: CheckWalletWithPermissionProps<P>): ReactElement => {\n  const wallet = useWallet()\n  const connectWallet = useConnectWallet()\n  const isWrongChain = useIsWrongChain()\n  const sdk = useSafeSDK()\n  const hasPermission = useHasPermission(\n    permission,\n    ...((permissionProps ? [permissionProps] : []) as PermissionProps<P> extends undefined\n      ? []\n      : [props: PermissionProps<P>]),\n  )\n\n  const { safe, safeLoaded } = useSafeInfo()\n\n  const isUndeployedSafe = !safe.deployed\n\n  const message = useMemo(() => {\n    if (!wallet) {\n      return Message.WalletNotConnected\n    }\n\n    if (!sdk && safeLoaded) {\n      return Message.SDKNotInitialized\n    }\n\n    if (isUndeployedSafe && !allowUndeployedSafe) {\n      return Message.SafeNotActivated\n    }\n\n    if (!hasPermission) {\n      return Message.NotSafeOwner\n    }\n  }, [allowUndeployedSafe, hasPermission, isUndeployedSafe, sdk, wallet, safeLoaded])\n\n  if (checkNetwork && isWrongChain) return children(false)\n  if (!message) return children(true)\n  if (noTooltip) return children(false)\n\n  return (\n    <Tooltip title={message}>\n      <span onClick={wallet ? undefined : connectWallet}>{children(false)}</span>\n    </Tooltip>\n  )\n}\n\nexport default CheckWalletWithPermission\n","import { selectUndeployedSafes, type UndeployedSafesState } from '@/features/counterfactual/store/undeployedSafesSlice'\nimport {\n  Box,\n  Grid,\n  Paper,\n  Typography,\n  Checkbox,\n  Button,\n  Divider,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  CircularProgress,\n} from '@mui/material'\nimport mapValues from 'lodash/mapValues'\nimport difference from 'lodash/difference'\nimport pickBy from 'lodash/pickBy'\nimport { Fragment, useEffect, useMemo, useState } from 'react'\nimport type { ReactElement } from 'react'\nimport type { AllOwnedSafes } from '@safe-global/safe-gateway-typescript-sdk'\nimport { type ChainInfo } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { sameAddress } from '@/utils/addresses'\nimport useChains from '@/hooks/useChains'\nimport { useAppSelector } from '@/store'\nimport { useNotificationPreferences } from './hooks/useNotificationPreferences'\nimport { useNotificationRegistrations } from './hooks/useNotificationRegistrations'\nimport { trackEvent } from '@/services/analytics'\nimport { PUSH_NOTIFICATION_EVENTS } from '@/services/analytics/events/push-notifications'\nimport { requestNotificationPermission } from './logic'\nimport type { NotifiableSafes } from './logic'\nimport type { PushNotificationPreferences } from '@/services/push-notifications/preferences'\nimport CheckWalletWithPermission from '@/components/common/CheckWalletWithPermission'\nimport { Permission } from '@/permissions/config'\n\nimport css from './styles.module.css'\nimport useAllOwnedSafes from '@/features/myAccounts/hooks/useAllOwnedSafes'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { selectAllAddedSafes, type AddedSafesState } from '@/store/addedSafesSlice'\nimport { maybePlural } from '@/utils/formatters'\nimport { useNotificationsRenewal } from './hooks/useNotificationsRenewal'\n\n// UI logic\n\nexport const _filterUndeployedSafes = (safes: NotifiableSafes | undefined, undeployedSafes: UndeployedSafesState) => {\n  return pickBy(\n    mapValues(safes, (safeAddresses, chainId) => {\n      const undeployedAddresses = undeployedSafes[chainId] ? Object.keys(undeployedSafes[chainId]) : []\n      return difference(safeAddresses, undeployedAddresses)\n    }),\n    (safeAddresses) => safeAddresses.length > 0,\n  )\n}\n\nexport const _transformAddedSafes = (addedSafes: AddedSafesState): NotifiableSafes => {\n  return Object.entries(addedSafes).reduce<NotifiableSafes>((acc, [chainId, addedSafesOnChain]) => {\n    acc[chainId] = Object.keys(addedSafesOnChain)\n    return acc\n  }, {})\n}\n\n// Convert data structure of currently notified Safes\nexport const _transformCurrentSubscribedSafes = (\n  allPreferences?: PushNotificationPreferences,\n): NotifiableSafes | undefined => {\n  if (!allPreferences) {\n    return\n  }\n\n  return Object.values(allPreferences).reduce<NotifiableSafes>((acc, { chainId, safeAddress }) => {\n    if (!acc[chainId]) {\n      acc[chainId] = []\n    }\n\n    acc[chainId].push(safeAddress)\n    return acc\n  }, {})\n}\n\n// Remove Safes that are not on a supported chain\nexport const _sanitizeNotifiableSafes = (\n  chains: Array<ChainInfo>,\n  notifiableSafes: NotifiableSafes,\n): NotifiableSafes => {\n  return Object.entries(notifiableSafes).reduce<NotifiableSafes>((acc, [chainId, safeAddresses]) => {\n    const chain = chains.find((chain) => chain.chainId === chainId)\n\n    if (chain) {\n      acc[chainId] = safeAddresses\n    }\n\n    return acc\n  }, {})\n}\n\n// Merges added Safes, currently notified Safes, and owned safes into a single data structure without duplicates\nexport const _mergeNotifiableSafes = (\n  ownedSafes: AllOwnedSafes | undefined,\n  addedSafes: AddedSafesState,\n  currentSubscriptions?: NotifiableSafes,\n): NotifiableSafes | undefined => {\n  const added = _transformAddedSafes(addedSafes)\n\n  const chains = Array.from(\n    new Set([\n      ...Object.keys(addedSafes || {}),\n      ...Object.keys(currentSubscriptions || {}),\n      ...Object.keys(ownedSafes || {}),\n    ]),\n  )\n\n  let notifiableSafes: NotifiableSafes = {}\n  for (const chainId of chains) {\n    const ownedSafesOnChain = ownedSafes?.[chainId] ?? []\n    const addedSafesOnChain = added[chainId]?.filter((addedAddress) => ownedSafesOnChain.includes(addedAddress)) || []\n    const currentSubscriptionsOnChain = currentSubscriptions?.[chainId] || []\n    // The display order of safes will be subscribed, added & owned, owned\n    const uniqueSafeAddresses = Array.from(\n      new Set([...currentSubscriptionsOnChain, ...addedSafesOnChain, ...ownedSafesOnChain]),\n    )\n    notifiableSafes[chainId] = uniqueSafeAddresses\n  }\n\n  return notifiableSafes\n}\n\nexport const _getTotalNotifiableSafes = (notifiableSafes: NotifiableSafes): number => {\n  return Object.values(notifiableSafes).reduce((acc, safeAddresses) => {\n    return (acc += safeAddresses.length)\n  }, 0)\n}\n\nexport const _areAllSafesSelected = (notifiableSafes: NotifiableSafes, selectedSafes: NotifiableSafes): boolean => {\n  const entries = Object.entries(notifiableSafes)\n\n  if (entries.length === 0) {\n    return false\n  }\n\n  return Object.entries(notifiableSafes).every(([chainId, safeAddresses]) => {\n    const hasChain = Object.keys(selectedSafes).includes(chainId)\n    const hasEverySafe = safeAddresses?.every((safeAddress) => selectedSafes[chainId]?.includes(safeAddress))\n    return hasChain && hasEverySafe\n  })\n}\n\n// Total number of signatures required to register selected Safes\nexport const _getTotalSignaturesRequired = (\n  selectedSafes: NotifiableSafes,\n  currentNotifiedSafes?: NotifiableSafes,\n): number => {\n  return Object.entries(selectedSafes)\n    .filter(([, safeAddresses]) => safeAddresses.length > 0)\n    .reduce((acc, [chainId, safeAddresses]) => {\n      const isNewChain = !currentNotifiedSafes?.[chainId]\n      const isNewSafe = safeAddresses.some((safeAddress) => !currentNotifiedSafes?.[chainId]?.includes(safeAddress))\n\n      if (isNewChain || isNewSafe) {\n        acc += 1\n      }\n      return acc\n    }, 0)\n}\n\nexport const _shouldRegisterSelectedSafes = (\n  selectedSafes: NotifiableSafes,\n  currentNotifiedSafes?: NotifiableSafes,\n): boolean => {\n  return Object.entries(selectedSafes).some(([chainId, safeAddresses]) => {\n    return safeAddresses.some((safeAddress) => !currentNotifiedSafes?.[chainId]?.includes(safeAddress))\n  })\n}\n\nexport const _shouldUnregsiterSelectedSafes = (\n  selectedSafes: NotifiableSafes,\n  currentNotifiedSafes?: NotifiableSafes,\n) => {\n  return Object.entries(currentNotifiedSafes || {}).some(([chainId, safeAddresses]) => {\n    return safeAddresses.some((safeAddress) => !selectedSafes[chainId]?.includes(safeAddress))\n  })\n}\n\n// onSave logic\n\n// Safes that need to be registered with the service\nexport const _getSafesToRegister = (\n  selectedSafes: NotifiableSafes,\n  currentNotifiedSafes?: NotifiableSafes,\n): NotifiableSafes | undefined => {\n  const safesToRegister = Object.entries(selectedSafes).reduce<NotifiableSafes>((acc, [chainId, safeAddresses]) => {\n    const safesToRegisterOnChain = safeAddresses.filter(\n      (safeAddress) => !currentNotifiedSafes?.[chainId]?.includes(safeAddress),\n    )\n\n    if (safesToRegisterOnChain.length > 0) {\n      acc[chainId] = safesToRegisterOnChain\n    }\n\n    return acc\n  }, {})\n\n  const shouldRegister = Object.values(safesToRegister).some((safeAddresses) => safeAddresses.length > 0)\n\n  if (shouldRegister) {\n    return safesToRegister\n  }\n}\n\n// Safes that need to be unregistered with the service\nexport const _getSafesToUnregister = (\n  selectedSafes: NotifiableSafes,\n  currentNotifiedSafes?: NotifiableSafes,\n): NotifiableSafes | undefined => {\n  if (!currentNotifiedSafes) {\n    return\n  }\n\n  const safesToUnregister = Object.entries(currentNotifiedSafes).reduce<NotifiableSafes>(\n    (acc, [chainId, safeAddresses]) => {\n      const safesToUnregisterOnChain = safeAddresses.filter(\n        (safeAddress) => !selectedSafes[chainId]?.includes(safeAddress),\n      )\n\n      if (safesToUnregisterOnChain.length > 0) {\n        acc[chainId] = safesToUnregisterOnChain\n      }\n      return acc\n    },\n    {},\n  )\n\n  const shouldUnregister = Object.values(safesToUnregister).some((safeAddresses) => safeAddresses.length > 0)\n\n  if (shouldUnregister) {\n    return safesToUnregister\n  }\n}\n\n// Whether the device needs to be unregistered from the service\nexport const _shouldUnregisterDevice = (\n  chainId: string,\n  safeAddresses: Array<string>,\n  currentNotifiedSafes?: NotifiableSafes,\n): boolean => {\n  if (!currentNotifiedSafes) {\n    return false\n  }\n\n  if (safeAddresses.length !== currentNotifiedSafes[chainId].length) {\n    return false\n  }\n\n  return safeAddresses.every((safeAddress) => {\n    return currentNotifiedSafes[chainId]?.includes(safeAddress)\n  })\n}\n\nexport const GlobalPushNotifications = (): ReactElement | null => {\n  const chains = useChains()\n  const undeployedSafes = useAppSelector(selectUndeployedSafes)\n  const [isLoading, setIsLoading] = useState(false)\n  const { address = '' } = useWallet() || {}\n  const [ownedSafes] = useAllOwnedSafes(address)\n  const addedSafes = useAppSelector(selectAllAddedSafes)\n\n  const { getAllPreferences } = useNotificationPreferences()\n  const { unregisterDeviceNotifications, unregisterSafeNotifications, registerNotifications } =\n    useNotificationRegistrations()\n\n  const { safesForRenewal } = useNotificationsRenewal()\n\n  // Safes selected in the UI\n  const [selectedSafes, setSelectedSafes] = useState<NotifiableSafes>({})\n\n  // Current Safes registered for notifications in indexedDB\n  const currentNotifiedSafes = useMemo(() => {\n    const allPreferences = getAllPreferences()\n    return _transformCurrentSubscribedSafes(allPreferences)\n  }, [getAllPreferences])\n\n  // `currentNotifiedSafes` is initially undefined until indexedDB resolves\n  useEffect(() => {\n    let isMounted = true\n\n    if (currentNotifiedSafes && isMounted) {\n      setSelectedSafes(currentNotifiedSafes)\n    }\n\n    return () => {\n      isMounted = false\n    }\n  }, [currentNotifiedSafes])\n\n  // Merged added Safes and `currentNotifiedSafes` (in case subscriptions aren't added)\n  const notifiableSafes = useMemo(() => {\n    const safes = _mergeNotifiableSafes(ownedSafes, addedSafes, currentNotifiedSafes)\n    const deployedSafes = _filterUndeployedSafes(safes, undeployedSafes)\n    return _sanitizeNotifiableSafes(chains.configs, deployedSafes)\n  }, [ownedSafes, addedSafes, currentNotifiedSafes, undeployedSafes, chains.configs])\n\n  const totalNotifiableSafes = useMemo(() => {\n    return _getTotalNotifiableSafes(notifiableSafes)\n  }, [notifiableSafes])\n\n  const isAllSelected = useMemo(() => {\n    return _areAllSafesSelected(notifiableSafes, selectedSafes)\n  }, [notifiableSafes, selectedSafes])\n\n  const onSelectAll = () => {\n    setSelectedSafes(() => {\n      if (isAllSelected) {\n        return []\n      }\n\n      return Object.entries(notifiableSafes).reduce((acc, [chainId, safeAddresses]) => {\n        return {\n          ...acc,\n          [chainId]: safeAddresses,\n        }\n      }, {})\n    })\n  }\n\n  const totalSignaturesRequired = useMemo(() => {\n    return _getTotalSignaturesRequired(selectedSafes, currentNotifiedSafes)\n  }, [currentNotifiedSafes, selectedSafes])\n\n  const canSave = useMemo(() => {\n    return (\n      _shouldRegisterSelectedSafes(selectedSafes, currentNotifiedSafes) ||\n      _shouldUnregsiterSelectedSafes(selectedSafes, currentNotifiedSafes)\n    )\n  }, [selectedSafes, currentNotifiedSafes])\n\n  const onSave = async () => {\n    if (!canSave) {\n      return\n    }\n\n    setIsLoading(true)\n\n    // Although the (un-)registration functions will request permission in getToken we manually\n    // check beforehand to prevent multiple promises in registrationPromises from throwing\n    const isGranted = await requestNotificationPermission()\n\n    if (!isGranted) {\n      setIsLoading(false)\n      return\n    }\n\n    const registrationPromises: Array<Promise<unknown>> = []\n\n    const newlySelectedSafes = _getSafesToRegister(selectedSafes, currentNotifiedSafes)\n\n    // Merge Safes that need to be registered with the ones for which notifications need to be renewed\n    const safesToRegister = _mergeNotifiableSafes(newlySelectedSafes, {}, safesForRenewal)\n\n    if (safesToRegister) {\n      registrationPromises.push(registerNotifications(safesToRegister))\n    }\n\n    const safesToUnregister = _getSafesToUnregister(selectedSafes, currentNotifiedSafes)\n    if (safesToUnregister) {\n      const unregistrationPromises = Object.entries(safesToUnregister).flatMap(([chainId, safeAddresses]) => {\n        if (_shouldUnregisterDevice(chainId, safeAddresses, currentNotifiedSafes)) {\n          return unregisterDeviceNotifications(chainId)\n        }\n        return safeAddresses.map((safeAddress) => unregisterSafeNotifications(chainId, safeAddress))\n      })\n\n      registrationPromises.push(...unregistrationPromises)\n    }\n\n    await Promise.all(registrationPromises)\n\n    trackEvent(PUSH_NOTIFICATION_EVENTS.SAVE_SETTINGS)\n\n    setIsLoading(false)\n  }\n\n  if (totalNotifiableSafes === 0) {\n    return (\n      <Typography sx={{ color: ({ palette }) => palette.primary.light }}>\n        {address ? 'No owned Safes' : 'No wallet connected'}\n      </Typography>\n    )\n  }\n\n  return (\n    <Grid container>\n      <Grid item xs={12} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h4\" fontWeight={700} display=\"inline\">\n          My Safes Accounts ({totalNotifiableSafes})\n        </Typography>\n\n        <Box display=\"flex\" alignItems=\"center\">\n          {totalSignaturesRequired > 0 && (\n            <Typography display=\"inline\" mr={2} textAlign=\"right\">\n              We&apos;ll ask you to verify ownership of each Safe Account with your signature per chain{' '}\n              {totalSignaturesRequired} time{maybePlural(totalSignaturesRequired)}\n            </Typography>\n          )}\n\n          <CheckWalletWithPermission permission={Permission.EnablePushNotifications}>\n            {(isOk) => (\n              <Button variant=\"contained\" disabled={!canSave || !isOk || isLoading} onClick={onSave}>\n                {isLoading ? <CircularProgress size={20} /> : 'Save'}\n              </Button>\n            )}\n          </CheckWalletWithPermission>\n        </Box>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Paper sx={{ border: ({ palette }) => `1px solid ${palette.border.light}` }}>\n          <List>\n            <ListItem disablePadding className={css.item}>\n              <ListItemButton onClick={onSelectAll} dense>\n                <ListItemIcon className={css.icon}>\n                  <Checkbox edge=\"start\" checked={isAllSelected} disableRipple />\n                </ListItemIcon>\n                <ListItemText primary=\"Select all\" primaryTypographyProps={{ variant: 'h5' }} />\n              </ListItemButton>\n            </ListItem>\n          </List>\n\n          <Divider />\n\n          {Object.entries(notifiableSafes).map(([chainId, safeAddresses], i, arr) => {\n            if (safeAddresses.length === 0) return\n            const chain = chains.configs?.find((chain) => chain.chainId === chainId)\n\n            const isChainSelected = safeAddresses.every((address) => {\n              return selectedSafes[chainId]?.includes(address)\n            })\n\n            const onSelectChain = () => {\n              setSelectedSafes((prev) => {\n                return {\n                  ...prev,\n                  [chainId]: isChainSelected ? [] : safeAddresses,\n                }\n              })\n            }\n\n            return (\n              <Fragment key={chainId}>\n                <List>\n                  <ListItem disablePadding className={css.item}>\n                    <ListItemButton onClick={onSelectChain} dense>\n                      <ListItemIcon className={css.icon}>\n                        <Checkbox edge=\"start\" checked={isChainSelected} disableRipple />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={`${chain?.chainName} Safe Accounts`}\n                        primaryTypographyProps={{ variant: 'h5' }}\n                      />\n                    </ListItemButton>\n                  </ListItem>\n\n                  <List disablePadding className={css.item}>\n                    {safeAddresses.map((safeAddress) => {\n                      const isSafeSelected = selectedSafes[chainId]?.includes(safeAddress) ?? false\n\n                      const onSelectSafe = () => {\n                        setSelectedSafes((prev) => {\n                          return {\n                            ...prev,\n                            [chainId]: isSafeSelected\n                              ? prev[chainId]?.filter((addr) => !sameAddress(addr, safeAddress))\n                              : [...(prev[chainId] ?? []), safeAddress],\n                          }\n                        })\n                      }\n\n                      return (\n                        <ListItem disablePadding key={safeAddress}>\n                          <ListItemButton sx={{ pl: 7, py: 0.5 }} onClick={onSelectSafe} dense>\n                            <ListItemIcon className={css.icon}>\n                              <Checkbox edge=\"start\" checked={isSafeSelected} disableRipple />\n                            </ListItemIcon>\n                            <EthHashInfo\n                              avatarSize={36}\n                              prefix={chain?.shortName}\n                              key={safeAddress}\n                              address={safeAddress || ''}\n                              shortAddress={false}\n                              showName={true}\n                              chainId={chainId}\n                            />\n                          </ListItemButton>\n                        </ListItem>\n                      )\n                    })}\n                  </List>\n                </List>\n\n                {i !== arr.length - 1 ? <Divider /> : null}\n              </Fragment>\n            )\n          })}\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n","import { useState, useEffect } from 'react'\n\nexport const useIsMac = (): boolean => {\n  const [isMac, setIsMac] = useState(false)\n\n  useEffect(() => {\n    if (typeof navigator !== 'undefined') {\n      setIsMac(navigator.userAgent.includes('Mac'))\n    }\n  }, [])\n\n  return isMac\n}\n","import { useState, type ReactElement } from 'react'\nimport { Alert, Box, Button, Typography } from '@mui/material'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport CheckWalletWithPermission from '@/components/common/CheckWalletWithPermission'\nimport { useNotificationsRenewal } from '@/components/settings/PushNotifications/hooks/useNotificationsRenewal'\nimport { useIsNotificationsRenewalEnabled } from '@/components/settings/PushNotifications/hooks/useNotificationsTokenVersion'\nimport { RENEWAL_MESSAGE } from '@/components/settings/PushNotifications/constants'\nimport { Permission } from '@/permissions/config'\n\nconst NotificationRenewal = (): ReactElement => {\n  const { safe } = useSafeInfo()\n  const [isRegistering, setIsRegistering] = useState(false)\n  const { renewNotifications, needsRenewal } = useNotificationsRenewal()\n  const isNotificationsRenewalEnabled = useIsNotificationsRenewalEnabled()\n\n  if (!needsRenewal || !isNotificationsRenewalEnabled) {\n    // No need to renew any Safe's notifications\n    return <></>\n  }\n\n  const handeSignClick = async () => {\n    setIsRegistering(true)\n    await renewNotifications()\n    setIsRegistering(false)\n  }\n\n  return (\n    <>\n      <Alert severity=\"warning\">\n        <Typography variant=\"body2\" fontWeight={700} mb={1}>\n          Signature needed\n        </Typography>\n        <Typography variant=\"body2\">{RENEWAL_MESSAGE}</Typography>\n      </Alert>\n      <Box>\n        <CheckWalletWithPermission\n          permission={Permission.EnablePushNotifications}\n          checkNetwork={!isRegistering && safe.deployed}\n        >\n          {(isOk) => (\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ width: '200px' }}\n              onClick={handeSignClick}\n              disabled={!isOk || isRegistering || !safe.deployed}\n            >\n              Sign now\n            </Button>\n          )}\n        </CheckWalletWithPermission>\n      </Box>\n    </>\n  )\n}\n\nexport default NotificationRenewal\n","import {\n  Grid,\n  Paper,\n  Typography,\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  Alert,\n  Switch,\n  Divider,\n  Link as MuiLink,\n  useMediaQuery,\n  useTheme,\n} from '@mui/material'\nimport Link from 'next/link'\nimport { useState } from 'react'\nimport type { ReactElement } from 'react'\n\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { WebhookType } from '@/service-workers/firebase-messaging/webhook-types'\nimport { useNotificationRegistrations } from './hooks/useNotificationRegistrations'\nimport { useNotificationPreferences } from './hooks/useNotificationPreferences'\nimport { GlobalPushNotifications } from './GlobalPushNotifications'\nimport useIsSafeOwner from '@/hooks/useIsSafeOwner'\nimport { HelpCenterArticle, IS_DEV } from '@/config/constants'\nimport { trackEvent } from '@/services/analytics'\nimport { PUSH_NOTIFICATION_EVENTS } from '@/services/analytics/events/push-notifications'\nimport { AppRoutes } from '@/config/routes'\nimport CheckWalletWithPermission from '@/components/common/CheckWalletWithPermission'\nimport { useIsMac } from '@/hooks/useIsMac'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport { Permission } from '@/permissions/config'\n\nimport css from './styles.module.css'\nimport NetworkWarning from '@/components/new-safe/create/NetworkWarning'\nimport NotificationRenewal from '@/components/notification-center/NotificationRenewal'\n\nexport const PushNotifications = (): ReactElement => {\n  const { safe, safeLoaded } = useSafeInfo()\n  const isOwner = useIsSafeOwner()\n  const isMac = useIsMac()\n  const [isRegistering, setIsRegistering] = useState(false)\n  const [isUpdatingIndexedDb, setIsUpdatingIndexedDb] = useState(false)\n  const theme = useTheme()\n  const isLargeScreen = useMediaQuery(theme.breakpoints.up('lg'))\n\n  const { updatePreferences, getPreferences, getAllPreferences } = useNotificationPreferences()\n  const { unregisterSafeNotifications, unregisterDeviceNotifications, registerNotifications } =\n    useNotificationRegistrations()\n\n  const preferences = getPreferences(safe.chainId, safe.address.value)\n\n  const setPreferences = (newPreferences: NonNullable<ReturnType<typeof getPreferences>>) => {\n    setIsUpdatingIndexedDb(true)\n\n    updatePreferences(safe.chainId, safe.address.value, newPreferences)\n\n    setIsUpdatingIndexedDb(false)\n  }\n\n  const shouldShowMacHelper = isMac || IS_DEV\n\n  const handleOnChange = async () => {\n    setIsRegistering(true)\n\n    if (!preferences) {\n      await registerNotifications({ [safe.chainId]: [safe.address.value] })\n      trackEvent(PUSH_NOTIFICATION_EVENTS.ENABLE_SAFE)\n      setIsRegistering(false)\n      return\n    }\n\n    const allPreferences = getAllPreferences()\n    const totalRegisteredSafesOnChain = allPreferences\n      ? Object.values(allPreferences).filter(({ chainId }) => chainId === safe.chainId).length\n      : 0\n    const shouldUnregisterDevice = totalRegisteredSafesOnChain === 1\n\n    if (shouldUnregisterDevice) {\n      await unregisterDeviceNotifications(safe.chainId)\n    } else {\n      await unregisterSafeNotifications(safe.chainId, safe.address.value)\n    }\n\n    trackEvent(PUSH_NOTIFICATION_EVENTS.DISABLE_SAFE)\n    setIsRegistering(false)\n  }\n\n  return (\n    <>\n      <Paper sx={{ p: 4, mb: 2 }}>\n        <Grid container spacing={3}>\n          <Grid item sm={4} xs={12}>\n            <Typography\n              variant=\"h4\"\n              sx={{\n                fontWeight: 700,\n              }}\n            >\n              Push notifications\n            </Typography>\n          </Grid>\n\n          <Grid item xs>\n            <Grid\n              container\n              sx={{\n                gap: 2.5,\n                flexDirection: 'column',\n              }}\n            >\n              <NotificationRenewal />\n\n              <Typography>\n                Enable push notifications for {safeLoaded ? 'this Safe Account' : 'your Safe Accounts'} in your browser\n                with your signature. You will need to enable them again if you clear your browser cache. Learn more\n                about push notifications <ExternalLink href={HelpCenterArticle.PUSH_NOTIFICATIONS}>here</ExternalLink>\n              </Typography>\n\n              {shouldShowMacHelper && (\n                <Alert severity=\"info\" className={css.macOsInfo}>\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      fontWeight: 700,\n                      mb: 1,\n                    }}\n                  >\n                    For macOS users\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    Double-check that you have enabled your browser notifications under <b>System Settings</b> &gt;{' '}\n                    <b>Notifications</b> &gt; <b>Application Notifications</b> (path may vary depending on OS version).\n                  </Typography>\n                </Alert>\n              )}\n\n              {safeLoaded ? (\n                <>\n                  <Divider />\n                  <NetworkWarning action=\"change your notification settings\" />\n\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <EthHashInfo\n                      address={safe.address.value}\n                      showCopyButton\n                      shortAddress={!isLargeScreen}\n                      showName={true}\n                      hasExplorer\n                    />\n                    <CheckWalletWithPermission\n                      permission={Permission.EnablePushNotifications}\n                      checkNetwork={!isRegistering && safe.deployed}\n                    >\n                      {(isOk) => (\n                        <FormControlLabel\n                          data-testid=\"notifications-switch\"\n                          control={<Switch checked={!!preferences} onChange={handleOnChange} />}\n                          label={preferences ? 'On' : 'Off'}\n                          disabled={!isOk || isRegistering || !safe.deployed}\n                        />\n                      )}\n                    </CheckWalletWithPermission>\n                  </div>\n\n                  <Paper className={css.globalInfo} variant=\"outlined\">\n                    <Typography variant=\"body2\">\n                      Want to setup notifications for different or all Safe Accounts? You can do so in your{' '}\n                      <Link href={AppRoutes.settings.notifications} passHref legacyBehavior>\n                        <MuiLink>global preferences</MuiLink>\n                      </Link>\n                      .\n                    </Typography>\n                  </Paper>\n                </>\n              ) : (\n                <GlobalPushNotifications />\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n      {preferences && (\n        <Paper sx={{ p: 4 }}>\n          <Grid container spacing={3}>\n            <Grid item sm={4} xs={12}>\n              <Typography\n                variant=\"h4\"\n                sx={{\n                  fontWeight: 700,\n                }}\n              >\n                Notification\n              </Typography>\n            </Grid>\n\n            <Grid item xs>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={preferences[WebhookType.INCOMING_ETHER] && preferences[WebhookType.INCOMING_TOKEN]}\n                      disabled={isUpdatingIndexedDb}\n                      onChange={(_, checked) => {\n                        setPreferences({\n                          ...preferences,\n                          [WebhookType.INCOMING_ETHER]: checked,\n                          [WebhookType.INCOMING_TOKEN]: checked,\n                        })\n\n                        trackEvent({ ...PUSH_NOTIFICATION_EVENTS.TOGGLE_INCOMING_TXS, label: checked })\n                      }}\n                    />\n                  }\n                  label=\"Incoming transactions\"\n                />\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={\n                        preferences[WebhookType.MODULE_TRANSACTION] &&\n                        preferences[WebhookType.EXECUTED_MULTISIG_TRANSACTION]\n                      }\n                      disabled={isUpdatingIndexedDb}\n                      onChange={(_, checked) => {\n                        setPreferences({\n                          ...preferences,\n                          [WebhookType.MODULE_TRANSACTION]: checked,\n                          [WebhookType.EXECUTED_MULTISIG_TRANSACTION]: checked,\n                        })\n\n                        trackEvent({ ...PUSH_NOTIFICATION_EVENTS.TOGGLE_OUTGOING_TXS, label: checked })\n                      }}\n                    />\n                  }\n                  label=\"Outgoing transactions\"\n                />\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={preferences[WebhookType.CONFIRMATION_REQUEST]}\n                      disabled={isUpdatingIndexedDb}\n                      onChange={(_, checked) => {\n                        const updateConfirmationRequestPreferences = () => {\n                          setPreferences({\n                            ...preferences,\n                            [WebhookType.CONFIRMATION_REQUEST]: checked,\n                          })\n\n                          trackEvent({ ...PUSH_NOTIFICATION_EVENTS.TOGGLE_CONFIRMATION_REQUEST, label: checked })\n                        }\n\n                        if (checked) {\n                          registerNotifications({\n                            [safe.chainId]: [safe.address.value],\n                          })\n                            .then((registered) => {\n                              if (registered) {\n                                updateConfirmationRequestPreferences()\n                              }\n                            })\n                            .catch(() => null)\n                        } else {\n                          updateConfirmationRequestPreferences()\n                        }\n                      }}\n                    />\n                  }\n                  label={\n                    <>\n                      <Typography>Confirmation requests</Typography>\n                      {!preferences[WebhookType.CONFIRMATION_REQUEST] && (\n                        <Typography\n                          variant=\"body2\"\n                          sx={{\n                            color: 'text.secondary',\n                          }}\n                        >\n                          {isOwner ? 'Requires your signature' : 'Only signers'}\n                        </Typography>\n                      )}\n                    </>\n                  }\n                  disabled={!isOwner || !preferences}\n                />\n              </FormGroup>\n            </Grid>\n          </Grid>\n        </Paper>\n      )}\n    </>\n  )\n}\n","import Head from 'next/head'\nimport type { NextPage } from 'next'\n\nimport SettingsHeader from '@/components/settings/SettingsHeader'\nimport { PushNotifications } from '@/components/settings/PushNotifications'\nimport { useHasFeature } from '@/hooks/useChains'\nimport { FEATURES } from '@/utils/chains'\nimport { BRAND_NAME } from '@/config/constants'\n\nconst NotificationsPage: NextPage = () => {\n  const isNotificationFeatureEnabled = useHasFeature(FEATURES.PUSH_NOTIFICATIONS)\n\n  if (!isNotificationFeatureEnabled) {\n    return null\n  }\n\n  return (\n    <>\n      <Head>\n        <title>{`${BRAND_NAME} – Settings – Notifications`}</title>\n      </Head>\n\n      <SettingsHeader />\n\n      <main>\n        <PushNotifications />\n      </main>\n    </>\n  )\n}\n\nexport default NotificationsPage\n","import type { SpendingLimitState } from '@/store/spendingLimitsSlice'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport type { TokenInfo } from '@safe-global/safe-gateway-typescript-sdk'\n\nexport enum Role {\n  Owner = 'Owner',\n  NestedOwner = 'NestedOwner',\n  Proposer = 'Proposer',\n  Executioner = 'Executioner',\n  ModuleRole = 'ModuleRole',\n  Recoverer = 'Recoverer',\n  SpendingLimitBeneficiary = 'SpendingLimitBeneficiary',\n  NoWalletConnected = 'NoWalletConnected',\n}\n\nexport enum Permission {\n  CreateTransaction = 'CreateTransaction',\n  ProposeTransaction = 'ProposeTransaction',\n  SignTransaction = 'SignTransaction',\n  ExecuteTransaction = 'ExecuteTransaction',\n  CreateSpendingLimitTransaction = 'CreateSpendingLimitTransaction',\n  EnablePushNotifications = 'EnablePushNotifications',\n}\n\n/**\n * RolePropsMap defines property types for specific roles.\n * The props are used to specify conditional permission values for the respective role.\n */\nexport type RolePropsMap = {\n  [Role.SpendingLimitBeneficiary]: {\n    spendingLimits: SpendingLimitState[]\n  }\n}\n\n// Extract the props for a specific role from RolePropsMap\nexport type RoleProps<R extends Role> = R extends keyof RolePropsMap ? RolePropsMap[R] : undefined\n\n/**\n * PermissionPropsMap defines property types for specific permissions.\n * The props are used as inputs to evaluate permission functions.\n */\nexport type PermissionPropsMap = {\n  [Permission.ExecuteTransaction]: { safeTx: SafeTransaction }\n  [Permission.CreateSpendingLimitTransaction]: { token?: TokenInfo } | undefined\n}\n\n// Extract the props for a specific permission from PermissionPropsMap\nexport type PermissionProps<P extends Permission> = P extends keyof PermissionPropsMap\n  ? PermissionPropsMap[P]\n  : undefined\n\n// Define the type for a permission function that evaluates to a boolean\ntype PermissionFn<P extends Permission> =\n  PermissionProps<P> extends undefined ? undefined : (args: PermissionProps<P>) => boolean\n\n// Define the type for a permission set that maps permissions to their values\nexport type PermissionSet = {\n  [P in Permission]?: PermissionFn<P> extends undefined ? boolean : PermissionFn<P>\n}\n\nexport type RolePermissionsFn<R extends Role> =\n  RoleProps<R> extends undefined ? () => PermissionSet : (props: RoleProps<R>) => PermissionSet\n\ntype RolePermissionsConfig = {\n  [R in Role]?: RolePermissionsFn<R>\n}\n\n/**\n * Defines the permissions for each role.\n */\nexport default <RolePermissionsConfig>{\n  [Role.Owner]: () => ({\n    [Permission.CreateTransaction]: true,\n    [Permission.ProposeTransaction]: true,\n    [Permission.SignTransaction]: true,\n    [Permission.ExecuteTransaction]: () => true,\n    [Permission.EnablePushNotifications]: true,\n  }),\n  [Role.Proposer]: () => ({\n    [Permission.CreateTransaction]: true,\n    [Permission.ProposeTransaction]: true,\n    [Permission.ExecuteTransaction]: () => true,\n    [Permission.EnablePushNotifications]: true,\n  }),\n  [Role.Executioner]: () => ({\n    [Permission.ExecuteTransaction]: () => true,\n    [Permission.EnablePushNotifications]: true,\n  }),\n  [Role.SpendingLimitBeneficiary]: ({ spendingLimits }) => ({\n    [Permission.ExecuteTransaction]: () => true,\n    [Permission.EnablePushNotifications]: true,\n    [Permission.CreateSpendingLimitTransaction]: ({ token } = {}) => {\n      if (!token) return false\n\n      const spendingLimit = spendingLimits.find((sl) => sl.token.address === token.address)\n\n      if (spendingLimit) {\n        return BigInt(spendingLimit.amount) - BigInt(spendingLimit.spent) > 0\n      }\n\n      return false\n    },\n  }),\n  [Role.NoWalletConnected]: () => ({\n    [Permission.EnablePushNotifications]: false,\n  }),\n}\n","import { useMemo } from 'react'\nimport useIsSafeOwner from '@/hooks/useIsSafeOwner'\nimport { useIsWalletProposer } from '@/hooks/useProposers'\nimport { useIsRecoverer } from '@/features/recovery/hooks/useIsRecoverer'\nimport { useIsSpendingLimitBeneficiary } from '@/hooks/useIsOnlySpendingLimitBeneficiary'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { Role } from '../config'\nimport { useIsNestedSafeOwner } from '@/hooks/useIsNestedSafeOwner'\n\n/**\n * Hook to get the roles that the current user has based on the Safe and the connected wallet.\n * @returns Array with the roles that the current user has.\n */\nexport const useRoles = (): Role[] => {\n  const wallet = useWallet()\n  const isOwner = useIsSafeOwner()\n  const isNestedSafeOwner = useIsNestedSafeOwner()\n  const isProposer = useIsWalletProposer()\n  const isRecoverer = useIsRecoverer()\n  const isSpendingLimitBeneficiary = useIsSpendingLimitBeneficiary()\n\n  // Map of roles and whether they are applicable to the current user\n  const roleApplicableMap: Record<Role, boolean> = useMemo(\n    () => ({\n      [Role.Owner]: isOwner,\n      [Role.NestedOwner]: !!isNestedSafeOwner,\n      [Role.Proposer]: !!isProposer,\n      [Role.Recoverer]: isRecoverer,\n      [Role.SpendingLimitBeneficiary]: isSpendingLimitBeneficiary,\n      [Role.Executioner]: !!wallet,\n      [Role.NoWalletConnected]: !wallet,\n      [Role.ModuleRole]: false, // TODO: Implement module role\n    }),\n    [isOwner, isNestedSafeOwner, isProposer, isRecoverer, isSpendingLimitBeneficiary, wallet],\n  )\n\n  const roles = useMemo(\n    () =>\n      (Object.entries(roleApplicableMap) as [[Role, boolean]]).reduce<Role[]>(\n        (acc, [role, isApplicable]) => (isApplicable ? [...acc, role] : acc),\n        [],\n      ),\n    [roleApplicableMap],\n  )\n\n  return roles\n}\n","import { useSelector } from 'react-redux'\nimport { selectSpendingLimits } from '@/store/spendingLimitsSlice'\nimport { type RolePropsMap, Role } from '../config'\n\n/**\n * Hook to get the props for each role based on the current state of the application.\n * @returns Object with the props per role.\n */\nexport const useRoleProps = (): RolePropsMap => {\n  const spendingLimits = useSelector(selectSpendingLimits)\n\n  return {\n    [Role.SpendingLimitBeneficiary]: { spendingLimits },\n  }\n}\n","import rolePermissionConfig from './config'\nimport type { PermissionSet, Role, RoleProps } from './config'\n\n/**\n * Get the PermissionSet for multiple roles with the given role props object.\n * @param roles Roles to get permissions for\n * @param props Object with specific parameters for the roles\n * @returns Object with PermissionSet for each of the give roles that has permissions defined\n */\nexport const getRolePermissions = <R extends Role>(roles: R[], props: { [K in R]?: RoleProps<K> }) =>\n  roles.reduce<{ [_K in R]?: PermissionSet }>((acc, role) => {\n    const rolePermissionsFn = rolePermissionConfig[role]\n\n    if (!rolePermissionsFn) {\n      return acc\n    }\n\n    return { ...acc, [role]: rolePermissionsFn(props[role] as RoleProps<R>) }\n  }, {})\n","import { useMemo } from 'react'\nimport { useRoles } from './useRoles'\nimport { useRoleProps } from './useRoleProps'\nimport { getRolePermissions } from '../getRolePermissions'\nimport type { Permission, Role, PermissionProps } from '../config'\n\n/**\n * Hook to get the result of a permission check for the current user based on the Safe and the connected wallet.\n * @param permission Permission to check.\n * @param props Specific props to pass to the permission function (only required if configured for the permission).\n * @returns Object with the result of the permission check for each role that the user has.\n */\nexport const usePermission = <P extends Permission>(\n  permission: P,\n  ...[props]: PermissionProps<P> extends undefined ? [] : [props: PermissionProps<P>]\n): { [_R in Role]?: boolean } => {\n  const userRoles = useRoles()\n  const roleProps = useRoleProps()\n\n  const userPermissions = useMemo(() => {\n    return getRolePermissions(userRoles, roleProps)\n  }, [userRoles, roleProps])\n\n  const permissionPerRole = useMemo(() => {\n    return Object.entries(userPermissions).reduce((acc, [role, permissions]) => {\n      const permissionValue = permissions?.[permission]\n\n      if (permissionValue === undefined) {\n        // No permission defined for the role\n        return acc\n      }\n\n      if (typeof permissionValue === 'function') {\n        // Evaluate the permission function with the given props\n        return { ...acc, [role]: permissionValue(props as PermissionProps<P>) }\n      }\n\n      // Return the permission value (boolean) as is\n      return { ...acc, [role]: permissionValue }\n    }, {})\n  }, [userPermissions, permission, props])\n\n  return permissionPerRole\n}\n","import type { Permission, PermissionProps } from '../config'\nimport { usePermission } from './usePermission'\n\n/**\n * Hook to check if the current user has a specific permission.\n * @param permission Permission to check.\n * @param props Specific props to pass to the permission function (only required if configured for the permission).\n * @returns Boolean indicating if the user has the permission.\n */\nexport const useHasPermission = <P extends Permission, Props extends PermissionProps<P> = PermissionProps<P>>(\n  permission: P,\n  ...props: Props extends undefined ? [] : [props: Props]\n): boolean => {\n  const permissions = usePermission(permission, ...props)\n\n  return Object.values(permissions).some((flag) => flag)\n}\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"styles_tabs__8AoqD\",\"tab\":\"styles_tab__WjqMe\",\"label\":\"styles_label__D53iN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__sGid8\",\"title\":\"styles_title___s0jt\",\"border\":\"styles_border__BkX1U\",\"pageHeader\":\"styles_pageHeader__fRL7d\",\"actionsWrapper\":\"styles_actionsWrapper__g_Tq2\",\"navWrapper\":\"styles_navWrapper__XNqgs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"macOsInfo\":\"styles_macOsInfo__6sd2_\",\"item\":\"styles_item__mbLQr\",\"icon\":\"styles_icon__CfCTp\",\"globalInfo\":\"styles_globalInfo__FTQds\"};"],"names":["tabs","NavTabs","router","useRouter","activeTab","Math","max","map","tab","href","indexOf","pathname","query","safe","undefined","Tabs","value","variant","allowScrollButtonsMobile","className","css","idx","Tab","component","NextLink","tabIndex","label","Typography","fontWeight","color","title","action","PageHeader","noBorder","Box","classNames","chain","useCurrentChain","NetworkWarning","isWrongChain","useIsWrongChain","Alert","severity","AlertTitle","sx","chainName","mt","ChainSwitcher","madProps","safeAddress","navItems","settingsNavItems","filter","route","isRouteEnabled","generalSettingsNavItems","div","useSafeAddress","useIsRecoverer","recovery","useRecovery","wallet","useWallet","Boolean","address","selectDelayModifierByRecoverer","Message","children","permission","CheckWalletWithPermission","permissionProps","noTooltip","checkNetwork","allowUndeployedSafe","connectWallet","useConnectWallet","sdk","useSafeSDK","hasPermission","useHasPermission","safeLoaded","useSafeInfo","isUndeployedSafe","deployed","message","useMemo","Tooltip","span","onClick","_filterUndeployedSafes","safes","undeployedSafes","pickBy","mapValues","safeAddresses","chainId","undeployedAddresses","Object","keys","difference","length","_transformAddedSafes","entries","addedSafes","reduce","acc","addedSafesOnChain","_transformCurrentSubscribedSafes","allPreferences","push","chains","notifiableSafes","find","_mergeNotifiableSafes","ownedSafes","currentSubscriptions","added","Array","from","Set","ownedSafesOnChain","addedAddress","includes","uniqueSafeAddresses","values","_areAllSafesSelected","selectedSafes","every","hasChain","hasEverySafe","_getTotalSignaturesRequired","currentNotifiedSafes","isNewChain","isNewSafe","some","_shouldRegisterSelectedSafes","_shouldUnregsiterSelectedSafes","_getSafesToRegister","safesToRegister","safesToRegisterOnChain","shouldRegister","safesToUnregister","safesToUnregisterOnChain","shouldUnregister","GlobalPushNotifications","useChains","useAppSelector","selectUndeployedSafes","isLoading","setIsLoading","useState","useAllOwnedSafes","selectAllAddedSafes","getAllPreferences","useNotificationPreferences","unregisterDeviceNotifications","unregisterSafeNotifications","registerNotifications","useNotificationRegistrations","safesForRenewal","useNotificationsRenewal","setSelectedSafes","useEffect","isMounted","deployedSafes","_sanitizeNotifiableSafes","configs","totalNotifiableSafes","_getTotalNotifiableSafes","isAllSelected","totalSignaturesRequired","canSave","onSave","requestNotificationPermission","registrationPromises","newlySelectedSafes","_getSafesToUnregister","unregistrationPromises","flatMap","Promise","all","trackEvent","PUSH_NOTIFICATION_EVENTS","SAVE_SETTINGS","palette","primary","light","Grid","container","item","xs","display","alignItems","justifyContent","mb","mr","textAlign","maybePlural","Permission","EnablePushNotifications","Button","disabled","isOk","CircularProgress","size","Paper","border","List","ListItem","disablePadding","ListItemButton","onSelectAll","dense","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primaryTypographyProps","Divider","i","arr","isChainSelected","Fragment","onSelectChain","prev","isSafeSelected","pl","py","onSelectSafe","sameAddress","addr","EthHashInfo","avatarSize","prefix","shortName","shortAddress","showName","useIsMac","isMac","setIsMac","navigator","userAgent","isRegistering","setIsRegistering","NotificationRenewal","renewNotifications","needsRenewal","isNotificationsRenewalEnabled","useIsNotificationsRenewalEnabled","handeSignClick","RENEWAL_MESSAGE","width","PushNotifications","isOwner","useIsSafeOwner","isUpdatingIndexedDb","setIsUpdatingIndexedDb","theme","useTheme","isLargeScreen","useMediaQuery","breakpoints","up","updatePreferences","getPreferences","preferences","setPreferences","newPreferences","shouldShowMacHelper","IS_DEV","handleOnChange","ENABLE_SAFE","totalRegisteredSafesOnChain","DISABLE_SAFE","p","spacing","sm","gap","flexDirection","ExternalLink","HelpCenterArticle","PUSH_NOTIFICATIONS","b","style","showCopyButton","hasExplorer","FormControlLabel","data-testid","control","Switch","onChange","Link","AppRoutes","notifications","passHref","legacyBehavior","MuiLink","FormGroup","WebhookType","INCOMING_ETHER","INCOMING_TOKEN","_","TOGGLE_INCOMING_TXS","MODULE_TRANSACTION","EXECUTED_MULTISIG_TRANSACTION","TOGGLE_OUTGOING_TXS","CONFIRMATION_REQUEST","updateConfirmationRequestPreferences","TOGGLE_CONFIRMATION_REQUEST","then","registered","catch","useHasFeature","FEATURES","NotificationsPage","Head","BRAND_NAME","SettingsHeader","main","Role","spendingLimits","token","spendingLimit","sl","BigInt","amount","spent","useRoles","isNestedSafeOwner","useIsNestedSafeOwner","isProposer","useIsWalletProposer","isRecoverer","isSpendingLimitBeneficiary","useIsSpendingLimitBeneficiary","roleApplicableMap","Owner","NestedOwner","Proposer","Recoverer","SpendingLimitBeneficiary","Executioner","NoWalletConnected","ModuleRole","role","isApplicable","useRoleProps","useSelector","selectSpendingLimits","roles","props","rolePermissionsFn","rolePermissionConfig","userRoles","roleProps","userPermissions","getRolePermissions","permissions","permissionValue","usePermission","flag","SetCache","require","arrayIncludes","arrayIncludesWith","arrayMap","baseUnary","cacheHas","exports","baseDifference","array","iteratee","comparator","index","isCommon","result","valuesLength","LARGE_ARRAY_SIZE","outer","computed","valuesIndex","arrayPush","isFlattenable","module","baseFlatten","depth","predicate","isStrict","Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","baseRest","isArrayLikeObject","baseAssignValue","baseForOwn","baseIteratee","object","key"],"sourceRoot":"","ignoreList":[19,20,21,22,23]}