{"version":3,"file":"static/chunks/pages/settings/environment-variables-3a25e9e3784d5b1b.js","mappings":"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","sources":["webpack://_N_E/?c06c","webpack://_N_E/./node_modules/@mui/icons-material/esm/RotateLeft.js","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/NavTabs/index.tsx","webpack://_N_E/./src/components/common/PageHeader/index.tsx","webpack://_N_E/./src/components/settings/SettingsHeader/index.tsx","webpack://_N_E/./src/components/settings/EnvironmentVariables/index.tsx","webpack://_N_E/./src/pages/settings/environment-variables.tsx","webpack://_N_E/./src/components/common/NavTabs/styles.module.css","webpack://_N_E/./src/components/common/PageHeader/styles.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/settings/environment-variables\",\n      function () {\n        return require(\"private-next-pages/settings/environment-variables.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/settings/environment-variables\"])\n      });\n    }\n  ","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M7.11 8.53 5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47M6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47m1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93\"\n}), 'RotateLeft');","export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import React from 'react'\nimport NextLink from 'next/link'\nimport { Tab, Tabs, Typography } from '@mui/material'\nimport { useRouter } from 'next/router'\nimport type { NavItem } from '@/components/sidebar/SidebarNavigation/config'\nimport css from './styles.module.css'\n\nconst NavTabs = ({ tabs }: { tabs: NavItem[] }) => {\n  const router = useRouter()\n  const activeTab = Math.max(0, tabs.map((tab) => tab.href).indexOf(router.pathname))\n  const query = router.query.safe ? { safe: router.query.safe } : undefined\n\n  return (\n    <Tabs value={activeTab} variant=\"scrollable\" allowScrollButtonsMobile className={css.tabs}>\n      {tabs.map((tab, idx) => (\n        <Tab\n          key={tab.href}\n          href={{ pathname: tab.href, query }}\n          component={NextLink}\n          tabIndex={0}\n          className={css.tab}\n          label={\n            <Typography\n              variant=\"body2\"\n              fontWeight={700}\n              color={activeTab === idx ? 'primary' : 'primary.light'}\n              className={css.label}\n            >\n              {tab.label}\n            </Typography>\n          }\n        />\n      ))}\n    </Tabs>\n  )\n}\n\nexport default NavTabs\n","import { Box, Typography } from '@mui/material'\nimport classNames from 'classnames'\n\nimport type { ReactElement } from 'react'\n\nimport css from './styles.module.css'\n\nconst PageHeader = ({\n  title,\n  action,\n  noBorder,\n}: {\n  title: string\n  action?: ReactElement\n  noBorder?: boolean\n}): ReactElement => {\n  return (\n    <Box className={classNames(css.container, { [css.border]: !noBorder })}>\n      <Typography variant=\"h3\" className={css.title}>\n        {title}\n      </Typography>\n      {action}\n    </Box>\n  )\n}\n\nexport default PageHeader\n","import type { ReactElement } from 'react'\n\nimport NavTabs from '@/components/common/NavTabs'\nimport PageHeader from '@/components/common/PageHeader'\nimport { generalSettingsNavItems, settingsNavItems } from '@/components/sidebar/SidebarNavigation/config'\nimport css from '@/components/common/PageHeader/styles.module.css'\nimport useSafeAddress from '@/hooks/useSafeAddress'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { isRouteEnabled } from '@/utils/chains'\nimport madProps from '@/utils/mad-props'\n\nexport const SettingsHeader = ({\n  safeAddress,\n  chain,\n}: {\n  safeAddress: ReturnType<typeof useSafeAddress>\n  chain: ReturnType<typeof useCurrentChain>\n}): ReactElement => {\n  const navItems = safeAddress\n    ? settingsNavItems.filter((route) => isRouteEnabled(route.href, chain))\n    : generalSettingsNavItems\n\n  return (\n    <PageHeader\n      title={safeAddress ? 'Settings' : 'Preferences'}\n      action={\n        <div className={css.navWrapper}>\n          <NavTabs tabs={navItems} />\n        </div>\n      }\n    />\n  )\n}\n\nexport default madProps(SettingsHeader, {\n  safeAddress: useSafeAddress,\n  chain: useCurrentChain,\n})\n","import { useForm, FormProvider } from 'react-hook-form'\nimport { Paper, Grid, Typography, TextField, Button, Tooltip, IconButton, SvgIcon } from '@mui/material'\nimport InputAdornment from '@mui/material/InputAdornment'\nimport RotateLeftIcon from '@mui/icons-material/RotateLeft'\nimport { useAppDispatch, useAppSelector } from '@/store'\nimport { selectSettings, setRpc, setTenderly } from '@/store/settingsSlice'\nimport { TENDERLY_SIMULATE_ENDPOINT_URL } from '@/config/constants'\nimport useChainId from '@/hooks/useChainId'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { SETTINGS_EVENTS, trackEvent } from '@/services/analytics'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport ExternalLink from '@/components/common/ExternalLink'\n\nexport enum EnvVariablesField {\n  rpc = 'rpc',\n  tenderlyURL = 'tenderlyURL',\n  tenderlyToken = 'tenderlyToken',\n}\n\nexport type EnvVariablesFormData = {\n  [EnvVariablesField.rpc]: string\n  [EnvVariablesField.tenderlyURL]: string\n  [EnvVariablesField.tenderlyToken]: string\n}\n\nconst EnvironmentVariables = () => {\n  const chainId = useChainId()\n  const chain = useCurrentChain()\n  const settings = useAppSelector(selectSettings)\n  const dispatch = useAppDispatch()\n\n  const formMethods = useForm<EnvVariablesFormData>({\n    mode: 'onChange',\n    values: {\n      [EnvVariablesField.rpc]: settings.env?.rpc[chainId] ?? '',\n      [EnvVariablesField.tenderlyURL]: settings.env?.tenderly.url ?? '',\n      [EnvVariablesField.tenderlyToken]: settings.env?.tenderly.accessToken ?? '',\n    },\n  })\n\n  const { register, handleSubmit, setValue, watch } = formMethods\n\n  const rpc = watch(EnvVariablesField.rpc)\n  const tenderlyURL = watch(EnvVariablesField.tenderlyURL)\n  const tenderlyToken = watch(EnvVariablesField.tenderlyToken)\n\n  const onSubmit = handleSubmit((data) => {\n    trackEvent({ ...SETTINGS_EVENTS.ENV_VARIABLES.SAVE })\n\n    dispatch(\n      setRpc({\n        chainId,\n        rpc: data[EnvVariablesField.rpc],\n      }),\n    )\n\n    dispatch(\n      setTenderly({\n        url: data[EnvVariablesField.tenderlyURL],\n        accessToken: data[EnvVariablesField.tenderlyToken],\n      }),\n    )\n\n    location.reload()\n  })\n\n  const onReset = (name: EnvVariablesField) => {\n    setValue(name, '')\n  }\n\n  return (\n    <Paper sx={{ padding: 4 }}>\n      <Grid\n        container\n        direction=\"row\"\n        spacing={3}\n        sx={{\n          justifyContent: 'space-between',\n          mb: 2,\n        }}\n      >\n        <Grid item lg={4} xs={12}>\n          <Typography\n            variant=\"h4\"\n            sx={{\n              fontWeight: 700,\n            }}\n          >\n            Environment variables\n          </Typography>\n        </Grid>\n\n        <Grid item xs>\n          <Typography\n            sx={{\n              mb: 3,\n            }}\n          >\n            You can override some of our default APIs here in case you need to. Proceed at your own risk.\n          </Typography>\n\n          <FormProvider {...formMethods}>\n            <form onSubmit={onSubmit}>\n              <Typography\n                sx={{\n                  fontWeight: 700,\n                  mb: 2,\n                  mt: 3,\n                }}\n              >\n                RPC provider\n                <Tooltip\n                  placement=\"top\"\n                  arrow\n                  title=\"Any provider that implements the Ethereum JSON-RPC standard can be used.\"\n                >\n                  <span>\n                    <SvgIcon\n                      component={InfoIcon}\n                      inheritViewBox\n                      fontSize=\"small\"\n                      color=\"border\"\n                      sx={{ verticalAlign: 'middle', ml: 0.5 }}\n                    />\n                  </span>\n                </Tooltip>\n              </Typography>\n\n              <TextField\n                {...register(EnvVariablesField.rpc)}\n                variant=\"outlined\"\n                type=\"url\"\n                placeholder={chain?.rpcUri.value}\n                InputProps={{\n                  endAdornment: rpc ? (\n                    <InputAdornment position=\"end\">\n                      <Tooltip title=\"Reset to default value\">\n                        <IconButton onClick={() => onReset(EnvVariablesField.rpc)} size=\"small\" color=\"primary\">\n                          <RotateLeftIcon />\n                        </IconButton>\n                      </Tooltip>\n                    </InputAdornment>\n                  ) : null,\n                }}\n                fullWidth\n              />\n\n              <Typography\n                sx={{\n                  fontWeight: 700,\n                  mb: 2,\n                  mt: 3,\n                }}\n              >\n                Tenderly\n                <Tooltip\n                  placement=\"top\"\n                  arrow\n                  title={\n                    <>\n                      You can use your own Tenderly project to keep track of all your transaction simulations.{' '}\n                      <ExternalLink\n                        color=\"secondary\"\n                        href=\"https://docs.tenderly.co/simulations-and-forks/simulation-api/configuration-of-api-access\"\n                      >\n                        Read more\n                      </ExternalLink>\n                    </>\n                  }\n                >\n                  <span>\n                    <SvgIcon\n                      component={InfoIcon}\n                      inheritViewBox\n                      fontSize=\"small\"\n                      color=\"border\"\n                      sx={{ verticalAlign: 'middle', ml: 0.5 }}\n                    />\n                  </span>\n                </Tooltip>\n              </Typography>\n\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    {...register(EnvVariablesField.tenderlyURL)}\n                    type=\"url\"\n                    variant=\"outlined\"\n                    label=\"Tenderly API URL\"\n                    placeholder={TENDERLY_SIMULATE_ENDPOINT_URL}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    InputProps={{\n                      endAdornment: tenderlyURL ? (\n                        <InputAdornment position=\"end\">\n                          <Tooltip title=\"Reset to default value\">\n                            <IconButton\n                              onClick={() => onReset(EnvVariablesField.tenderlyURL)}\n                              size=\"small\"\n                              color=\"primary\"\n                            >\n                              <RotateLeftIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </InputAdornment>\n                      ) : null,\n                    }}\n                    fullWidth\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    {...register(EnvVariablesField.tenderlyToken)}\n                    variant=\"outlined\"\n                    label=\"Tenderly access token\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    InputProps={{\n                      endAdornment: tenderlyToken ? (\n                        <InputAdornment position=\"end\">\n                          <Tooltip title=\"Reset to default value\">\n                            <IconButton\n                              onClick={() => onReset(EnvVariablesField.tenderlyToken)}\n                              size=\"small\"\n                              color=\"primary\"\n                            >\n                              <RotateLeftIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </InputAdornment>\n                      ) : null,\n                    }}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ mt: 2 }}>\n                Save\n              </Button>\n            </form>\n          </FormProvider>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nexport default EnvironmentVariables\n","import type { NextPage } from 'next'\nimport Head from 'next/head'\nimport SettingsHeader from '@/components/settings/SettingsHeader'\nimport EnvironmentVariables from '@/components/settings/EnvironmentVariables'\nimport { BRAND_NAME } from '@/config/constants'\n\nconst EnvironmentVariablesPage: NextPage = () => {\n  return (\n    <>\n      <Head>\n        <title>{`${BRAND_NAME} – Settings – Environment variables`}</title>\n      </Head>\n\n      <SettingsHeader />\n\n      <main>\n        <EnvironmentVariables />\n      </main>\n    </>\n  )\n}\n\nexport default EnvironmentVariablesPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"styles_tabs__8AoqD\",\"tab\":\"styles_tab__WjqMe\",\"label\":\"styles_label__D53iN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__sGid8\",\"title\":\"styles_title___s0jt\",\"border\":\"styles_border__BkX1U\",\"pageHeader\":\"styles_pageHeader__fRL7d\",\"actionsWrapper\":\"styles_actionsWrapper__g_Tq2\",\"navWrapper\":\"styles_navWrapper__XNqgs\"};"],"names":["createSvgIcon","_jsx","d","tabs","router","useRouter","activeTab","Math","max","map","tab","href","indexOf","pathname","query","safe","undefined","Tabs","value","variant","allowScrollButtonsMobile","className","css","idx","Tab","component","NextLink","tabIndex","label","Typography","fontWeight","color","title","action","PageHeader","noBorder","Box","classNames","madProps","safeAddress","chain","navItems","settingsNavItems","filter","isRouteEnabled","route","generalSettingsNavItems","div","NavTabs","useSafeAddress","useCurrentChain","settings","chainId","useChainId","EnvironmentVariables","useAppSelector","selectSettings","dispatch","useAppDispatch","formMethods","useForm","mode","values","env","rpc","tenderly","url","accessToken","register","handleSubmit","setValue","watch","tenderlyURL","tenderlyToken","onSubmit","trackEvent","SETTINGS_EVENTS","ENV_VARIABLES","SAVE","setRpc","data","setTenderly","location","reload","onReset","name","Paper","sx","padding","Grid","container","direction","spacing","justifyContent","mb","item","lg","xs","FormProvider","form","mt","Tooltip","placement","arrow","span","SvgIcon","InfoIcon","inheritViewBox","fontSize","verticalAlign","ml","TextField","type","placeholder","rpcUri","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","size","RotateLeftIcon","fullWidth","ExternalLink","md","TENDERLY_SIMULATE_ENDPOINT_URL","InputLabelProps","shrink","Button","EnvironmentVariablesPage","Head","BRAND_NAME","SettingsHeader","main"],"sourceRoot":"","ignoreList":[1]}