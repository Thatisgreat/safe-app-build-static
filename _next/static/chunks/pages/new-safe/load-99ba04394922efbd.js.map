{"version":3,"file":"static/chunks/pages/new-safe/load-99ba04394922efbd.js","mappings":"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","sources":["webpack://_N_E/?fcbe","webpack://_N_E/./node_modules/@mui/icons-material/esm/ArrowBack.js","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/AddressBookInput/index.tsx","webpack://_N_E/./src/components/new-safe/CardStepper/useCardStepper.ts","webpack://_N_E/./src/components/new-safe/CardStepper/index.tsx","webpack://_N_E/./src/components/new-safe/OwnerRow/index.tsx","webpack://_N_E/./src/components/new-safe/ReviewRow/index.tsx","webpack://_N_E/./src/components/new-safe/load/steps/SetAddressStep/index.tsx","webpack://_N_E/./src/components/new-safe/load/steps/SafeOwnerStep/index.tsx","webpack://_N_E/./src/components/new-safe/load/steps/SafeReviewStep/index.tsx","webpack://_N_E/./src/components/new-safe/load/index.tsx","webpack://_N_E/./src/pages/new-safe/load.tsx","webpack://_N_E/./src/components/common/AddressBookInput/styles.module.css","webpack://_N_E/./src/components/new-safe/CardStepper/styles.module.css","webpack://_N_E/./src/components/new-safe/OwnerRow/styles.module.css","webpack://_N_E/./src/components/new-safe/create/steps/ReviewStep/styles.module.css","webpack://_N_E/./src/components/new-safe/create/steps/SetNameStep/styles.module.css","webpack://_N_E/./src/components/new-safe/create/styles.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/new-safe/load\",\n      function () {\n        return require(\"private-next-pages/new-safe/load.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/new-safe/load\"])\n      });\n    }\n  ","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');","export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import { type ReactElement, useState, useMemo } from 'react'\nimport { Controller, useFormContext, useWatch } from 'react-hook-form'\nimport { SvgIcon, Typography } from '@mui/material'\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete'\nimport useAddressBook from '@/hooks/useAddressBook'\nimport AddressInput, { type AddressInputProps } from '../AddressInput'\nimport EthHashInfo from '../EthHashInfo'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport EntryDialog from '@/components/address-book/EntryDialog'\nimport css from './styles.module.css'\nimport inputCss from '@/styles/inputs.module.css'\nimport { isValidAddress } from '@/utils/validation'\nimport { sameAddress } from '@/utils/addresses'\n\nconst abFilterOptions = createFilterOptions({\n  stringify: (option: { label: string; name: string }) => option.name + ' ' + option.label,\n})\n\n/**\n *  Temporary component until revamped safe components are done\n */\nconst AddressBookInput = ({ name, canAdd, ...props }: AddressInputProps & { canAdd?: boolean }): ReactElement => {\n  const addressBook = useAddressBook()\n  const { setValue, control } = useFormContext()\n  const addressValue = useWatch({ name, control })\n  const [open, setOpen] = useState(false)\n  const [openAddressBook, setOpenAddressBook] = useState<boolean>(false)\n\n  const addressBookEntries = Object.entries(addressBook).map(([address, name]) => ({\n    label: address,\n    name,\n  }))\n\n  const hasVisibleOptions = useMemo(\n    () => !!addressBookEntries.filter((entry) => entry.label.includes(addressValue)).length,\n    [addressBookEntries, addressValue],\n  )\n\n  const isInAddressBook = useMemo(\n    () => addressBookEntries.some((entry) => sameAddress(entry.label, addressValue)),\n    [addressBookEntries, addressValue],\n  )\n\n  const customFilterOptions = (options: any, state: any) => {\n    // Don't show suggestions from the address book once a valid address has been entered.\n    if (isValidAddress(addressValue)) return []\n    return abFilterOptions(options, state)\n  }\n\n  const handleOpenAutocomplete = () => {\n    setOpen((value) => !value)\n  }\n\n  const onAddressBookClick = canAdd\n    ? () => {\n        setOpenAddressBook(true)\n      }\n    : undefined\n\n  return (\n    <>\n      <Controller\n        name={name}\n        control={control}\n        // eslint-disable-next-line\n        render={({ field: { ref, ...field } }) => (\n          <Autocomplete\n            {...field}\n            className={inputCss.input}\n            disableClearable\n            disabled={props.disabled}\n            readOnly={props.InputProps?.readOnly}\n            freeSolo\n            options={addressBookEntries}\n            onChange={(_, value) => (typeof value === 'string' ? field.onChange(value) : field.onChange(value.label))}\n            onInputChange={(_, value) => setValue(name, value)}\n            filterOptions={customFilterOptions}\n            componentsProps={{\n              paper: {\n                elevation: 2,\n              },\n            }}\n            renderOption={(props, option) => {\n              const { key, ...rest } = props\n              return (\n                <Typography data-testid=\"address-item\" component=\"li\" variant=\"body2\" {...rest} key={key}>\n                  <EthHashInfo address={option.label} name={option.name} shortAddress={false} copyAddress={false} />\n                </Typography>\n              )\n            }}\n            renderInput={(params) => (\n              <AddressInput\n                data-testid=\"address-item\"\n                {...params}\n                {...props}\n                focused={props.focused || !addressValue}\n                name={name}\n                onOpenListClick={hasVisibleOptions ? handleOpenAutocomplete : undefined}\n                isAutocompleteOpen={open}\n                onAddressBookClick={canAdd && !isInAddressBook ? onAddressBookClick : undefined}\n              />\n            )}\n          />\n        )}\n      />\n\n      {canAdd && !isInAddressBook ? (\n        <Typography variant=\"body2\" className={css.unknownAddress}>\n          <SvgIcon component={InfoIcon} fontSize=\"small\" />\n          <span>\n            This is an unknown address. You can{' '}\n            <a role=\"button\" onClick={onAddressBookClick}>\n              add it to your address book\n            </a>\n            .\n          </span>\n        </Typography>\n      ) : null}\n\n      {openAddressBook && (\n        <EntryDialog\n          handleClose={() => setOpenAddressBook(false)}\n          defaultValues={{ name: '', address: addressValue }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default AddressBookInput\n","import type { Dispatch, ReactElement, SetStateAction } from 'react'\nimport { useState } from 'react'\nimport { trackEvent, MODALS_CATEGORY } from '@/services/analytics'\n\nexport type StepRenderProps<TData> = {\n  data: TData\n  onSubmit: (data: Partial<TData>) => void\n  onBack: (data?: Partial<TData>) => void\n  setStep: (step: number) => void\n  setProgressColor?: Dispatch<SetStateAction<string>>\n  setStepData?: Dispatch<SetStateAction<TData>>\n}\n\ntype Step<TData> = {\n  title: string\n  subtitle: string\n  render: (\n    data: StepRenderProps<TData>['data'],\n    onSubmit: StepRenderProps<TData>['onSubmit'],\n    onBack: StepRenderProps<TData>['onBack'],\n    setStep: StepRenderProps<TData>['setStep'],\n    setProgressColor: StepRenderProps<TData>['setProgressColor'],\n    setStepData: StepRenderProps<TData>['setStepData'],\n  ) => ReactElement\n}\n\nexport type TxStepperProps<TData> = {\n  steps: Array<Step<TData>>\n  initialData: TData\n  initialStep?: number\n  eventCategory?: string\n  setWidgetStep?: (step: number | SetStateAction<number>) => void\n  onClose: () => void\n}\n\nexport const useCardStepper = <TData>({\n  steps,\n  initialData,\n  initialStep,\n  eventCategory = MODALS_CATEGORY,\n  onClose,\n  setWidgetStep,\n}: TxStepperProps<TData>) => {\n  const [activeStep, setActiveStep] = useState<number>(initialStep || 0)\n  const [stepData, setStepData] = useState(initialData)\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1)\n    setWidgetStep && setWidgetStep((prevActiveStep) => prevActiveStep + 1)\n    trackEvent({ category: eventCategory, action: lastStep ? 'Submit' : 'Next', label: activeStep })\n  }\n\n  const handleBack = (data?: Partial<TData>) => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\n    setWidgetStep && setWidgetStep((prevActiveStep) => prevActiveStep - 1)\n    trackEvent({ category: eventCategory, action: firstStep ? 'Cancel' : 'Back', label: activeStep })\n\n    if (data) {\n      setStepData((previous) => ({ ...previous, ...data }))\n    }\n  }\n\n  const setStep = (step: number) => {\n    setActiveStep(step)\n    setWidgetStep && setWidgetStep(step)\n  }\n\n  const firstStep = activeStep === 0\n  const lastStep = activeStep === steps.length - 1\n\n  const onBack = firstStep ? onClose : handleBack\n\n  const onSubmit = (data: Partial<TData>) => {\n    if (lastStep) {\n      onClose()\n      return\n    }\n    setStepData((previous) => ({ ...previous, ...data }))\n    handleNext()\n  }\n\n  return {\n    onBack,\n    onSubmit,\n    setStep,\n    activeStep,\n    stepData,\n    firstStep,\n    setStepData,\n  }\n}\n","import { useState } from 'react'\nimport { Box } from '@mui/system'\nimport lightPalette from '@/components/theme/lightPalette'\nimport css from './styles.module.css'\nimport { Card, LinearProgress, CardHeader, Avatar, Typography, CardContent } from '@mui/material'\nimport type { TxStepperProps } from './useCardStepper'\nimport { useCardStepper } from './useCardStepper'\n\nexport function CardStepper<StepperData>(props: TxStepperProps<StepperData>) {\n  const [progressColor, setProgressColor] = useState(lightPalette.secondary.main)\n  const { activeStep, onSubmit, onBack, stepData, setStep, setStepData } = useCardStepper<StepperData>(props)\n  const { steps } = props\n  const currentStep = steps[activeStep]\n  const progress = ((activeStep + 1) / steps.length) * 100\n\n  return (\n    <Card className={css.card}>\n      <Box className={css.progress} color={progressColor}>\n        <LinearProgress color=\"inherit\" variant=\"determinate\" value={Math.min(progress, 100)} />\n      </Box>\n      {currentStep.title && (\n        <CardHeader\n          title={currentStep.title}\n          subheader={currentStep.subtitle}\n          titleTypographyProps={{ variant: 'h4' }}\n          subheaderTypographyProps={{ variant: 'body2' }}\n          avatar={\n            <Avatar className={css.step}>\n              <Typography variant=\"body2\">{activeStep + 1}</Typography>\n            </Avatar>\n          }\n          className={css.header}\n        />\n      )}\n      <CardContent className={css.content}>\n        {currentStep.render(stepData, onSubmit, onBack, setStep, setProgressColor, setStepData)}\n      </CardContent>\n    </Card>\n  )\n}\n","import { useCallback, useEffect, useMemo } from 'react'\nimport { CircularProgress, FormControl, Grid, IconButton, SvgIcon, Typography } from '@mui/material'\nimport NameInput from '@/components/common/NameInput'\nimport InputAdornment from '@mui/material/InputAdornment'\nimport AddressBookInput from '@/components/common/AddressBookInput'\nimport DeleteIcon from '@/public/images/common/delete.svg'\nimport { useFormContext, useWatch } from 'react-hook-form'\nimport { useAddressResolver } from '@/hooks/useAddressResolver'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport type { NamedAddress } from '@/components/new-safe/create/types'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { sameAddress } from '@/utils/addresses'\nimport css from './styles.module.css'\nimport classNames from 'classnames'\n\nexport const OwnerRow = ({\n  index,\n  groupName,\n  removable = true,\n  remove,\n  readOnly = false,\n}: {\n  index: number\n  removable?: boolean\n  groupName: string\n  remove?: (index: number) => void\n  readOnly?: boolean\n}) => {\n  const wallet = useWallet()\n  const fieldName = `${groupName}.${index}`\n  const { control, getValues, setValue } = useFormContext()\n  const owners = useWatch({\n    control,\n    name: groupName,\n  })\n  const owner = useWatch({\n    control,\n    name: fieldName,\n  })\n\n  const deps = useMemo(() => {\n    return Array.from({ length: owners.length }, (_, i) => `${groupName}.${i}`)\n  }, [owners, groupName])\n\n  const validateSafeAddress = useCallback(\n    async (address: string) => {\n      const owners = getValues('owners')\n      if (owners.filter((owner: NamedAddress) => sameAddress(owner.address, address)).length > 1) {\n        return 'Signer is already added'\n      }\n    },\n    [getValues],\n  )\n\n  const { name, ens, resolving } = useAddressResolver(owner.address)\n\n  useEffect(() => {\n    if (name && !getValues(`${fieldName}.name`)) {\n      setValue(`${fieldName}.name`, name)\n    }\n  }, [setValue, getValues, name, fieldName])\n\n  useEffect(() => {\n    if (ens) {\n      setValue(`${fieldName}.ens`, ens)\n    }\n  }, [ens, setValue, fieldName])\n\n  const walletIsOwner = owner.address === wallet?.address\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      className={classNames({ [css.helper]: walletIsOwner })}\n      sx={{\n        alignItems: 'center',\n        marginBottom: 3,\n        flexWrap: ['wrap', undefined, 'nowrap'],\n      }}\n    >\n      <Grid item xs={12} md={readOnly ? 5 : 4}>\n        <FormControl fullWidth>\n          <NameInput\n            data-testid=\"owner-name\"\n            name={`${fieldName}.name`}\n            label=\"Signer name\"\n            InputLabelProps={{ shrink: true }}\n            placeholder={ens || `Signer ${index + 1}`}\n            helperText={walletIsOwner && 'Your connected wallet'}\n            InputProps={{\n              endAdornment: resolving ? (\n                <InputAdornment position=\"end\">\n                  <CircularProgress size={20} />\n                </InputAdornment>\n              ) : null,\n            }}\n          />\n        </FormControl>\n      </Grid>\n      <Grid item xs={11} md={7}>\n        {readOnly ? (\n          <Typography variant=\"body2\" component=\"div\">\n            <EthHashInfo address={owner.address} shortAddress hasExplorer showCopyButton />\n          </Typography>\n        ) : (\n          <FormControl fullWidth>\n            <AddressBookInput name={`${fieldName}.address`} label=\"Signer\" validate={validateSafeAddress} deps={deps} />\n          </FormControl>\n        )}\n      </Grid>\n      {!readOnly && (\n        <Grid\n          item\n          xs={1}\n          sx={{\n            ml: -2,\n            alignSelf: 'stretch',\n            display: 'flex',\n            alignItems: 'center',\n            flexShrink: 0,\n          }}\n        >\n          {removable && (\n            <>\n              <IconButton data-testid=\"remove-owner-btn\" onClick={() => remove?.(index)} aria-label=\"Remove signer\">\n                <SvgIcon component={DeleteIcon} inheritViewBox />\n              </IconButton>\n            </>\n          )}\n        </Grid>\n      )}\n    </Grid>\n  )\n}\n\nexport default OwnerRow\n","import React, { type ReactElement } from 'react'\nimport { Grid, Typography } from '@mui/material'\n\nconst ReviewRow = ({ name, value }: { name?: string; value: ReactElement }) => {\n  return (\n    <>\n      {name && (\n        <Grid item xs={3}>\n          <Typography variant=\"body2\">{name}</Typography>\n        </Grid>\n      )}\n      <Grid item xs={name ? 9 : 12}>\n        {value}\n      </Grid>\n    </>\n  )\n}\n\nexport default ReviewRow\n","import type { StepRenderProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { LoadSafeFormData } from '@/components/new-safe/load'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  Divider,\n  Grid,\n  InputAdornment,\n  SvgIcon,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport layoutCss from '@/components/new-safe/create/styles.module.css'\nimport NameInput from '@/components/common/NameInput'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport css from '@/components/new-safe/create/steps/SetNameStep/styles.module.css'\nimport NetworkSelector from '@/components/common/NetworkSelector'\nimport { useMnemonicSafeName } from '@/hooks/useMnemonicName'\nimport { useAddressResolver } from '@/hooks/useAddressResolver'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport AddressInput from '@/components/common/AddressInput'\nimport React from 'react'\nimport { getSafeInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport useChainId from '@/hooks/useChainId'\nimport { useAppSelector } from '@/store'\nimport { selectAddedSafes } from '@/store/addedSafesSlice'\nimport { LOAD_SAFE_EVENTS, trackEvent } from '@/services/analytics'\nimport { AppRoutes } from '@/config/routes'\nimport MUILink from '@mui/material/Link'\nimport Link from 'next/link'\n\nenum Field {\n  name = 'name',\n  address = 'address',\n}\n\ntype FormData = {\n  [Field.name]: string\n  [Field.address]: string\n}\n\nconst SetAddressStep = ({ data, onSubmit, onBack }: StepRenderProps<LoadSafeFormData>) => {\n  const currentChainId = useChainId()\n  const addedSafes = useAppSelector((state) => selectAddedSafes(state, currentChainId))\n  const formMethods = useForm<FormData>({\n    mode: 'all',\n    defaultValues: {\n      [Field.name]: data.name,\n      [Field.address]: data.address,\n    },\n  })\n\n  const {\n    handleSubmit,\n    formState: { errors, isValid },\n    watch,\n    getValues,\n  } = formMethods\n\n  const safeAddress = watch(Field.address)\n  const randomName = useMnemonicSafeName()\n  const { ens, name, resolving } = useAddressResolver(safeAddress)\n\n  // Address book, ENS, mnemonic\n  const fallbackName = name || ens || randomName\n\n  const validateSafeAddress = async (address: string) => {\n    if (addedSafes && Object.keys(addedSafes).includes(address)) {\n      return 'Safe Account is already added'\n    }\n\n    try {\n      await getSafeInfo(currentChainId, address)\n    } catch (error) {\n      return 'Address given is not a valid Safe Account address'\n    }\n  }\n\n  const onFormSubmit = handleSubmit((data: FormData) => {\n    onSubmit({\n      ...data,\n      [Field.name]: data[Field.name] || fallbackName,\n    })\n\n    if (data[Field.name]) {\n      trackEvent(LOAD_SAFE_EVENTS.NAME_SAFE)\n    }\n  })\n\n  const handleBack = () => {\n    const formData = getValues()\n    onBack({\n      ...formData,\n      [Field.name]: formData.name || fallbackName,\n    })\n  }\n\n  return (\n    <FormProvider {...formMethods}>\n      <form onSubmit={onFormSubmit}>\n        <Box className={layoutCss.row}>\n          <Grid\n            container\n            spacing={[3, 1]}\n            sx={{\n              mb: 3,\n              pr: '40px',\n            }}\n          >\n            <Grid item xs={12} md>\n              <NameInput\n                name={Field.name}\n                label={errors?.[Field.name]?.message || 'Name'}\n                placeholder={fallbackName}\n                InputLabelProps={{ shrink: true }}\n                InputProps={{\n                  endAdornment: resolving ? (\n                    <InputAdornment position=\"end\">\n                      <CircularProgress size={20} />\n                    </InputAdornment>\n                  ) : (\n                    <Tooltip\n                      title=\"This name is stored locally and will never be shared with us or any third parties.\"\n                      arrow\n                      placement=\"top\"\n                    >\n                      <InputAdornment position=\"end\">\n                        <SvgIcon component={InfoIcon} inheritViewBox />\n                      </InputAdornment>\n                    </Tooltip>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid\n              item\n              sx={{\n                order: [-1, 1],\n              }}\n            >\n              <Box className={css.select}>\n                <NetworkSelector />\n              </Box>\n            </Grid>\n          </Grid>\n\n          <AddressInput\n            data-testid=\"address-section\"\n            label=\"Safe Account\"\n            validate={validateSafeAddress}\n            name={Field.address}\n          />\n\n          <Typography\n            sx={{\n              mt: 4,\n            }}\n          >\n            By continuing you consent to the{' '}\n            <Link href={AppRoutes.terms} passHref legacyBehavior>\n              <MUILink>terms of use</MUILink>\n            </Link>{' '}\n            and{' '}\n            <Link href={AppRoutes.privacy} passHref legacyBehavior>\n              <MUILink>privacy policy</MUILink>\n            </Link>\n            .\n          </Typography>\n        </Box>\n\n        <Divider />\n\n        <Box className={layoutCss.row}>\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              gap: 3,\n            }}\n          >\n            <Button variant=\"outlined\" size=\"small\" onClick={handleBack} startIcon={<ArrowBackIcon fontSize=\"small\" />}>\n              Back\n            </Button>\n            <Button\n              data-testid=\"load-safe-next-btn\"\n              type=\"submit\"\n              variant=\"contained\"\n              size=\"stretched\"\n              disabled={!isValid}\n            >\n              Next\n            </Button>\n          </Box>\n        </Box>\n      </form>\n    </FormProvider>\n  )\n}\n\nexport default SetAddressStep\n","import React, { useEffect } from 'react'\nimport { getSafeInfo, type SafeInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport { FormProvider, useFieldArray, useForm } from 'react-hook-form'\nimport { Box, Button, Divider } from '@mui/material'\n\nimport type { StepRenderProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { LoadSafeFormData } from '@/components/new-safe/load'\nimport useAsync from '@/hooks/useAsync'\nimport useChainId from '@/hooks/useChainId'\nimport type { NamedAddress } from '@/components/new-safe/create/types'\nimport layoutCss from '@/components/new-safe/create/styles.module.css'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport { OwnerRow } from '@/components/new-safe/OwnerRow'\n\nenum Field {\n  owners = 'owners',\n  threshold = 'threshold',\n}\n\ntype FormData = {\n  [Field.owners]: NamedAddress[]\n  [Field.threshold]: number\n}\n\nconst SafeOwnerStep = ({ data, onSubmit, onBack }: StepRenderProps<LoadSafeFormData>) => {\n  const chainId = useChainId()\n  const formMethods = useForm<FormData>({\n    defaultValues: data,\n    mode: 'onChange',\n  })\n  const {\n    handleSubmit,\n    setValue,\n    control,\n    formState: { isValid },\n    getValues,\n  } = formMethods\n\n  const { fields } = useFieldArray({\n    control,\n    name: Field.owners,\n  })\n\n  const [safeInfo] = useAsync<SafeInfo>(() => {\n    if (data.address) {\n      return getSafeInfo(chainId, data.address)\n    }\n  }, [chainId, data.address])\n\n  useEffect(() => {\n    if (!safeInfo) return\n\n    setValue(Field.threshold, safeInfo.threshold)\n\n    const owners = safeInfo.owners.map((owner, i) => ({\n      address: owner.value,\n      name: getValues(`owners.${i}.name`) || '',\n    }))\n\n    setValue(Field.owners, owners)\n  }, [getValues, safeInfo, setValue])\n\n  const handleBack = () => {\n    onBack(getValues())\n  }\n\n  return (\n    <FormProvider {...formMethods}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Box className={layoutCss.row}>\n          {fields.map((field, index) => (\n            <OwnerRow key={field.id} index={index} groupName=\"owners\" readOnly />\n          ))}\n        </Box>\n        <Divider />\n        <Box className={layoutCss.row}>\n          <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" gap={3}>\n            <Button variant=\"outlined\" size=\"small\" onClick={handleBack} startIcon={<ArrowBackIcon fontSize=\"small\" />}>\n              Back\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" size=\"stretched\" disabled={!isValid}>\n              Next\n            </Button>\n          </Box>\n        </Box>\n      </form>\n    </FormProvider>\n  )\n}\n\nexport default SafeOwnerStep\n","import React from 'react'\nimport { Box, Button, Divider, Grid, Typography } from '@mui/material'\n\nimport type { StepRenderProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { LoadSafeFormData } from '@/components/new-safe/load'\nimport layoutCss from '@/components/new-safe/create/styles.module.css'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport ChainIndicator from '@/components/common/ChainIndicator'\nimport css from '@/components/new-safe/create/steps/ReviewStep/styles.module.css'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { useAppDispatch } from '@/store'\nimport { useRouter } from 'next/router'\nimport { addOrUpdateSafe } from '@/store/addedSafesSlice'\nimport { defaultSafeInfo } from '@/store/safeInfoSlice'\nimport { LOAD_SAFE_EVENTS, OPEN_SAFE_LABELS, OVERVIEW_EVENTS, trackEvent } from '@/services/analytics'\nimport { AppRoutes } from '@/config/routes'\nimport ReviewRow from '@/components/new-safe/ReviewRow'\nimport { upsertAddressBookEntries } from '@/store/addressBookSlice'\nimport { maybePlural } from '@/utils/formatters'\n\nconst SafeReviewStep = ({ data, onBack }: StepRenderProps<LoadSafeFormData>) => {\n  const chain = useCurrentChain()\n  const dispatch = useAppDispatch()\n  const router = useRouter()\n  const chainId = chain?.chainId || ''\n\n  const addSafe = () => {\n    const safeName = data.name\n    const safeAddress = data.address\n\n    dispatch(\n      addOrUpdateSafe({\n        safe: {\n          ...defaultSafeInfo,\n          address: { value: safeAddress, name: safeName },\n          threshold: data.threshold,\n          owners: data.owners.map((owner) => ({\n            value: owner.address,\n            name: owner.name || owner.ens,\n          })),\n          chainId,\n        },\n      }),\n    )\n\n    dispatch(\n      upsertAddressBookEntries({\n        chainIds: [chainId],\n        address: safeAddress,\n        name: safeName,\n      }),\n    )\n\n    for (const { address, name, ens } of data.owners) {\n      const entryName = name || ens\n\n      if (!entryName) {\n        continue\n      }\n\n      dispatch(\n        upsertAddressBookEntries({\n          chainIds: [chainId],\n          address,\n          name: entryName,\n        }),\n      )\n    }\n\n    trackEvent({\n      ...LOAD_SAFE_EVENTS.OWNERS,\n      label: data.owners.length,\n    })\n\n    trackEvent({\n      ...LOAD_SAFE_EVENTS.THRESHOLD,\n      label: data.threshold,\n    })\n\n    trackEvent({ ...OVERVIEW_EVENTS.OPEN_SAFE, label: OPEN_SAFE_LABELS.after_add })\n\n    router.push({\n      pathname: AppRoutes.home,\n      query: { safe: `${chain?.shortName}:${safeAddress}` },\n    })\n  }\n\n  const handleBack = () => {\n    onBack(data)\n  }\n\n  return (\n    <>\n      <Box className={layoutCss.row}>\n        <Grid container spacing={3}>\n          <ReviewRow name=\"Network\" value={<ChainIndicator chainId={chain?.chainId} inline />} />\n          <ReviewRow name=\"Name\" value={<Typography>{data.name}</Typography>} />\n          <ReviewRow\n            name=\"Signers\"\n            value={\n              <Box className={css.ownersArray}>\n                {data.owners.map((owner, index) => (\n                  <EthHashInfo\n                    address={owner.address}\n                    name={owner.name || owner.ens}\n                    shortAddress={false}\n                    showPrefix={false}\n                    showName\n                    hasExplorer\n                    showCopyButton\n                    key={index}\n                  />\n                ))}\n              </Box>\n            }\n          />\n          <ReviewRow\n            name=\"Threshold\"\n            value={\n              <Typography>\n                {data.threshold} out of {data.owners.length} signer{maybePlural(data.owners)}\n              </Typography>\n            }\n          />\n        </Grid>\n      </Box>\n      <Divider />\n      <Box className={layoutCss.row}>\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" gap={3}>\n          <Button variant=\"outlined\" size=\"small\" onClick={handleBack} startIcon={<ArrowBackIcon fontSize=\"small\" />}>\n            Back\n          </Button>\n          <Button onClick={addSafe} variant=\"contained\" size=\"stretched\">\n            Add\n          </Button>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default SafeReviewStep\n","import React from 'react'\nimport { useRouter } from 'next/router'\n\nimport { LOAD_SAFE_CATEGORY } from '@/services/analytics'\nimport { Container, Grid, Typography } from '@mui/material'\nimport { CardStepper } from '@/components/new-safe/CardStepper'\nimport type { TxStepperProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { NamedAddress } from '@/components/new-safe/create/types'\nimport SetAddressStep from '@/components/new-safe/load/steps/SetAddressStep'\nimport { AppRoutes } from '@/config/routes'\nimport SafeOwnerStep from '@/components/new-safe/load/steps/SafeOwnerStep'\nimport SafeReviewStep from '@/components/new-safe/load/steps/SafeReviewStep'\n\nexport type LoadSafeFormData = NamedAddress & {\n  threshold: number\n  owners: NamedAddress[]\n}\n\nexport const LoadSafeSteps: TxStepperProps<LoadSafeFormData>['steps'] = [\n  {\n    title: 'Choose address, network and a name',\n    subtitle: 'Paste the address of the Safe Account you want to add, select the network and choose a name.',\n    render: (data, onSubmit, onBack, setStep) => (\n      <SetAddressStep onSubmit={onSubmit} onBack={onBack} data={data} setStep={setStep} />\n    ),\n  },\n  {\n    title: 'Signers and confirmations',\n    subtitle: 'Optional: Provide a name for each signer.',\n    render: (data, onSubmit, onBack, setStep) => (\n      <SafeOwnerStep onSubmit={onSubmit} onBack={onBack} data={data} setStep={setStep} />\n    ),\n  },\n  {\n    title: 'Review',\n    subtitle: 'Confirm adding Safe Account to your Watchlist',\n    render: (data, onSubmit, onBack, setStep) => (\n      <SafeReviewStep onSubmit={onSubmit} onBack={onBack} data={data} setStep={setStep} />\n    ),\n  },\n]\n\nexport const loadSafeDefaultData = { threshold: -1, owners: [], address: '', name: '' }\n\nconst LoadSafe = ({ initialData }: { initialData?: TxStepperProps<LoadSafeFormData>['initialData'] }) => {\n  const router = useRouter()\n\n  const onClose = () => {\n    router.push(AppRoutes.welcome.index)\n  }\n\n  const initialSafe = initialData ?? loadSafeDefaultData\n\n  return (\n    <Container data-testid=\"load-safe-form\">\n      <Grid\n        container\n        columnSpacing={3}\n        sx={{\n          mt: [2, null, 7],\n          justifyContent: 'center',\n        }}\n      >\n        <Grid item xs={12} md={10} lg={8}>\n          <Typography\n            variant=\"h2\"\n            sx={{\n              pb: 2,\n            }}\n          >\n            Add existing Safe Account\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={10}\n          lg={8}\n          sx={{\n            order: [1, null, 0],\n          }}\n        >\n          <CardStepper\n            // Populate initial data\n            key={initialSafe.address}\n            initialData={initialSafe}\n            onClose={onClose}\n            steps={LoadSafeSteps}\n            eventCategory={LOAD_SAFE_CATEGORY}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default LoadSafe\n","import type { NextPage } from 'next'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\nimport LoadSafe, { loadSafeDefaultData } from '@/components/new-safe/load'\nimport { BRAND_NAME } from '@/config/constants'\n\nconst Load: NextPage = () => {\n  const router = useRouter()\n  const { address = '' } = router.query\n  const safeAddress = Array.isArray(address) ? address[0] : address\n\n  return (\n    <main>\n      <Head>\n        <title>{`${BRAND_NAME} – Add Safe Account`}</title>\n      </Head>\n\n      {safeAddress ? (\n        <LoadSafe initialData={{ ...loadSafeDefaultData, address: safeAddress }} />\n      ) : (\n        <LoadSafe initialData={loadSafeDefaultData} />\n      )}\n    </main>\n  )\n}\n\nexport default Load\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unknownAddress\":\"styles_unknownAddress__BH1i2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__n9cqN\",\"header\":\"styles_header__QeZM4\",\"step\":\"styles_step__R3EWt\",\"content\":\"styles_content__wZRTX\",\"actions\":\"styles_actions__nsEiB\",\"progress\":\"styles_progress__byfBc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helper\":\"styles_helper__VddZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ownersArray\":\"styles_ownersArray__Lwugg\",\"strikethrough\":\"styles_strikethrough__dsfcO\",\"errorMessage\":\"styles_errorMessage__EgiJf\",\"networkFee\":\"styles_networkFee__s25eL\",\"networkFeeInline\":\"styles_networkFeeInline__o4u72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__uoWK3\",\"select\":\"styles_select__P_k1Z\",\"networkSelect\":\"styles_networkSelect__R8qLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"styles_row__UGXjL\"};"],"names":["createSvgIcon","_jsx","d","abFilterOptions","createFilterOptions","stringify","option","name","label","canAdd","props","AddressBookInput","addressBook","useAddressBook","setValue","control","useFormContext","addressValue","useWatch","open","setOpen","useState","openAddressBook","setOpenAddressBook","addressBookEntries","Object","entries","map","address","hasVisibleOptions","useMemo","filter","entry","includes","length","isInAddressBook","some","sameAddress","customFilterOptions","options","state","isValidAddress","handleOpenAutocomplete","value","onAddressBookClick","undefined","Controller","render","field","ref","Autocomplete","className","inputCss","disabled","readOnly","InputProps","freeSolo","onChange","_","onInputChange","filterOptions","componentsProps","paper","elevation","renderOption","key","rest","Typography","data-testid","component","variant","EthHashInfo","shortAddress","copyAddress","renderInput","AddressInput","params","focused","onOpenListClick","isAutocompleteOpen","css","SvgIcon","InfoIcon","fontSize","span","a","role","onClick","EntryDialog","handleClose","defaultValues","useCardStepper","steps","initialData","initialStep","eventCategory","MODALS_CATEGORY","onClose","setWidgetStep","activeStep","setActiveStep","stepData","setStepData","handleNext","prevActiveStep","trackEvent","category","action","lastStep","firstStep","onBack","handleBack","data","previous","onSubmit","setStep","step","CardStepper","progressColor","setProgressColor","lightPalette","secondary","main","currentStep","progress","Card","Box","color","LinearProgress","Math","min","title","CardHeader","subheader","subtitle","titleTypographyProps","subheaderTypographyProps","avatar","Avatar","CardContent","OwnerRow","index","groupName","removable","remove","wallet","useWallet","fieldName","getValues","owners","owner","deps","Array","from","i","validateSafeAddress","useCallback","ens","resolving","useAddressResolver","useEffect","walletIsOwner","Grid","container","spacing","classNames","sx","alignItems","marginBottom","flexWrap","item","xs","md","FormControl","fullWidth","NameInput","InputLabelProps","shrink","placeholder","helperText","endAdornment","InputAdornment","position","CircularProgress","size","hasExplorer","showCopyButton","validate","ml","alignSelf","display","flexShrink","IconButton","aria-label","DeleteIcon","inheritViewBox","ReviewRow","Field","errors","SetAddressStep","currentChainId","useChainId","addedSafes","useAppSelector","selectAddedSafes","formMethods","useForm","mode","handleSubmit","formState","isValid","watch","safeAddress","randomName","useMnemonicSafeName","fallbackName","keys","getSafeInfo","error","onFormSubmit","LOAD_SAFE_EVENTS","NAME_SAFE","FormProvider","form","layoutCss","mb","pr","message","Tooltip","arrow","placement","order","NetworkSelector","mt","Link","href","AppRoutes","terms","passHref","legacyBehavior","MUILink","privacy","Divider","flexDirection","justifyContent","gap","Button","formData","startIcon","ArrowBackIcon","type","SafeOwnerStep","chainId","fields","useFieldArray","safeInfo","useAsync","threshold","id","chain","useCurrentChain","dispatch","useAppDispatch","router","useRouter","ChainIndicator","inline","showPrefix","showName","maybePlural","addSafe","safeName","addOrUpdateSafe","safe","defaultSafeInfo","upsertAddressBookEntries","chainIds","entryName","OWNERS","THRESHOLD","OVERVIEW_EVENTS","OPEN_SAFE","OPEN_SAFE_LABELS","after_add","push","pathname","home","query","shortName","LoadSafeSteps","SafeReviewStep","loadSafeDefaultData","LoadSafe","initialSafe","Container","columnSpacing","lg","pb","welcome","LOAD_SAFE_CATEGORY","Load","isArray","Head","BRAND_NAME"],"sourceRoot":"","ignoreList":[1]}