{"version":3,"file":"static/chunks/pages/transactions/tx-d3d4abd1c3a3a393.js","mappings":"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","sources":["webpack://_N_E/?e20b","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/BlockedAddress/index.tsx","webpack://_N_E/./src/components/common/Disclaimer/index.tsx","webpack://_N_E/./src/components/transactions/SingleTx/index.tsx","webpack://_N_E/./src/pages/transactions/tx.tsx","webpack://_N_E/./src/components/common/Disclaimer/styles.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/transactions/tx\",\n      function () {\n        return require(\"private-next-pages/transactions/tx.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/transactions/tx\"])\n      });\n    }\n  ","export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import type { ReactElement } from 'react'\nimport { useMediaQuery, useTheme } from '@mui/material'\nimport { shortenAddress } from '@/utils/formatters'\nimport { useRouter } from 'next/router'\nimport Disclaimer from '@/components/common/Disclaimer'\nimport { AppRoutes } from '@/config/routes'\n\nexport const BlockedAddress = ({\n  address,\n  featureTitle,\n  onClose,\n}: {\n  address: string\n  featureTitle: string\n  onClose?: () => void\n}): ReactElement => {\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\n  const displayAddress = address && isMobile ? shortenAddress(address) : address\n  const router = useRouter()\n\n  const handleAccept = () => {\n    router.push({ pathname: AppRoutes.home, query: router.query })\n  }\n\n  return (\n    <Disclaimer\n      title=\"Blocked address\"\n      subtitle={displayAddress}\n      content={`The above address is part of the OFAC SDN list and the ${featureTitle} is unavailable for sanctioned addresses.`}\n      onAccept={onClose ?? handleAccept}\n    />\n  )\n}\n\nexport default BlockedAddress\n","import type { ReactElement, ReactNode } from 'react'\nimport { Box, Button, Divider, Paper, Stack, SvgIcon, Typography } from '@mui/material'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport css from './styles.module.css'\n\nexport const Disclaimer = ({\n  title,\n  subtitle,\n  buttonText,\n  content,\n  onAccept,\n}: {\n  title: string\n  subtitle?: string\n  buttonText?: string\n  content: ReactNode\n  onAccept: () => void\n}): ReactElement => {\n  return (\n    <div className={css.container}>\n      <Paper sx={{ maxWidth: '500px' }}>\n        <Stack\n          sx={[\n            {\n              padding: 'var(--space-3)',\n              gap: 2,\n              display: 'flex',\n              alignItems: 'center',\n            },\n            ({ palette }) => ({ borderBottom: `1px solid ${palette.border.light}` }),\n          ]}\n        >\n          {subtitle && (\n            <Typography\n              sx={{\n                color: 'var(--color-text-secondary)',\n              }}\n            >\n              {subtitle}\n            </Typography>\n          )}\n\n          <Box className={css.iconCircle}>\n            <SvgIcon component={InfoIcon} inheritViewBox fontSize=\"medium\" />\n          </Box>\n          <Typography\n            variant=\"h3\"\n            sx={{\n              fontWeight: 700,\n            }}\n          >\n            {title}\n          </Typography>\n          <Typography variant=\"body2\">{content}</Typography>\n          <Divider />\n        </Stack>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 3,\n            pb: 2,\n          }}\n        >\n          <Button variant=\"contained\" size=\"small\" sx={{ px: '16px' }} onClick={onAccept}>\n            {buttonText || 'Got it'}\n          </Button>\n        </Box>\n      </Paper>\n    </div>\n  )\n}\n\nexport default Disclaimer\n","import ErrorMessage from '@/components/tx/ErrorMessage'\nimport { useRouter } from 'next/router'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport type { Label, Transaction, TransactionDetails } from '@safe-global/safe-gateway-typescript-sdk'\nimport { LabelValue } from '@safe-global/safe-gateway-typescript-sdk'\nimport { sameAddress } from '@/utils/addresses'\nimport type { ReactElement } from 'react'\nimport { useEffect } from 'react'\nimport { makeTxFromDetails } from '@/utils/transactions'\nimport { TxListGrid } from '@/components/transactions/TxList'\nimport ExpandableTransactionItem, {\n  TransactionSkeleton,\n} from '@/components/transactions/TxListItem/ExpandableTransactionItem'\nimport GroupLabel from '../GroupLabel'\nimport { isMultisigDetailedExecutionInfo } from '@/utils/transaction-guards'\nimport { useGetTransactionDetailsQuery } from '@/store/api/gateway'\nimport { skipToken } from '@reduxjs/toolkit/query/react'\nimport { asError } from '@/services/exceptions/utils'\n\nconst SingleTxGrid = ({ txDetails }: { txDetails: TransactionDetails }): ReactElement => {\n  const tx: Transaction = makeTxFromDetails(txDetails)\n\n  // Show a label for the transaction if it's a queued transaction\n  const { safe } = useSafeInfo()\n  const nonce = isMultisigDetailedExecutionInfo(txDetails?.detailedExecutionInfo)\n    ? txDetails?.detailedExecutionInfo.nonce\n    : -1\n  const label = nonce === safe.nonce ? LabelValue.Next : nonce > safe.nonce ? LabelValue.Queued : undefined\n\n  return (\n    <TxListGrid>\n      {label ? <GroupLabel item={{ label } as Label} /> : null}\n\n      <ExpandableTransactionItem item={tx} txDetails={txDetails} />\n    </TxListGrid>\n  )\n}\n\nconst SingleTx = () => {\n  const router = useRouter()\n  const { id } = router.query\n  const transactionId = Array.isArray(id) ? id[0] : id\n  const { safe, safeAddress } = useSafeInfo()\n\n  let {\n    data: txDetails,\n    error: txDetailsError,\n    refetch,\n    isUninitialized,\n  } = useGetTransactionDetailsQuery(\n    transactionId && safe.chainId\n      ? {\n          chainId: safe.chainId,\n          txId: transactionId,\n        }\n      : skipToken,\n  )\n\n  useEffect(() => {\n    !isUninitialized && refetch()\n  }, [safe.txHistoryTag, safe.txQueuedTag, safeAddress, refetch, isUninitialized])\n\n  if (txDetails && !sameAddress(txDetails.safeAddress, safeAddress)) {\n    txDetailsError = new Error('Transaction with this id was not found in this Safe Account')\n  }\n\n  if (txDetailsError) {\n    return <ErrorMessage error={asError(txDetailsError)}>Failed to load transaction</ErrorMessage>\n  }\n\n  if (txDetails) {\n    return <SingleTxGrid txDetails={txDetails} />\n  }\n\n  // Loading skeleton\n  return <TransactionSkeleton />\n}\n\nexport default SingleTx\n","import type { NextPage } from 'next'\nimport Head from 'next/head'\n\nimport SingleTx from '@/components/transactions/SingleTx'\nimport Typography from '@mui/material/Typography'\nimport { BRAND_NAME } from '@/config/constants'\n\nconst SingleTransaction: NextPage = () => {\n  return (\n    <>\n      <Head>\n        <title>{`${BRAND_NAME} – Transaction details`}</title>\n      </Head>\n\n      <main>\n        <Typography data-testid=\"tx-details\" variant=\"h3\" fontWeight={700} pt={1} mb={3}>\n          Transaction details\n        </Typography>\n\n        <SingleTx />\n      </main>\n    </>\n  )\n}\n\nexport default SingleTransaction\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3Fkdw\",\"iconCircle\":\"styles_iconCircle__GFs_w\"};"],"names":["address","BlockedAddress","featureTitle","onClose","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","displayAddress","shortenAddress","router","useRouter","Disclaimer","title","subtitle","content","onAccept","push","handleAccept","pathname","AppRoutes","home","query","buttonText","div","className","css","Paper","sx","maxWidth","Stack","padding","gap","display","alignItems","palette","borderBottom","border","light","Typography","color","Box","SvgIcon","component","InfoIcon","inheritViewBox","fontSize","variant","fontWeight","Divider","justifyContent","pt","pb","Button","size","px","onClick","SingleTxGrid","txDetails","tx","makeTxFromDetails","safe","useSafeInfo","nonce","isMultisigDetailedExecutionInfo","detailedExecutionInfo","label","LabelValue","Next","Queued","undefined","TxListGrid","GroupLabel","item","ExpandableTransactionItem","id","SingleTx","transactionId","Array","isArray","safeAddress","data","error","txDetailsError","refetch","isUninitialized","useGetTransactionDetailsQuery","chainId","txId","skipToken","useEffect","txHistoryTag","txQueuedTag","sameAddress","ErrorMessage","asError","TransactionSkeleton","SingleTransaction","Head","BRAND_NAME","main","data-testid","mb"],"sourceRoot":"","ignoreList":[]}