{"version":3,"file":"static/chunks/pages/swap-823ecc20b3019a4b.js","mappings":"gFACA,4CACA,QACA,WACA,OAAe,EAAQ,KAA6B,CACpD,EACA,SAFsB,mKCMtB,IAAMA,EAAmB,GACvB,GAAmC,GAAG,CAAvBC,OAAOC,GACA,6CAGfA,EAGHC,EAAkBC,IAAQ,IAAM,0GAAyB,0CAAIC,KAAK,IAkCxE,EAhC2B,SAKrBC,EAHJ,GAAM,EAGKC,KAHHC,CAAK,CAAEC,KA8BFC,GA9BQ,CAAE,CADRC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GACSC,KAAK,CAChCC,EAAmBC,CAAAA,EAAAA,EAAAA,EAAAA,CAAaA,CAACC,EAAAA,EAAQA,CAACC,YAAY,EAU5D,OAPIR,GAASC,IACXH,EAAO,CACLW,CAFiB,KAEVjB,EAAiBkB,aAAOV,EAAAA,EAAS,KACxCC,OAAQT,EAAiBkB,aAAOT,EAAAA,EAAU,KAC5C,EAIA,QALkCA,CAKlC,wBACE,UAACU,IAAIA,UACH,UAACC,QAAAA,UAAO,GAAc,IADnBD,EACmB,CAAXE,EAAAA,EAAUA,CAAC,eAGxB,UAACC,OAAAA,CAAKC,MAAO,CAAEC,OAAQ,oBAAqB,WACzCX,CAAqB,MACpB,UAACV,EAAAA,CAAgBG,KAAMA,KACA,IAArBO,EACF,UAACY,EAAAA,GAAUA,CAAAA,CAACC,UAAU,SAASC,GAAI,WAAG,6CAGpC,SAIZ","sources":["webpack://_N_E/?88db","webpack://_N_E/./src/pages/swap.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/swap\",\n      function () {\n        return require(\"private-next-pages/swap.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/swap\"])\n      });\n    }\n  ","import type { NextPage } from 'next'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\nimport dynamic from 'next/dynamic'\nimport { Typography } from '@mui/material'\nimport { useHasFeature } from '@/hooks/useChains'\nimport { FEATURES } from '@/utils/chains'\nimport { BRAND_NAME } from '@/config/constants'\n\n// Cow Swap expects native token addresses to be in the format '0xeeee...eeee'\nconst adjustEthAddress = (address: string) => {\n  if (address && Number(address) === 0) {\n    const ETH_ADDRESS = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'\n    return ETH_ADDRESS\n  }\n  return address\n}\n\nconst SwapWidgetNoSSR = dynamic(() => import('@/features/swap'), { ssr: false })\n\nconst SwapPage: NextPage = () => {\n  const router = useRouter()\n  const { token, amount } = router.query\n  const isFeatureEnabled = useHasFeature(FEATURES.NATIVE_SWAPS)\n\n  let sell = undefined\n  if (token && amount) {\n    sell = {\n      asset: adjustEthAddress(String(token ?? '')),\n      amount: adjustEthAddress(String(amount ?? '')),\n    }\n  }\n\n  return (\n    <>\n      <Head>\n        <title>{`${BRAND_NAME} â€“ Swap`}</title>\n      </Head>\n\n      <main style={{ height: 'calc(100vh - 52px)' }}>\n        {isFeatureEnabled === true ? (\n          <SwapWidgetNoSSR sell={sell} />\n        ) : isFeatureEnabled === false ? (\n          <Typography textAlign=\"center\" my={3}>\n            Swaps are not supported on this network.\n          </Typography>\n        ) : null}\n      </main>\n    </>\n  )\n}\n\nexport default SwapPage\n"],"names":["adjustEthAddress","Number","address","SwapWidgetNoSSR","dynamic","ssr","sell","undefined","token","amount","SwapPage","useRouter","query","isFeatureEnabled","useHasFeature","FEATURES","NATIVE_SWAPS","asset","String","Head","title","BRAND_NAME","main","style","height","Typography","textAlign","my"],"sourceRoot":"","ignoreList":[]}