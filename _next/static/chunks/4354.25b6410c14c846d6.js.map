{"version":3,"file":"static/chunks/4354.25b6410c14c846d6.js","mappings":"oLCmCA,MA5B8B,OAAC,SAC7BA,CAAO,MA2BMC,QA1BbC,CAAY,KA0BeD,EAAA,EAzB3BE,CAAO,CAKR,GACOC,EAAQC,CAAAA,EAAAA,EAAAA,GAAAA,CAAQA,GAChBC,EAAWC,CAAAA,EAAAA,EAAAA,GAAAA,CAAaA,CAACH,EAAMI,WAAW,CAACC,IAAI,CAAC,OAChDC,EAAiBV,GAAWM,EAAWK,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACX,GAAWA,EACjEY,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAMxB,MACE,UAACC,EAAAA,CAAUA,CAAAA,CACTC,MAAM,kBACNC,SAAUN,EACVO,QAAS,0DAAuE,OAAbf,EAAa,6CAChFgB,SAAUf,QAAAA,EATO,KACnBS,EAAOO,CAQgBC,EAAXjB,CARD,CAAC,CAAEkB,SAAUC,EAAAA,CAASA,CAACC,IAAI,CAAEC,MAAOZ,EAAOY,KAAK,EAC7D,GAUF,EAAC,wGCwCD,MApE0B,OAAC,OACzBT,CAAK,IAmEQD,MAlEbE,CAAQ,GAkEeF,EAAA,OAjEvBW,CAAU,SACVR,CAAO,UACPC,CAAQ,CAOT,GACC,MACE,UAACQ,MAAAA,CAAIC,UAAWC,IAAAA,SAAa,UAC3B,WAACC,EAAAA,GAAKA,CAAAA,CAACC,GAAI,CAAEC,SAAU,OAAQ,YAC7B,WAACC,EAAAA,GAAKA,CAAAA,CACJF,GAAI,CACF,CACEG,QAAS,iBACTC,IAAK,EACLC,QAAS,OACTC,WAAY,QACd,EACA,OAAC,SAAEC,CAAO,CAAE,SAAM,CAAEC,aAAc,aAAkC,OAArBD,EAAQE,MAAM,CAACC,KAAK,CAAG,GACvE,WAEAxB,GACC,UAACyB,EAAAA,GAAUA,CAAAA,CACTX,GAAI,CACFY,MAAO,6BACT,WAEC1B,IAIL,UAAC2B,EAAAA,GAAGA,CAAAA,CAAChB,UAAWC,IAAAA,UAAc,UAC5B,UAACgB,EAAAA,GAAOA,CAAAA,CAACC,UAAWC,EAAAA,CAAQA,CAAEC,cAAc,IAACC,SAAS,aAExD,UAACP,EAAAA,GAAUA,CAAAA,CACTQ,QAAQ,KACRnB,GAAI,CACFoB,WAAY,GACd,WAECnC,IAEH,UAAC0B,EAAAA,GAAUA,CAAAA,CAACQ,QAAQ,iBAAShC,IAC7B,UAACkC,EAAAA,GAAOA,CAAAA,CAAAA,MAEV,UAACR,EAAAA,GAAGA,CAAAA,CACFb,GAAI,CACFK,QAAS,OACTiB,eAAgB,SAChBC,GAAI,EACJC,GAAI,CACN,WAEA,UAACC,EAAAA,GAAMA,CAAAA,CAACN,QAAQ,YAAYO,KAAK,QAAQ1B,GAAI,CAAE2B,GAAI,MAAO,EAAGC,QAASxC,WACnEO,GAAc,iBAM3B,EAAC,oIC/DM,IAAMkC,EAA0BC,CAAAA,EAAAA,EAAAA,EAAAA,CAAEA,CAAC,4BAA4BC,KAAK,CAAC,EAAG,IAAG,EACjCD,CAAAA,EAAAA,EAAAA,EAAAA,CAAEA,CAAC,sCAAsCC,KAAK,CAAC,EAAG,IAAG,EAW9EC,EAAAA,EAAcA,CAACC,eAAe,GAE/C,eAAKC,CAAAA,wCAAAA,OAEX,IAEKC,EAAsB,CAACC,EAAgBC,IAC3C,oBAAiD,CAA7CD,EACKE,EAAAA,EAAyBA,CAG3BC,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACH,EAAQC,GAmDfG,EAAoB,CAC/BC,EACAC,EACAC,IAEmBA,EAAIC,GAAG,CAAC,CAACC,EAAIC,KAC9B,IAAMC,QAAgBL,EAAAA,KAAAA,EAAAA,EAAeM,SAAS,CAAC,GAAcC,EAAvCP,gBAAgE,GAAKI,GAC3F,QAAsBI,IAAlBH,EACF,KAD+B,EACxBF,EAET,GAAIA,EAAGM,IAAI,CAACC,UAAU,CAACvB,IAA4BgB,EAAGM,IAAI,CAACC,UAAU,CAACC,GAAoC,CACxG,IAAMC,EAAcb,CAAkB,CAACM,EAAc,CAC/CQ,QAAeb,EAAAA,KAAAA,EAAAA,CAAe,CAACK,EAAc,CACnD,GAAI,CAACQ,GAAgB,CAACA,EAAaC,EADdd,OACuB,CAE1C,CAF4C,MAErCG,EAET,IAAMR,EAAWkB,EAAaC,SAAS,CAACnB,QAAQ,CAC1CoB,EAAetB,EAAoBmB,QAAajB,EAAAA,EAAY,UAClE,EAAOc,IAAI,CAD2Cd,UAChC,CAACR,GACd,CACL6B,GAAIH,EAAaI,YAAY,CAC7BC,IAH6C,EAGtC,IACPT,KAAMU,EAAgBC,kBAAkB,CAAC,UAAW,CAACP,EAAaQ,OAAO,CAAEN,EAAa,CAC1F,EAEO,CACLC,GAAIH,EAAaI,YAAY,CAC7BC,MAAO,IACPT,KAAMU,EAAgBC,kBAAkB,CAAC,oBAAqB,CAACP,EAAaQ,OAAO,CAAEN,EAAa,CACpG,CAEJ,CACA,OAAOZ,CACT,cCnHF,WAAkB","sources":["webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/BlockedAddress/index.tsx","webpack://_N_E/./src/components/common/Disclaimer/index.tsx","webpack://_N_E/./src/components/tx/ApprovalEditor/utils/approvals.ts","webpack://_N_E/./src/components/common/Disclaimer/styles.module.css"],"sourcesContent":["export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import type { ReactElement } from 'react'\nimport { useMediaQuery, useTheme } from '@mui/material'\nimport { shortenAddress } from '@/utils/formatters'\nimport { useRouter } from 'next/router'\nimport Disclaimer from '@/components/common/Disclaimer'\nimport { AppRoutes } from '@/config/routes'\n\nexport const BlockedAddress = ({\n  address,\n  featureTitle,\n  onClose,\n}: {\n  address: string\n  featureTitle: string\n  onClose?: () => void\n}): ReactElement => {\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\n  const displayAddress = address && isMobile ? shortenAddress(address) : address\n  const router = useRouter()\n\n  const handleAccept = () => {\n    router.push({ pathname: AppRoutes.home, query: router.query })\n  }\n\n  return (\n    <Disclaimer\n      title=\"Blocked address\"\n      subtitle={displayAddress}\n      content={`The above address is part of the OFAC SDN list and the ${featureTitle} is unavailable for sanctioned addresses.`}\n      onAccept={onClose ?? handleAccept}\n    />\n  )\n}\n\nexport default BlockedAddress\n","import type { ReactElement, ReactNode } from 'react'\nimport { Box, Button, Divider, Paper, Stack, SvgIcon, Typography } from '@mui/material'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport css from './styles.module.css'\n\nexport const Disclaimer = ({\n  title,\n  subtitle,\n  buttonText,\n  content,\n  onAccept,\n}: {\n  title: string\n  subtitle?: string\n  buttonText?: string\n  content: ReactNode\n  onAccept: () => void\n}): ReactElement => {\n  return (\n    <div className={css.container}>\n      <Paper sx={{ maxWidth: '500px' }}>\n        <Stack\n          sx={[\n            {\n              padding: 'var(--space-3)',\n              gap: 2,\n              display: 'flex',\n              alignItems: 'center',\n            },\n            ({ palette }) => ({ borderBottom: `1px solid ${palette.border.light}` }),\n          ]}\n        >\n          {subtitle && (\n            <Typography\n              sx={{\n                color: 'var(--color-text-secondary)',\n              }}\n            >\n              {subtitle}\n            </Typography>\n          )}\n\n          <Box className={css.iconCircle}>\n            <SvgIcon component={InfoIcon} inheritViewBox fontSize=\"medium\" />\n          </Box>\n          <Typography\n            variant=\"h3\"\n            sx={{\n              fontWeight: 700,\n            }}\n          >\n            {title}\n          </Typography>\n          <Typography variant=\"body2\">{content}</Typography>\n          <Divider />\n        </Stack>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 3,\n            pb: 2,\n          }}\n        >\n          <Button variant=\"contained\" size=\"small\" sx={{ px: '16px' }} onClick={onAccept}>\n            {buttonText || 'Got it'}\n          </Button>\n        </Box>\n      </Paper>\n    </div>\n  )\n}\n\nexport default Disclaimer\n","import { ERC20__factory } from '@/types/contracts'\nimport { UNLIMITED_APPROVAL_AMOUNT } from '@/utils/tokens'\nimport type { BaseTransaction } from '@safe-global/safe-apps-sdk'\nimport type { DecodedDataResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport { parseUnits, id } from 'ethers'\nimport { EMPTY_DATA } from '@safe-global/protocol-kit/dist/src/utils/constants'\nimport { type ApprovalInfo } from '../hooks/useApprovalInfos'\n\nexport const APPROVAL_SIGNATURE_HASH = id('approve(address,uint256)').slice(0, 10)\nexport const INCREASE_ALLOWANCE_SIGNATURE_HASH = id('increaseAllowance(address,uint256)').slice(0, 10)\n\nconst MULTISEND_METHOD = 'multiSend'\n\nconst APPROVE_METHOD = 'approve'\n\nconst TRANSACTIONS_PARAM = 'transactions'\n\nconst ADDRESS_TYPE = 'address'\nconst UINT256_TYPE = 'uint256'\n\nconst ERC20_INTERFACE = ERC20__factory.createInterface()\n\nexport enum PSEUDO_APPROVAL_VALUES {\n  UNLIMITED = 'Unlimited amount',\n}\n\nconst parseApprovalAmount = (amount: string, decimals: number) => {\n  if (amount === PSEUDO_APPROVAL_VALUES.UNLIMITED) {\n    return UNLIMITED_APPROVAL_AMOUNT\n  }\n\n  return parseUnits(amount, decimals)\n}\n\nexport const extractTxs: (txs: BaseTransaction[] | (DecodedDataResponse & { to: string })) => BaseTransaction[] = (\n  txs,\n) => {\n  if (Array.isArray(txs)) {\n    return txs\n  }\n\n  const isMultiSendCall = txs.method === MULTISEND_METHOD && txs.parameters.length === 1\n\n  // Our multisend contract takes 1 param called transactions\n  if (isMultiSendCall) {\n    const txParam = txs.parameters[0]\n    if (txParam.name === TRANSACTIONS_PARAM) {\n      return txParam.valueDecoded\n        ? txParam.valueDecoded.map((innerTx) => ({\n            to: innerTx.to,\n            data: innerTx.data || EMPTY_DATA,\n            value: innerTx.value,\n          }))\n        : []\n    }\n  }\n\n  const isApproveCall = txs.method === APPROVE_METHOD && txs.parameters.length === 2\n\n  if (isApproveCall) {\n    const spenderParam = txs.parameters[0]\n    const amountParam = txs.parameters[1]\n\n    // We only check the types here instead of the names may vary in ERC20 implementations\n    if (\n      spenderParam.type == ADDRESS_TYPE &&\n      typeof spenderParam.value === 'string' &&\n      amountParam.type === UINT256_TYPE &&\n      typeof amountParam.value === 'string'\n    ) {\n      return [\n        {\n          to: txs.to,\n          value: '0x',\n          data: ERC20_INTERFACE.encodeFunctionData(APPROVE_METHOD, [spenderParam.value, amountParam.value]),\n        },\n      ]\n    }\n  }\n  return []\n}\n\nexport const updateApprovalTxs = (\n  approvalFormValues: string[],\n  approvalInfos: ApprovalInfo[] | undefined,\n  txs: BaseTransaction[],\n) => {\n  const updatedTxs = txs.map((tx, txIndex) => {\n    const approvalIndex = approvalInfos?.findIndex((approval) => approval.transactionIndex === txIndex)\n    if (approvalIndex === undefined) {\n      return tx\n    }\n    if (tx.data.startsWith(APPROVAL_SIGNATURE_HASH) || tx.data.startsWith(INCREASE_ALLOWANCE_SIGNATURE_HASH)) {\n      const newApproval = approvalFormValues[approvalIndex]\n      const approvalInfo = approvalInfos?.[approvalIndex]\n      if (!approvalInfo || !approvalInfo.tokenInfo) {\n        // Without decimals and spender we cannot create a new tx\n        return tx\n      }\n      const decimals = approvalInfo.tokenInfo.decimals\n      const newAmountWei = parseApprovalAmount(newApproval, decimals ?? 0)\n      if (tx.data.startsWith(APPROVAL_SIGNATURE_HASH)) {\n        return {\n          to: approvalInfo.tokenAddress,\n          value: '0',\n          data: ERC20_INTERFACE.encodeFunctionData('approve', [approvalInfo.spender, newAmountWei]),\n        }\n      } else {\n        return {\n          to: approvalInfo.tokenAddress,\n          value: '0',\n          data: ERC20_INTERFACE.encodeFunctionData('increaseAllowance', [approvalInfo.spender, newAmountWei]),\n        }\n      }\n    }\n    return tx\n  })\n\n  return updatedTxs\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3Fkdw\",\"iconCircle\":\"styles_iconCircle__GFs_w\"};"],"names":["address","BlockedAddress","featureTitle","onClose","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","displayAddress","shortenAddress","router","useRouter","Disclaimer","title","subtitle","content","onAccept","push","handleAccept","pathname","AppRoutes","home","query","buttonText","div","className","css","Paper","sx","maxWidth","Stack","padding","gap","display","alignItems","palette","borderBottom","border","light","Typography","color","Box","SvgIcon","component","InfoIcon","inheritViewBox","fontSize","variant","fontWeight","Divider","justifyContent","pt","pb","Button","size","px","onClick","APPROVAL_SIGNATURE_HASH","id","slice","ERC20__factory","createInterface","PSEUDO_APPROVAL_VALUES","parseApprovalAmount","amount","decimals","UNLIMITED_APPROVAL_AMOUNT","parseUnits","updateApprovalTxs","approvalFormValues","approvalInfos","txs","map","tx","txIndex","approvalIndex","findIndex","approval","undefined","data","startsWith","INCREASE_ALLOWANCE_SIGNATURE_HASH","newApproval","approvalInfo","tokenInfo","newAmountWei","to","tokenAddress","value","ERC20_INTERFACE","encodeFunctionData","spender"],"sourceRoot":"","ignoreList":[]}