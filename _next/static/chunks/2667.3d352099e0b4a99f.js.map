{"version":3,"file":"static/chunks/2667.3d352099e0b4a99f.js","mappings":"6OAUA,IAAMA,EAAe,KACnBC,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACC,EAAAA,EAAeA,CAACC,OAAO,CAACC,aAAa,CAClD,EAEaC,EAAqB,OAAC,QAAEC,CAAM,CAAqC,GACxE,WAAEC,CAAS,aAAEC,CAAW,gBAAEC,CAAc,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACC,EAAAA,CAAaA,EAY3E,MAVAC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACRC,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAACP,EAAOQ,OAAO,EAAEC,IAAI,CAACR,GAAWS,KAAK,CAACP,EAC7D,EAAG,CAACH,EAAOQ,OAAO,CAAEP,EAAWE,EAAe,EAE9CG,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACJJ,GACFS,CAAAA,EAAAA,EAAAA,EAAAA,CAAQA,CAACC,CADM,CACNA,CAAMA,CAACC,IAAI,CAAEX,EAAYY,OAAO,CAE7C,EAAG,CAACZ,EAAY,EAGd,WAACa,EAAAA,CAAiBA,CAAAA,CAACC,SAAUtB,YAC3B,WAACuB,EAAAA,GAAIA,CAAAA,CACHC,SAAS,IACTC,GAAI,CACFC,IAAK,EACLC,WAAY,QACd,YAEA,UAACJ,EAAAA,GAAIA,CAAAA,CAACK,IAAI,IAACC,GAAI,WAAG,WAGlB,UAACC,EAAAA,GAAUA,CAAAA,CAACC,QAAQ,QAAQC,UAAU,eACpC,UAACC,EAAAA,CAAWA,CAAAA,CAACnB,QAASR,EAAOQ,OAAO,CAAEoB,cAAc,EAAOC,WAAW,IAACC,cAAc,WAGzF,UAACN,EAAAA,GAAUA,CAAAA,CACTL,GAAI,CACFY,GAAI,CACN,WACD,+NAMP,EAAC,EC9CwB,OAAC,OAQXC,EARaxB,CAAO,CAAyB,GAC1D,MACE,UAACyB,EAAAA,CAAQA,CAAAA,CAACC,MAAM,sBAAsBC,SAAS,yBAC7C,UAACpC,EAAkBA,CAACC,OAAQ,QAATD,CAAWS,CAAQ,KAG5C","sources":["webpack://_N_E/./src/components/tx-flow/flows/RemoveModule/ReviewRemoveModule.tsx","webpack://_N_E/./src/components/tx-flow/flows/RemoveModule/index.tsx"],"sourcesContent":["import SignOrExecuteForm from '@/components/tx/SignOrExecuteForm'\nimport { Grid, Typography } from '@mui/material'\nimport { useContext, useEffect } from 'react'\nimport { Errors, logError } from '@/services/exceptions'\nimport { trackEvent, SETTINGS_EVENTS } from '@/services/analytics'\nimport { createRemoveModuleTx } from '@/services/tx/tx-sender'\nimport { SafeTxContext } from '@/components/tx-flow/SafeTxProvider'\nimport { type RemoveModuleFlowProps } from '.'\nimport EthHashInfo from '@/components/common/EthHashInfo'\n\nconst onFormSubmit = () => {\n  trackEvent(SETTINGS_EVENTS.MODULES.REMOVE_MODULE)\n}\n\nexport const ReviewRemoveModule = ({ params }: { params: RemoveModuleFlowProps }) => {\n  const { setSafeTx, safeTxError, setSafeTxError } = useContext(SafeTxContext)\n\n  useEffect(() => {\n    createRemoveModuleTx(params.address).then(setSafeTx).catch(setSafeTxError)\n  }, [params.address, setSafeTx, setSafeTxError])\n\n  useEffect(() => {\n    if (safeTxError) {\n      logError(Errors._806, safeTxError.message)\n    }\n  }, [safeTxError])\n\n  return (\n    <SignOrExecuteForm onSubmit={onFormSubmit}>\n      <Grid\n        container\n        sx={{\n          gap: 1,\n          alignItems: 'center',\n        }}\n      >\n        <Grid item xs={2}>\n          Module\n        </Grid>\n        <Typography variant=\"body2\" component=\"div\">\n          <EthHashInfo address={params.address} shortAddress={false} hasExplorer showCopyButton />\n        </Typography>\n      </Grid>\n      <Typography\n        sx={{\n          my: 2,\n        }}\n      >\n        After removing this module, any feature or app that uses this module might no longer work. If this Safe Account\n        requires more then one signature, the module removal will have to be confirmed by other signers as well.\n      </Typography>\n    </SignOrExecuteForm>\n  )\n}\n","import TxLayout from '@/components/tx-flow/common/TxLayout'\nimport { ReviewRemoveModule } from './ReviewRemoveModule'\n\nexport type RemoveModuleFlowProps = {\n  address: string\n}\n\nconst RemoveModuleFlow = ({ address }: RemoveModuleFlowProps) => {\n  return (\n    <TxLayout title=\"Confirm transaction\" subtitle=\"Remove module\">\n      <ReviewRemoveModule params={{ address }} />\n    </TxLayout>\n  )\n}\n\nexport default RemoveModuleFlow\n"],"names":["onFormSubmit","trackEvent","SETTINGS_EVENTS","MODULES","REMOVE_MODULE","ReviewRemoveModule","params","setSafeTx","safeTxError","setSafeTxError","useContext","SafeTxContext","useEffect","createRemoveModuleTx","address","then","catch","logError","Errors","_806","message","SignOrExecuteForm","onSubmit","Grid","container","sx","gap","alignItems","item","xs","Typography","variant","component","EthHashInfo","shortAddress","hasExplorer","showCopyButton","my","RemoveModuleFlow","TxLayout","title","subtitle"],"sourceRoot":"","ignoreList":[]}