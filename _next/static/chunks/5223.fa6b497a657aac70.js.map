{"version":3,"file":"static/chunks/5223.fa6b497a657aac70.js","mappings":"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","sources":["webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/BlockedAddress/index.tsx","webpack://_N_E/./src/components/common/Disclaimer/index.tsx","webpack://_N_E/./src/components/common/WidgetDisclaimer/index.tsx","webpack://_N_E/./src/features/stake/useStakeConsent.ts","webpack://_N_E/./src/features/stake/hooks/useGetStakeWidgetUrl.ts","webpack://_N_E/./src/features/stake/components/StakingWidget/index.tsx","webpack://_N_E/./src/features/stake/components/StakePage/index.tsx","webpack://_N_E/./src/components/common/Disclaimer/styles.module.css","webpack://_N_E/./src/components/common/WidgetDisclaimer/styles.module.css"],"sourcesContent":["export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import type { ReactElement } from 'react'\nimport { useMediaQuery, useTheme } from '@mui/material'\nimport { shortenAddress } from '@/utils/formatters'\nimport { useRouter } from 'next/router'\nimport Disclaimer from '@/components/common/Disclaimer'\nimport { AppRoutes } from '@/config/routes'\n\nexport const BlockedAddress = ({\n  address,\n  featureTitle,\n  onClose,\n}: {\n  address: string\n  featureTitle: string\n  onClose?: () => void\n}): ReactElement => {\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\n  const displayAddress = address && isMobile ? shortenAddress(address) : address\n  const router = useRouter()\n\n  const handleAccept = () => {\n    router.push({ pathname: AppRoutes.home, query: router.query })\n  }\n\n  return (\n    <Disclaimer\n      title=\"Blocked address\"\n      subtitle={displayAddress}\n      content={`The above address is part of the OFAC SDN list and the ${featureTitle} is unavailable for sanctioned addresses.`}\n      onAccept={onClose ?? handleAccept}\n    />\n  )\n}\n\nexport default BlockedAddress\n","import type { ReactElement, ReactNode } from 'react'\nimport { Box, Button, Divider, Paper, Stack, SvgIcon, Typography } from '@mui/material'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport css from './styles.module.css'\n\nexport const Disclaimer = ({\n  title,\n  subtitle,\n  buttonText,\n  content,\n  onAccept,\n}: {\n  title: string\n  subtitle?: string\n  buttonText?: string\n  content: ReactNode\n  onAccept: () => void\n}): ReactElement => {\n  return (\n    <div className={css.container}>\n      <Paper sx={{ maxWidth: '500px' }}>\n        <Stack\n          sx={[\n            {\n              padding: 'var(--space-3)',\n              gap: 2,\n              display: 'flex',\n              alignItems: 'center',\n            },\n            ({ palette }) => ({ borderBottom: `1px solid ${palette.border.light}` }),\n          ]}\n        >\n          {subtitle && (\n            <Typography\n              sx={{\n                color: 'var(--color-text-secondary)',\n              }}\n            >\n              {subtitle}\n            </Typography>\n          )}\n\n          <Box className={css.iconCircle}>\n            <SvgIcon component={InfoIcon} inheritViewBox fontSize=\"medium\" />\n          </Box>\n          <Typography\n            variant=\"h3\"\n            sx={{\n              fontWeight: 700,\n            }}\n          >\n            {title}\n          </Typography>\n          <Typography variant=\"body2\">{content}</Typography>\n          <Divider />\n        </Stack>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 3,\n            pb: 2,\n          }}\n        >\n          <Button variant=\"contained\" size=\"small\" sx={{ px: '16px' }} onClick={onAccept}>\n            {buttonText || 'Got it'}\n          </Button>\n        </Box>\n      </Paper>\n    </div>\n  )\n}\n\nexport default Disclaimer\n","import ExternalLink from '@/components/common/ExternalLink'\nimport { AppRoutes } from '@/config/routes'\nimport { Typography } from '@mui/material'\n\nimport css from './styles.module.css'\n\nconst linkSx = {\n  textDecoration: 'none',\n}\n\nconst WidgetDisclaimer = ({ widgetName }: { widgetName: string }) => (\n  <div className={css.disclaimerContainer}>\n    <div className={css.disclaimerInner}>\n      <Typography mb={4} mt={4}>\n        You are now accessing a third party widget.\n      </Typography>\n\n      <Typography mb={4}>\n        Please note that we do not own, control, maintain or audit the {widgetName}. Use of the widget is subject to\n        third party terms & conditions. We are not liable for any loss you may suffer in connection with interacting\n        with the widget, which is at your own risk.\n      </Typography>\n\n      <Typography mb={4}>\n        Our{' '}\n        <ExternalLink href={AppRoutes.terms} sx={linkSx}>\n          terms\n        </ExternalLink>{' '}\n        contain more detailed provisions binding on you relating to such third party content.\n      </Typography>\n      <Typography>\n        By clicking &quot;continue&quot; you re-confirm to have read and understood our{' '}\n        <ExternalLink href={AppRoutes.terms} sx={linkSx}>\n          terms\n        </ExternalLink>{' '}\n        and this message, and agree to them.\n      </Typography>\n    </div>\n  </div>\n)\n\nexport default WidgetDisclaimer\n","import { localItem } from '@/services/local-storage/local'\nimport { useCallback, useEffect, useState } from 'react'\n\nconst STAKE_CONSENT_STORAGE_KEY = 'stakeDisclaimerAcceptedV1'\nconst stakeConsentStorage = localItem<boolean>(STAKE_CONSENT_STORAGE_KEY)\n\nconst useStakeConsent = (): {\n  isConsentAccepted: boolean | undefined\n  onAccept: () => void\n} => {\n  const [isConsentAccepted, setIsConsentAccepted] = useState<boolean | undefined>()\n\n  const onAccept = useCallback(() => {\n    setIsConsentAccepted(true)\n    stakeConsentStorage.set(true)\n  }, [setIsConsentAccepted])\n\n  useEffect(() => {\n    setIsConsentAccepted(stakeConsentStorage.get() || false)\n  }, [setIsConsentAccepted])\n\n  return {\n    isConsentAccepted,\n    onAccept,\n  }\n}\n\nexport default useStakeConsent\n","import { useDarkMode } from '@/hooks/useDarkMode'\nimport useChainId from '@/hooks/useChainId'\nimport useChains from '@/hooks/useChains'\nimport { useMemo } from 'react'\nimport { WIDGET_PRODUCTION_URL, WIDGET_TESTNET_URL } from '@/features/stake/constants'\n\nexport const useGetStakeWidgetUrl = (asset?: string) => {\n  let url = WIDGET_PRODUCTION_URL\n  const isDarkMode = useDarkMode()\n  const currentChainId = useChainId()\n  const { configs } = useChains()\n  const testChains = useMemo(() => configs.filter((chain) => chain.isTestnet), [configs])\n  if (testChains.some((chain) => chain.chainId === currentChainId)) {\n    url = WIDGET_TESTNET_URL\n  }\n  const params = new URLSearchParams()\n  params.append('theme', isDarkMode ? 'dark' : 'light')\n\n  if (asset) {\n    params.append('asset', asset)\n  }\n\n  return url + '?' + params.toString()\n}\n","import { useMemo } from 'react'\nimport AppFrame from '@/components/safe-apps/AppFrame'\nimport { getEmptySafeApp } from '@/components/safe-apps/utils'\nimport { useGetStakeWidgetUrl } from '@/features/stake/hooks/useGetStakeWidgetUrl'\nimport { widgetAppData } from '@/features/stake/constants'\n\nconst StakingWidget = ({ asset }: { asset?: string }) => {\n  const url = useGetStakeWidgetUrl(asset)\n\n  const appData = useMemo(\n    () => ({\n      ...getEmptySafeApp(),\n      ...widgetAppData,\n      url,\n    }),\n    [url],\n  )\n\n  return (\n    <AppFrame\n      appUrl={appData.url}\n      allowedFeaturesList=\"clipboard-read; clipboard-write\"\n      safeAppFromManifest={appData}\n      isNativeEmbed\n    />\n  )\n}\n\nexport default StakingWidget\n","import { Stack } from '@mui/material'\nimport Disclaimer from '@/components/common/Disclaimer'\nimport WidgetDisclaimer from '@/components/common/WidgetDisclaimer'\nimport useStakeConsent from '@/features/stake/useStakeConsent'\nimport StakingWidget from '../StakingWidget'\nimport { useRouter } from 'next/router'\nimport { useGetIsSanctionedQuery } from '@/store/api/ofac'\nimport { skipToken } from '@reduxjs/toolkit/query/react'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { getKeyWithTrueValue } from '@/utils/helpers'\nimport BlockedAddress from '@/components/common/BlockedAddress'\n\nconst StakePage = () => {\n  const { isConsentAccepted, onAccept } = useStakeConsent()\n  const router = useRouter()\n  const { asset } = router.query\n\n  const { safeAddress } = useSafeInfo()\n  const wallet = useWallet()\n\n  const { data: isSafeAddressBlocked } = useGetIsSanctionedQuery(safeAddress || skipToken)\n  const { data: isWalletAddressBlocked } = useGetIsSanctionedQuery(wallet?.address || skipToken)\n  const blockedAddresses = {\n    [safeAddress]: !!isSafeAddressBlocked,\n    [wallet?.address || '']: !!isWalletAddressBlocked,\n  }\n\n  const blockedAddress = getKeyWithTrueValue(blockedAddresses)\n\n  if (blockedAddress) {\n    return (\n      <Stack\n        direction=\"column\"\n        sx={{\n          alignItems: 'center',\n          justifyContent: 'center',\n          flex: 1,\n        }}\n      >\n        <BlockedAddress address={blockedAddress} featureTitle=\"stake feature with Kiln\" />\n      </Stack>\n    )\n  }\n\n  return (\n    <>\n      {isConsentAccepted === undefined ? null : isConsentAccepted ? (\n        <StakingWidget asset={String(asset)} />\n      ) : (\n        <Stack\n          direction=\"column\"\n          sx={{\n            alignItems: 'center',\n            justifyContent: 'center',\n            flex: 1,\n          }}\n        >\n          <Disclaimer\n            title=\"Note\"\n            content={<WidgetDisclaimer widgetName=\"Stake Widget by Kiln\" />}\n            onAccept={onAccept}\n            buttonText=\"Continue\"\n          />\n        </Stack>\n      )}\n    </>\n  )\n}\n\nexport default StakePage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3Fkdw\",\"iconCircle\":\"styles_iconCircle__GFs_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disclaimerContainer\":\"styles_disclaimerContainer__rduxs\",\"disclaimerInner\":\"styles_disclaimerInner__LMD0U\"};"],"names":["address","BlockedAddress","featureTitle","onClose","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","displayAddress","shortenAddress","router","useRouter","Disclaimer","title","subtitle","content","onAccept","push","handleAccept","pathname","AppRoutes","home","query","buttonText","div","className","css","Paper","sx","maxWidth","Stack","padding","gap","display","alignItems","palette","borderBottom","border","light","Typography","color","Box","SvgIcon","component","InfoIcon","inheritViewBox","fontSize","variant","fontWeight","Divider","justifyContent","pt","pb","Button","size","px","onClick","linkSx","textDecoration","widgetName","WidgetDisclaimer","mb","mt","ExternalLink","href","terms","stakeConsentStorage","localItem","STAKE_CONSENT_STORAGE_KEY","isConsentAccepted","setIsConsentAccepted","useState","useStakeConsent","useCallback","set","useEffect","get","useGetStakeWidgetUrl","url","WIDGET_PRODUCTION_URL","isDarkMode","useDarkMode","currentChainId","useChainId","configs","useChains","useMemo","filter","chain","isTestnet","some","chainId","WIDGET_TESTNET_URL","URLSearchParams","params","append","asset","toString","appData","StakingWidget","getEmptySafeApp","widgetAppData","AppFrame","appUrl","allowedFeaturesList","safeAppFromManifest","isNativeEmbed","StakePage","safeAddress","useSafeInfo","wallet","useWallet","data","isSafeAddressBlocked","useGetIsSanctionedQuery","skipToken","isWalletAddressBlocked","blockedAddresses","blockedAddress","getKeyWithTrueValue","direction","flex","undefined","String"],"sourceRoot":"","ignoreList":[]}