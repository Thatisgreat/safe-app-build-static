{"version":3,"file":"static/chunks/130-e70baf555ae9f5f6.js","mappings":"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","sources":["webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/new-safe/ReviewRow/index.tsx","webpack://_N_E/./src/components/new-safe/create/NetworkWarning/index.tsx","webpack://_N_E/./src/components/new-safe/create/logic/utils.ts","webpack://_N_E/./src/components/new-safe/create/steps/ReviewStep/index.tsx","webpack://_N_E/./src/components/new-safe/create/useEstimateSafeCreationGas.ts","webpack://_N_E/./src/components/new-safe/create/useSyncSafeCreationStep.ts","webpack://_N_E/./src/components/tx/SponsoredBy/index.tsx","webpack://_N_E/./src/components/tx/RemainingRelays/index.tsx","webpack://_N_E/./src/components/tx/BalanceInfo/index.tsx","webpack://_N_E/./src/components/tx/ExecutionMethodSelector/index.tsx","webpack://_N_E/./src/hooks/useGasPrice.ts","webpack://_N_E/./src/hooks/useRemainingRelays.ts","webpack://_N_E/./src/hooks/useWalletCanPay.ts","webpack://_N_E/./src/hooks/wallets/useWalletBalance.ts","webpack://_N_E/./src/utils/relaying.ts","webpack://_N_E/./src/components/new-safe/create/steps/ReviewStep/styles.module.css","webpack://_N_E/./src/components/new-safe/create/styles.module.css","webpack://_N_E/./src/components/tx/BalanceInfo/styles.module.css","webpack://_N_E/./src/components/tx/ExecutionMethodSelector/styles.module.css","webpack://_N_E/./src/components/tx/SponsoredBy/styles.module.css"],"sourcesContent":["export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import React, { type ReactElement } from 'react'\nimport { Grid, Typography } from '@mui/material'\n\nconst ReviewRow = ({ name, value }: { name?: string; value: ReactElement }) => {\n  return (\n    <>\n      {name && (\n        <Grid item xs={3}>\n          <Typography variant=\"body2\">{name}</Typography>\n        </Grid>\n      )}\n      <Grid item xs={name ? 9 : 12}>\n        {value}\n      </Grid>\n    </>\n  )\n}\n\nexport default ReviewRow\n","import { Alert, AlertTitle, Box } from '@mui/material'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport ChainSwitcher from '@/components/common/ChainSwitcher'\nimport useIsWrongChain from '@/hooks/useIsWrongChain'\n\nconst NetworkWarning = ({ action }: { action?: string }) => {\n  const chain = useCurrentChain()\n  const isWrongChain = useIsWrongChain()\n\n  if (!chain || !isWrongChain) return null\n\n  return (\n    <Alert severity=\"warning\">\n      <AlertTitle sx={{ fontWeight: 700 }}>Change your wallet network</AlertTitle>You are trying to{' '}\n      {action || 'sign or execute a transaction'} on {chain.chainName}. Make sure that your wallet is set to the same\n      network.\n      <Box\n        sx={{\n          mt: 2,\n        }}\n      >\n        <ChainSwitcher />\n      </Box>\n    </Alert>\n  )\n}\n\nexport default NetworkWarning\n","import { isSmartContract } from '@/utils/wallets'\nimport { type ChainInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport { sameAddress } from '@/utils/addresses'\nimport { createWeb3ReadOnly, getRpcServiceUrl } from '@/hooks/wallets/web3'\nimport { type ReplayedSafeProps } from '@/store/slices'\nimport { predictAddressBasedOnReplayData } from '@/features/multichain/utils/utils'\nimport chains from '@/config/chains'\nimport { computeNewSafeAddress } from '.'\n\nexport const getAvailableSaltNonce = async (\n  customRpcs: {\n    [chainId: string]: string\n  },\n  replayedSafe: ReplayedSafeProps,\n  chainInfos: ChainInfo[],\n  // All addresses from the sidebar disregarding the chain. This is an optimization to reduce RPC calls\n  knownSafeAddresses: string[],\n): Promise<string> => {\n  let isAvailableOnAllChains = true\n  const allRPCs = chainInfos.map((chain) => {\n    const rpcUrl = customRpcs?.[chain.chainId] || getRpcServiceUrl(chain.rpcUri)\n    // Turn into Eip1993Provider\n    return {\n      rpcUrl,\n      chainId: chain.chainId,\n    }\n  })\n\n  for (const chain of chainInfos) {\n    const rpcUrl = allRPCs.find((rpc) => chain.chainId === rpc.chainId)?.rpcUrl\n    if (!rpcUrl) {\n      throw new Error(`No RPC available for  ${chain.chainName}`)\n    }\n    const web3ReadOnly = createWeb3ReadOnly(chain, rpcUrl)\n    if (!web3ReadOnly) {\n      throw new Error('Could not initiate RPC')\n    }\n    let safeAddress: string\n    if (chain.chainId === chains['zksync']) {\n      // ZK-sync is using a different create2 method which is supported by the SDK\n      safeAddress = await computeNewSafeAddress(\n        rpcUrl,\n        {\n          safeAccountConfig: replayedSafe.safeAccountConfig,\n          saltNonce: replayedSafe.saltNonce,\n        },\n        chain,\n        replayedSafe.safeVersion,\n      )\n    } else {\n      safeAddress = await predictAddressBasedOnReplayData(replayedSafe, web3ReadOnly)\n    }\n    const isKnown = knownSafeAddresses.some((knownAddress) => sameAddress(knownAddress, safeAddress))\n    if (isKnown || (await isSmartContract(safeAddress, web3ReadOnly))) {\n      // We found a chain where the nonce is used up\n      isAvailableOnAllChains = false\n      break\n    }\n  }\n\n  // Safe is already deployed so we try the next saltNonce\n  if (!isAvailableOnAllChains) {\n    return getAvailableSaltNonce(\n      customRpcs,\n      { ...replayedSafe, saltNonce: (Number(replayedSafe.saltNonce) + 1).toString() },\n      chainInfos,\n      knownSafeAddresses,\n    )\n  }\n\n  return replayedSafe.saltNonce\n}\n","import type { NamedAddress } from '@/components/new-safe/create/types'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { safeCreationDispatch, SafeCreationEvent } from '@/features/counterfactual/services/safeCreationEvents'\nimport NetworkLogosList from '@/features/multichain/components/NetworkLogosList'\nimport { getTotalFeeFormatted } from '@/hooks/useGasPrice'\nimport type { StepRenderProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { NewSafeFormData } from '@/components/new-safe/create'\nimport {\n  computeNewSafeAddress,\n  createNewSafe,\n  createNewUndeployedSafeWithoutSalt,\n  relaySafeCreation,\n} from '@/components/new-safe/create/logic'\nimport { getAvailableSaltNonce } from '@/components/new-safe/create/logic/utils'\nimport css from '@/components/new-safe/create/steps/ReviewStep/styles.module.css'\nimport layoutCss from '@/components/new-safe/create/styles.module.css'\nimport { useEstimateSafeCreationGas } from '@/components/new-safe/create/useEstimateSafeCreationGas'\nimport useSyncSafeCreationStep from '@/components/new-safe/create/useSyncSafeCreationStep'\nimport ReviewRow from '@/components/new-safe/ReviewRow'\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport { ExecutionMethod, ExecutionMethodSelector } from '@/components/tx/ExecutionMethodSelector'\nimport PayNowPayLater, { PayMethod } from '@/features/counterfactual/PayNowPayLater'\nimport { CF_TX_GROUP_KEY, replayCounterfactualSafeDeployment } from '@/features/counterfactual/utils'\nimport { useCurrentChain, useHasFeature } from '@/hooks/useChains'\nimport useGasPrice from '@/hooks/useGasPrice'\nimport useIsWrongChain from '@/hooks/useIsWrongChain'\nimport { useLeastRemainingRelays } from '@/hooks/useRemainingRelays'\nimport useWalletCanPay from '@/hooks/useWalletCanPay'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { CREATE_SAFE_CATEGORY, CREATE_SAFE_EVENTS, OVERVIEW_EVENTS, trackEvent } from '@/services/analytics'\nimport { gtmSetChainId, gtmSetSafeAddress } from '@/services/analytics/gtm'\nimport { asError } from '@/services/exceptions/utils'\nimport { useAppDispatch, useAppSelector } from '@/store'\nimport { FEATURES, hasFeature } from '@/utils/chains'\nimport { hasRemainingRelays } from '@/utils/relaying'\nimport { isWalletRejection } from '@/utils/wallets'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport { Box, Button, CircularProgress, Divider, Grid, Tooltip, Typography } from '@mui/material'\nimport { type ChainInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport classnames from 'classnames'\nimport { useRouter } from 'next/router'\nimport { useMemo, useState } from 'react'\nimport ChainIndicator from '@/components/common/ChainIndicator'\nimport NetworkWarning from '../../NetworkWarning'\nimport useAllSafes from '@/features/myAccounts/hooks/useAllSafes'\nimport uniq from 'lodash/uniq'\nimport { selectRpc } from '@/store/settingsSlice'\nimport { AppRoutes } from '@/config/routes'\nimport { type ReplayedSafeProps } from '@/store/slices'\nimport { predictAddressBasedOnReplayData } from '@/features/multichain/utils/utils'\nimport { createWeb3ReadOnly, getRpcServiceUrl } from '@/hooks/wallets/web3'\nimport { type DeploySafeProps } from '@safe-global/protocol-kit'\nimport { updateAddressBook } from '../../logic/address-book'\nimport chains from '@/config/chains'\n\nexport const NetworkFee = ({\n  totalFee,\n  chain,\n  isWaived,\n  inline = false,\n}: {\n  totalFee: string\n  chain: ChainInfo | undefined\n  isWaived: boolean\n  inline?: boolean\n}) => {\n  return (\n    <Box className={classnames(css.networkFee, { [css.networkFeeInline]: inline })}>\n      <Typography className={classnames({ [css.strikethrough]: isWaived })}>\n        <b>\n          &asymp; {totalFee} {chain?.nativeCurrency.symbol}\n        </b>\n      </Typography>\n    </Box>\n  )\n}\n\nexport const SafeSetupOverview = ({\n  name,\n  owners,\n  threshold,\n  networks,\n}: {\n  name?: string\n  owners: NamedAddress[]\n  threshold: number\n  networks: ChainInfo[]\n}) => {\n  return (\n    <Grid container spacing={3}>\n      <ReviewRow\n        name={networks.length > 1 ? 'Networks' : 'Network'}\n        value={\n          <Tooltip\n            title={\n              <Box>\n                {networks.map((safeItem) => (\n                  <Box\n                    key={safeItem.chainId}\n                    sx={{\n                      p: '4px 0px',\n                    }}\n                  >\n                    <ChainIndicator chainId={safeItem.chainId} />\n                  </Box>\n                ))}\n              </Box>\n            }\n            arrow\n          >\n            <Box\n              data-testid=\"network-list\"\n              sx={{\n                display: 'inline-block',\n              }}\n            >\n              <NetworkLogosList networks={networks} />\n            </Box>\n          </Tooltip>\n        }\n      />\n      {name && <ReviewRow name=\"Name\" value={<Typography data-testid=\"review-step-safe-name\">{name}</Typography>} />}\n      <ReviewRow\n        name=\"Signers\"\n        value={\n          <Box data-testid=\"review-step-owner-info\" className={css.ownersArray}>\n            {owners.map((owner, index) => (\n              <EthHashInfo\n                address={owner.address}\n                name={owner.name || owner.ens}\n                shortAddress={false}\n                showPrefix={false}\n                showName\n                hasExplorer\n                showCopyButton\n                key={index}\n              />\n            ))}\n          </Box>\n        }\n      />\n      <ReviewRow\n        name=\"Threshold\"\n        value={\n          <Typography data-testid=\"review-step-threshold\">\n            {threshold} out of {owners.length} {owners.length > 1 ? 'signers' : 'signer'}\n          </Typography>\n        }\n      />\n    </Grid>\n  )\n}\n\nconst ReviewStep = ({ data, onSubmit, onBack, setStep }: StepRenderProps<NewSafeFormData>) => {\n  const isWrongChain = useIsWrongChain()\n  useSyncSafeCreationStep(setStep, data.networks)\n  const chain = useCurrentChain()\n  const wallet = useWallet()\n  const dispatch = useAppDispatch()\n  const router = useRouter()\n  const [gasPrice] = useGasPrice()\n  const customRpc = useAppSelector(selectRpc)\n  const [payMethod, setPayMethod] = useState(PayMethod.PayLater)\n  const [executionMethod, setExecutionMethod] = useState(ExecutionMethod.RELAY)\n  const [isCreating, setIsCreating] = useState<boolean>(false)\n  const [submitError, setSubmitError] = useState<string>()\n  const isCounterfactualEnabled = useHasFeature(FEATURES.COUNTERFACTUAL)\n  const isEIP1559 = chain && hasFeature(chain, FEATURES.EIP1559)\n\n  const ownerAddresses = useMemo(() => data.owners.map((owner) => owner.address), [data.owners])\n  const [minRelays] = useLeastRemainingRelays(ownerAddresses)\n\n  const isMultiChainDeployment = data.networks.length > 1\n\n  // Every owner has remaining relays and relay method is selected\n  const canRelay = hasRemainingRelays(minRelays)\n  const willRelay = canRelay && executionMethod === ExecutionMethod.RELAY\n\n  const newSafeProps = useMemo(\n    () =>\n      chain\n        ? createNewUndeployedSafeWithoutSalt(\n            data.safeVersion,\n            {\n              owners: data.owners.map((owner) => owner.address),\n              threshold: data.threshold,\n              paymentReceiver: data.paymentReceiver,\n            },\n            chain,\n          )\n        : undefined,\n    [chain, data.owners, data.safeVersion, data.threshold, data.paymentReceiver],\n  )\n\n  const safePropsForGasEstimation = useMemo(() => {\n    return newSafeProps\n      ? {\n          ...newSafeProps,\n          saltNonce: Date.now().toString(),\n        }\n      : undefined\n  }, [newSafeProps])\n\n  // We estimate with a random nonce as we'll just slightly overestimates like this\n  const { gasLimit } = useEstimateSafeCreationGas(safePropsForGasEstimation, data.safeVersion)\n\n  const maxFeePerGas = gasPrice?.maxFeePerGas\n  const maxPriorityFeePerGas = gasPrice?.maxPriorityFeePerGas\n\n  const walletCanPay = useWalletCanPay({ gasLimit, maxFeePerGas })\n\n  const totalFee = getTotalFeeFormatted(maxFeePerGas, gasLimit, chain)\n\n  const allSafes = useAllSafes()\n  const knownAddresses = useMemo(() => uniq(allSafes?.map((safe) => safe.address)), [allSafes])\n\n  const customRPCs = useAppSelector(selectRpc)\n\n  const handleBack = () => {\n    onBack(data)\n  }\n\n  const handleCreateSafeClick = async () => {\n    try {\n      if (!wallet || !chain || !newSafeProps) return\n\n      setIsCreating(true)\n\n      // Figure out the shared available nonce across chains\n      const nextAvailableNonce =\n        data.saltNonce !== undefined\n          ? data.saltNonce.toString()\n          : await getAvailableSaltNonce(customRPCs, { ...newSafeProps, saltNonce: '0' }, data.networks, knownAddresses)\n\n      const replayedSafeWithNonce = { ...newSafeProps, saltNonce: nextAvailableNonce }\n\n      const customRpcUrl = customRpc[chain.chainId]\n      const provider = createWeb3ReadOnly(chain, customRpcUrl)\n      if (!provider) return\n\n      let safeAddress: string\n\n      if (chain.chainId === chains['zksync']) {\n        safeAddress = await computeNewSafeAddress(\n          customRpcUrl || getRpcServiceUrl(chain.rpcUri),\n          {\n            safeAccountConfig: replayedSafeWithNonce.safeAccountConfig,\n            saltNonce: nextAvailableNonce,\n          },\n          chain,\n          replayedSafeWithNonce.safeVersion,\n        )\n      } else {\n        safeAddress = await predictAddressBasedOnReplayData(replayedSafeWithNonce, provider)\n      }\n\n      for (const network of data.networks) {\n        await createSafe(network, replayedSafeWithNonce, safeAddress)\n      }\n\n      // Update addressbook with owners and Safe on all chosen networks\n      dispatch(\n        updateAddressBook(\n          data.networks.map((network) => network.chainId),\n          safeAddress,\n          data.name,\n          data.owners,\n          data.threshold,\n        ),\n      )\n\n      gtmSetChainId(chain.chainId)\n\n      if (isCounterfactualEnabled && payMethod === PayMethod.PayLater) {\n        await router?.push({\n          pathname: AppRoutes.home,\n          query: { safe: `${data.networks[0].shortName}:${safeAddress}` },\n        })\n        safeCreationDispatch(SafeCreationEvent.AWAITING_EXECUTION, {\n          groupKey: CF_TX_GROUP_KEY,\n          safeAddress,\n          networks: data.networks,\n        })\n      }\n    } catch (err) {\n      console.error(err)\n      setSubmitError('Error creating the Safe Account. Please try again later.')\n    } finally {\n      setIsCreating(false)\n    }\n  }\n\n  const createSafe = async (chain: ChainInfo, props: ReplayedSafeProps, safeAddress: string) => {\n    if (!wallet) return\n\n    gtmSetChainId(chain.chainId)\n\n    try {\n      if (isCounterfactualEnabled && payMethod === PayMethod.PayLater) {\n        gtmSetSafeAddress(safeAddress)\n\n        trackEvent({ ...OVERVIEW_EVENTS.PROCEED_WITH_TX, label: 'counterfactual', category: CREATE_SAFE_CATEGORY })\n        replayCounterfactualSafeDeployment(chain.chainId, safeAddress, props, data.name, dispatch, payMethod)\n        trackEvent({ ...CREATE_SAFE_EVENTS.CREATED_SAFE, label: 'counterfactual' })\n        return\n      }\n\n      const options: DeploySafeProps['options'] = isEIP1559\n        ? {\n            maxFeePerGas: maxFeePerGas?.toString(),\n            maxPriorityFeePerGas: maxPriorityFeePerGas?.toString(),\n            gasLimit: gasLimit?.toString(),\n          }\n        : { gasPrice: maxFeePerGas?.toString(), gasLimit: gasLimit?.toString() }\n\n      const onSubmitCallback = async (taskId?: string, txHash?: string) => {\n        // Create a counterfactual Safe\n        replayCounterfactualSafeDeployment(chain.chainId, safeAddress, props, data.name, dispatch, payMethod)\n\n        if (taskId) {\n          safeCreationDispatch(SafeCreationEvent.RELAYING, { groupKey: CF_TX_GROUP_KEY, taskId, safeAddress })\n        }\n\n        if (txHash) {\n          safeCreationDispatch(SafeCreationEvent.PROCESSING, {\n            groupKey: CF_TX_GROUP_KEY,\n            txHash,\n            safeAddress,\n          })\n        }\n\n        trackEvent(CREATE_SAFE_EVENTS.SUBMIT_CREATE_SAFE)\n        trackEvent({ ...OVERVIEW_EVENTS.PROCEED_WITH_TX, label: 'deployment', category: CREATE_SAFE_CATEGORY })\n\n        onSubmit(data)\n      }\n\n      if (willRelay) {\n        const taskId = await relaySafeCreation(chain, props)\n        onSubmitCallback(taskId)\n      } else {\n        await createNewSafe(\n          wallet.provider,\n          props,\n          data.safeVersion,\n          chain,\n          options,\n          (txHash) => {\n            onSubmitCallback(undefined, txHash)\n          },\n          true,\n        )\n      }\n    } catch (_err) {\n      const error = asError(_err)\n      const submitError = isWalletRejection(error)\n        ? 'User rejected signing.'\n        : 'Error creating the Safe Account. Please try again later.'\n      setSubmitError(submitError)\n\n      if (isWalletRejection(error)) {\n        trackEvent(CREATE_SAFE_EVENTS.REJECT_CREATE_SAFE)\n      }\n    }\n\n    setIsCreating(false)\n  }\n\n  const showNetworkWarning =\n    (isWrongChain && payMethod === PayMethod.PayNow && !willRelay && !isMultiChainDeployment) ||\n    (isWrongChain && !isCounterfactualEnabled && !isMultiChainDeployment)\n\n  const isDisabled = showNetworkWarning || isCreating\n\n  return (\n    <>\n      <Box data-testid=\"safe-setup-overview\" className={layoutCss.row}>\n        <SafeSetupOverview name={data.name} owners={data.owners} threshold={data.threshold} networks={data.networks} />\n      </Box>\n      {isCounterfactualEnabled && (\n        <>\n          <Divider />\n          <Box data-testid=\"pay-now-later-message-box\" className={layoutCss.row}>\n            <PayNowPayLater\n              totalFee={totalFee}\n              isMultiChain={isMultiChainDeployment}\n              canRelay={canRelay}\n              payMethod={payMethod}\n              setPayMethod={setPayMethod}\n            />\n\n            {canRelay && payMethod === PayMethod.PayNow && (\n              <>\n                <Grid\n                  container\n                  spacing={3}\n                  sx={{\n                    pt: 2,\n                  }}\n                >\n                  <ReviewRow\n                    value={\n                      <ExecutionMethodSelector\n                        executionMethod={executionMethod}\n                        setExecutionMethod={setExecutionMethod}\n                        relays={minRelays}\n                      />\n                    }\n                  />\n                </Grid>\n              </>\n            )}\n\n            {showNetworkWarning && (\n              <Box sx={{ '&:not(:empty)': { mt: 3 } }}>\n                <NetworkWarning action=\"create a Safe Account\" />\n              </Box>\n            )}\n\n            {payMethod === PayMethod.PayNow && (\n              <Grid item>\n                <Typography\n                  component=\"div\"\n                  sx={{\n                    mt: 2,\n                  }}\n                >\n                  You will have to confirm a transaction and pay an estimated fee of{' '}\n                  <NetworkFee totalFee={totalFee} isWaived={willRelay} chain={chain} inline /> with your connected\n                  wallet\n                </Typography>\n              </Grid>\n            )}\n          </Box>\n        </>\n      )}\n      {!isCounterfactualEnabled && (\n        <>\n          <Divider />\n          <Box\n            className={layoutCss.row}\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 3,\n            }}\n          >\n            {canRelay && (\n              <Grid container spacing={3}>\n                <ReviewRow\n                  name=\"Execution method\"\n                  value={\n                    <ExecutionMethodSelector\n                      executionMethod={executionMethod}\n                      setExecutionMethod={setExecutionMethod}\n                      relays={minRelays}\n                    />\n                  }\n                />\n              </Grid>\n            )}\n\n            <Grid data-testid=\"network-fee-section\" container spacing={3}>\n              <ReviewRow\n                name=\"Est. network fee\"\n                value={\n                  <>\n                    <NetworkFee totalFee={totalFee} isWaived={willRelay} chain={chain} />\n\n                    {!willRelay && (\n                      <Typography\n                        variant=\"body2\"\n                        sx={{\n                          color: 'text.secondary',\n                          mt: 1,\n                        }}\n                      >\n                        You will have to confirm a transaction with your connected wallet.\n                      </Typography>\n                    )}\n                  </>\n                }\n              />\n            </Grid>\n\n            {showNetworkWarning && <NetworkWarning action=\"create a Safe Account\" />}\n\n            {!walletCanPay && !willRelay && (\n              <ErrorMessage>\n                Your connected wallet doesn&apos;t have enough funds to execute this transaction\n              </ErrorMessage>\n            )}\n          </Box>\n        </>\n      )}\n      <Divider />\n      <Box className={layoutCss.row}>\n        {submitError && <ErrorMessage className={css.errorMessage}>{submitError}</ErrorMessage>}\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            gap: 3,\n          }}\n        >\n          <Button\n            data-testid=\"back-btn\"\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={handleBack}\n            startIcon={<ArrowBackIcon fontSize=\"small\" />}\n          >\n            Back\n          </Button>\n          <Button\n            data-testid=\"review-step-next-btn\"\n            onClick={handleCreateSafeClick}\n            variant=\"contained\"\n            size=\"stretched\"\n            disabled={isDisabled}\n          >\n            {isCreating ? <CircularProgress size={18} /> : 'Create account'}\n          </Button>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default ReviewStep\n","import { useWeb3ReadOnly } from '@/hooks/wallets/web3'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport useAsync from '@/hooks/useAsync'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { estimateSafeCreationGas } from '@/components/new-safe/create/logic'\nimport { type SafeVersion } from '@safe-global/safe-core-sdk-types'\nimport { type UndeployedSafeProps } from '@/store/slices'\n\nexport const useEstimateSafeCreationGas = (\n  undeployedSafe: UndeployedSafeProps | undefined,\n  safeVersion?: SafeVersion,\n): {\n  gasLimit?: bigint\n  gasLimitError?: Error\n  gasLimitLoading: boolean\n} => {\n  const web3ReadOnly = useWeb3ReadOnly()\n  const chain = useCurrentChain()\n  const wallet = useWallet()\n\n  const [gasLimit, gasLimitError, gasLimitLoading] = useAsync<bigint>(() => {\n    if (!wallet?.address || !chain || !web3ReadOnly || !undeployedSafe) return\n\n    return estimateSafeCreationGas(chain, web3ReadOnly, wallet.address, undeployedSafe, safeVersion)\n  }, [wallet?.address, chain, web3ReadOnly, undeployedSafe, safeVersion])\n\n  return { gasLimit, gasLimitError, gasLimitLoading }\n}\n","import { useEffect } from 'react'\nimport type { StepRenderProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { NewSafeFormData } from '@/components/new-safe/create/index'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport type { ChainInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport { useCurrentChain } from '@/hooks/useChains'\n\nconst useSyncSafeCreationStep = (setStep: StepRenderProps<NewSafeFormData>['setStep'], networks: ChainInfo[]) => {\n  const wallet = useWallet()\n  const currentChain = useCurrentChain()\n\n  useEffect(() => {\n    // Jump to choose name and network step if there is no pending Safe or if the selected network does not match the connected network\n    if (!wallet || (networks.length === 1 && currentChain?.chainId !== networks[0].chainId)) {\n      setStep(0)\n      return\n    }\n  }, [currentChain?.chainId, networks, setStep, wallet])\n}\n\nexport default useSyncSafeCreationStep\n","import chains from '@/config/chains'\nimport css from './styles.module.css'\n\nexport const RELAY_SPONSORS = {\n  [chains.gno]: {\n    name: 'Gnosis',\n    logo: '/images/common/gnosis-chain-logo.png',\n  },\n  default: {\n    name: 'Safe',\n    logo: '/images/logo-no-text.svg',\n  },\n}\n\nconst SponsoredBy = ({ chainId }: { chainId: string }) => {\n  const sponsor = RELAY_SPONSORS[chainId] || RELAY_SPONSORS.default\n\n  return (\n    <>\n      <img src={sponsor.logo} alt={sponsor.name} className={css.logo} /> {sponsor.name}\n    </>\n  )\n}\n\nexport default SponsoredBy\n","import { SvgIcon, Tooltip, Typography } from '@mui/material'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport { MAX_DAY_RELAYS } from '@/hooks/useRemainingRelays'\nimport css from '../BalanceInfo/styles.module.css'\nimport type { RelayCountResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport { maybePlural } from '@/utils/formatters'\n\nconst RemainingRelays = ({ relays, tooltip }: { relays?: RelayCountResponse; tooltip?: string }) => {\n  if (!tooltip) {\n    const limit = relays?.limit ?? MAX_DAY_RELAYS\n    tooltip = `${limit} transaction${maybePlural(limit)} per day for free`\n  }\n\n  return (\n    <div className={css.container}>\n      <Typography variant=\"body2\" color=\"primary.light\" display=\"flex\" alignItems=\"center\" gap={0.5}>\n        <b>{relays?.remaining ?? MAX_DAY_RELAYS}</b> free transactions left today\n        <Tooltip title={tooltip} placement=\"top\" arrow>\n          <span style={{ lineHeight: 0 }}>\n            <SvgIcon component={InfoIcon} inheritViewBox color=\"info\" fontSize=\"small\" sx={{ color: '#B2B5B2' }} />\n          </span>\n        </Tooltip>\n      </Typography>\n    </div>\n  )\n}\n\nexport default RemainingRelays\n","import { Typography } from '@mui/material'\nimport css from './styles.module.css'\nimport useWalletBalance from '@/hooks/wallets/useWalletBalance'\nimport WalletBalance from '@/components/common/WalletBalance'\n\n// TODO: Remove this component if not being used\nconst BalanceInfo = () => {\n  const [balance] = useWalletBalance()\n\n  return (\n    <div className={css.container}>\n      <Typography variant=\"body2\" color=\"primary.light\">\n        <b>Wallet balance:</b> <WalletBalance balance={balance} />\n      </Typography>\n    </div>\n  )\n}\n\nexport default BalanceInfo\n","import { Box, FormControl, FormControlLabel, Radio, RadioGroup, Typography } from '@mui/material'\nimport type { Dispatch, SetStateAction, ReactElement, ChangeEvent } from 'react'\n\nimport useWallet from '@/hooks/wallets/useWallet'\nimport WalletIcon from '@/components/common/WalletIcon'\nimport SponsoredBy from '../SponsoredBy'\nimport RemainingRelays from '../RemainingRelays'\n\nimport css from './styles.module.css'\nimport BalanceInfo from '@/components/tx/BalanceInfo'\nimport madProps from '@/utils/mad-props'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport type { ChainInfo, RelayCountResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { ConnectedWallet } from '@/hooks/wallets/useOnboard'\n\nexport const enum ExecutionMethod {\n  RELAY = 'RELAY',\n  WALLET = 'WALLET',\n}\n\nconst _ExecutionMethodSelector = ({\n  wallet,\n  chain,\n  executionMethod,\n  setExecutionMethod,\n  relays,\n  noLabel,\n  tooltip,\n}: {\n  wallet: ConnectedWallet | null\n  chain?: ChainInfo\n  executionMethod: ExecutionMethod\n  setExecutionMethod: Dispatch<SetStateAction<ExecutionMethod>>\n  relays?: RelayCountResponse\n  noLabel?: boolean\n  tooltip?: string\n}): ReactElement | null => {\n  const shouldRelay = executionMethod === ExecutionMethod.RELAY\n\n  const onChooseExecutionMethod = (_: ChangeEvent<HTMLInputElement>, newExecutionMethod: string) => {\n    setExecutionMethod(newExecutionMethod as ExecutionMethod)\n  }\n\n  return (\n    <Box className={css.container} sx={{ borderRadius: ({ shape }) => `${shape.borderRadius}px` }}>\n      <div className={css.method}>\n        <FormControl sx={{ display: 'flex' }}>\n          {!noLabel ? (\n            <Typography variant=\"body2\" className={css.label}>\n              Who will pay gas fees:\n            </Typography>\n          ) : null}\n\n          <RadioGroup row value={executionMethod} onChange={onChooseExecutionMethod}>\n            <FormControlLabel\n              data-testid=\"relay-execution-method\"\n              sx={{ flex: 1 }}\n              value={ExecutionMethod.RELAY}\n              label={\n                <Typography className={css.radioLabel} whiteSpace=\"nowrap\">\n                  Sponsored by\n                  <SponsoredBy chainId={chain?.chainId ?? ''} />\n                </Typography>\n              }\n              control={<Radio />}\n            />\n\n            <FormControlLabel\n              data-testid=\"connected-wallet-execution-method\"\n              sx={{ flex: 1 }}\n              value={ExecutionMethod.WALLET}\n              label={\n                <Typography className={css.radioLabel}>\n                  <WalletIcon provider={wallet?.label || ''} width={20} height={20} icon={wallet?.icon} /> Connected\n                  wallet\n                </Typography>\n              }\n              control={<Radio />}\n            />\n          </RadioGroup>\n        </FormControl>\n      </div>\n\n      {shouldRelay && relays ? <RemainingRelays relays={relays} tooltip={tooltip} /> : wallet ? <BalanceInfo /> : null}\n    </Box>\n  )\n}\n\nexport const ExecutionMethodSelector = madProps(_ExecutionMethodSelector, {\n  wallet: useWallet,\n  chain: useCurrentChain,\n})\n","import { formatVisualAmount } from '@/utils/formatters'\nimport { type FeeData } from 'ethers'\nimport type {\n  ChainInfo,\n  GasPrice,\n  GasPriceFixed,\n  GasPriceFixedEIP1559,\n  GasPriceOracle,\n} from '@safe-global/safe-gateway-typescript-sdk'\nimport { GAS_PRICE_TYPE } from '@safe-global/safe-gateway-typescript-sdk'\nimport useAsync, { type AsyncResult } from '@/hooks/useAsync'\nimport { useCurrentChain } from './useChains'\nimport useIntervalCounter from './useIntervalCounter'\nimport { useWeb3ReadOnly } from '../hooks/wallets/web3'\nimport { Errors, logError } from '@/services/exceptions'\nimport { FEATURES, hasFeature } from '@/utils/chains'\nimport { asError } from '@/services/exceptions/utils'\n\ntype EstimatedGasPrice =\n  | {\n      gasPrice: bigint\n    }\n  | {\n      maxFeePerGas: bigint\n      maxPriorityFeePerGas: bigint\n    }\n\ntype GasFeeParams = {\n  maxFeePerGas: bigint | null | undefined\n  maxPriorityFeePerGas: bigint | null | undefined\n}\n\n// Update gas fees every 20 seconds\nconst REFRESH_DELAY = 20e3\n\ntype EtherscanResult = {\n  LastBlock: string\n  SafeGasPrice: string\n  ProposeGasPrice: string\n  FastGasPrice: string\n  suggestBaseFee: string\n  gasUsedRatio: string\n}\n\nconst isEtherscanResult = (data: any): data is EtherscanResult => {\n  return 'FastGasPrice' in data && 'suggestBaseFee' in data\n}\n\n/**\n * Parses result from etherscan oracle.\n * Since EIP 1559 it returns the `maxFeePerGas` as gas price and the current network baseFee as `suggestedBaseFee`.\n * The `maxPriorityFeePerGas` can then be computed as `maxFeePerGas` - `suggestedBaseFee`\n *\n * @param result {@link EtherscanResult}\n * @see https://docs.etherscan.io/api-endpoints/gas-tracker\n */\nconst parseEtherscanOracleResult = (result: EtherscanResult, gweiFactor: string): EstimatedGasPrice => {\n  const maxFeePerGas = BigInt(Number(result.FastGasPrice) * Number(gweiFactor))\n  const baseFee = BigInt(Number(result.suggestBaseFee) * Number(gweiFactor))\n\n  return {\n    maxFeePerGas,\n    maxPriorityFeePerGas: maxFeePerGas - baseFee,\n  }\n}\n\n// Loop over the oracles and return the first one that works.\n// Or return a fixed value if specified.\n// If none of them work, throw an error.\nconst fetchGasOracle = async (gasPriceOracle: GasPriceOracle): Promise<EstimatedGasPrice> => {\n  const { uri, gasParameter, gweiFactor } = gasPriceOracle\n  const response = await fetch(uri)\n  if (!response.ok) {\n    throw new Error(`Error fetching gas price from oracle ${uri}`)\n  }\n\n  const json = await response.json()\n  const data = json.data || json.result || json\n\n  if (isEtherscanResult(data)) {\n    return parseEtherscanOracleResult(data, gweiFactor)\n  }\n  return { gasPrice: BigInt(data[gasParameter] * Number(gweiFactor)) }\n}\n\n// These typeguards are necessary because the GAS_PRICE_TYPE enum uses uppercase while the config service uses lowercase values\nconst isGasPriceFixed = (gasPriceConfig: GasPrice[number]): gasPriceConfig is GasPriceFixed => {\n  return gasPriceConfig.type.toUpperCase() == GAS_PRICE_TYPE.FIXED\n}\n\nconst isGasPriceFixed1559 = (gasPriceConfig: GasPrice[number]): gasPriceConfig is GasPriceFixedEIP1559 => {\n  return gasPriceConfig.type.toUpperCase() == GAS_PRICE_TYPE.FIXED_1559\n}\n\nconst isGasPriceOracle = (gasPriceConfig: GasPrice[number]): gasPriceConfig is GasPriceOracle => {\n  return gasPriceConfig.type.toUpperCase() == GAS_PRICE_TYPE.ORACLE\n}\n\nconst getGasPrice = async (gasPriceConfigs: GasPrice): Promise<EstimatedGasPrice | undefined> => {\n  let error: Error | undefined\n  for (const config of gasPriceConfigs) {\n    if (isGasPriceFixed(config)) {\n      return {\n        gasPrice: BigInt(config.weiValue),\n      }\n    }\n\n    if (isGasPriceFixed1559(config)) {\n      return {\n        maxFeePerGas: BigInt(config.maxFeePerGas),\n        maxPriorityFeePerGas: BigInt(config.maxPriorityFeePerGas),\n      }\n    }\n\n    if (isGasPriceOracle(config)) {\n      try {\n        return await fetchGasOracle(config)\n      } catch (_err) {\n        error = asError(_err)\n        logError(Errors._611, error.message)\n        // Continue to the next oracle\n        continue\n      }\n    }\n  }\n\n  // If everything failed, throw the last error or return undefined\n  if (error) {\n    throw error\n  }\n}\n\nconst getGasParameters = (\n  estimation: EstimatedGasPrice | undefined,\n  feeData: FeeData | undefined,\n  isEIP1559: boolean,\n): GasFeeParams => {\n  if (!estimation) {\n    return {\n      maxFeePerGas: isEIP1559 ? feeData?.maxFeePerGas : feeData?.gasPrice,\n      maxPriorityFeePerGas: isEIP1559 ? feeData?.maxPriorityFeePerGas : undefined,\n    }\n  }\n\n  if (isEIP1559 && 'maxFeePerGas' in estimation && 'maxPriorityFeePerGas' in estimation) {\n    return estimation\n  }\n\n  if ('gasPrice' in estimation) {\n    return {\n      maxFeePerGas: estimation.gasPrice,\n      maxPriorityFeePerGas: isEIP1559 ? feeData?.maxPriorityFeePerGas : undefined,\n    }\n  }\n\n  return {\n    maxFeePerGas: undefined,\n    maxPriorityFeePerGas: undefined,\n  }\n}\n\nexport const getTotalFee = (maxFeePerGas: bigint, gasLimit: bigint | string | number) => {\n  return maxFeePerGas * BigInt(gasLimit)\n}\n\nexport const getTotalFeeFormatted = (\n  maxFeePerGas: bigint | null | undefined,\n  gasLimit: bigint | undefined,\n  chain: ChainInfo | undefined,\n) => {\n  return gasLimit && maxFeePerGas\n    ? formatVisualAmount(getTotalFee(maxFeePerGas, gasLimit), chain?.nativeCurrency.decimals)\n    : '> 0.001'\n}\n\nconst SPEED_UP_MAX_PRIO_FACTOR = 2n\n\nconst SPEED_UP_GAS_PRICE_FACTOR = 150n\n\n/**\n * Estimates the gas price through the configured methods:\n * - Oracle\n * - Fixed gas prices\n * - Or using ethers' getFeeData\n *\n * @param isSpeedUp if true, increases the returned gas parameters\n * @returns [gasPrice, error, loading]\n */\nconst useGasPrice = (isSpeedUp: boolean = false): AsyncResult<GasFeeParams> => {\n  const chain = useCurrentChain()\n  const gasPriceConfigs = chain?.gasPrice\n  const [counter] = useIntervalCounter(REFRESH_DELAY)\n  const provider = useWeb3ReadOnly()\n  const isEIP1559 = !!chain && hasFeature(chain, FEATURES.EIP1559)\n\n  const [gasPrice, gasPriceError, gasPriceLoading] = useAsync(\n    async () => {\n      const [gasEstimation, feeData] = await Promise.all([\n        // Fetch gas price from oracles or get a fixed value\n        gasPriceConfigs ? getGasPrice(gasPriceConfigs) : undefined,\n\n        // Fetch the gas fees from the blockchain itself\n        provider?.getFeeData(),\n      ])\n\n      // Prepare the return values\n      const gasParameters = getGasParameters(gasEstimation, feeData, isEIP1559)\n\n      if (!isSpeedUp) {\n        return gasParameters\n      }\n\n      if (isEIP1559 && gasParameters.maxFeePerGas && gasParameters.maxPriorityFeePerGas) {\n        return {\n          maxFeePerGas:\n            gasParameters.maxFeePerGas +\n            (gasParameters.maxPriorityFeePerGas * SPEED_UP_MAX_PRIO_FACTOR - gasParameters.maxPriorityFeePerGas),\n          maxPriorityFeePerGas: gasParameters.maxPriorityFeePerGas * SPEED_UP_MAX_PRIO_FACTOR,\n        }\n      }\n\n      return {\n        maxFeePerGas: gasParameters.maxFeePerGas\n          ? (gasParameters.maxFeePerGas * SPEED_UP_GAS_PRICE_FACTOR) / 100n\n          : undefined,\n        maxPriorityFeePerGas: undefined,\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [gasPriceConfigs, provider, counter, isEIP1559],\n    false,\n  )\n\n  const isLoading = gasPriceLoading || (!gasPrice && !gasPriceError)\n\n  return [gasPrice, gasPriceError, isLoading]\n}\n\nexport default useGasPrice\n","import useAsync from '@/hooks/useAsync'\nimport useSafeInfo from './useSafeInfo'\nimport { FEATURES, hasFeature } from '@/utils/chains'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { getRelayCount } from '@safe-global/safe-gateway-typescript-sdk'\n\nexport const MAX_DAY_RELAYS = 5\n\nexport const useRelaysBySafe = () => {\n  const chain = useCurrentChain()\n  const { safe, safeAddress } = useSafeInfo()\n\n  return useAsync(() => {\n    if (!safeAddress || !chain) return\n    if (hasFeature(chain, FEATURES.RELAYING)) {\n      return getRelayCount(chain.chainId, safeAddress)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chain, safeAddress, safe.txHistoryTag])\n}\n\nexport const useLeastRemainingRelays = (ownerAddresses: string[]) => {\n  const chain = useCurrentChain()\n  const { safe } = useSafeInfo()\n\n  return useAsync(() => {\n    if (!chain || !hasFeature(chain, FEATURES.RELAYING)) return\n\n    return Promise.all(ownerAddresses.map((address) => getRelayCount(chain.chainId, address)))\n      .then((result) => {\n        const min = Math.min(...result.map((r) => r.remaining))\n        return result.find((r) => r.remaining === min)\n      })\n      .catch(() => {\n        return { remaining: 0, limit: MAX_DAY_RELAYS }\n      })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chain, ownerAddresses, safe.txHistoryTag])\n}\n","import { getTotalFee } from '@/hooks/useGasPrice'\nimport useWalletBalance from '@/hooks/wallets/useWalletBalance'\n\nconst useWalletCanPay = ({ gasLimit, maxFeePerGas }: { gasLimit?: bigint; maxFeePerGas?: bigint | null }) => {\n  const [walletBalance] = useWalletBalance()\n\n  // Take an optimistic approach and assume the wallet can pay\n  // if gasLimit, maxFeePerGas or their walletBalance are missing\n  if (gasLimit === undefined || maxFeePerGas === undefined || maxFeePerGas === null || walletBalance === undefined)\n    return true\n\n  const totalFee = getTotalFee(maxFeePerGas, gasLimit)\n\n  return walletBalance >= totalFee\n}\n\nexport default useWalletCanPay\n","import useAsync, { type AsyncResult } from '../useAsync'\nimport useWallet from './useWallet'\nimport { useWeb3ReadOnly } from '@/hooks/wallets/web3'\n\nconst useWalletBalance = (): AsyncResult<bigint | undefined> => {\n  const web3ReadOnly = useWeb3ReadOnly()\n  const wallet = useWallet()\n\n  return useAsync<bigint | undefined>(async () => {\n    if (!wallet || !web3ReadOnly) {\n      return undefined\n    }\n\n    const balance = await web3ReadOnly.getBalance(wallet.address, 'latest')\n    return balance\n  }, [wallet, web3ReadOnly])\n}\n\nexport default useWalletBalance\n","import type { RelayCountResponse } from '@safe-global/safe-gateway-typescript-sdk'\n\nexport const hasRemainingRelays = (relays?: RelayCountResponse): boolean => {\n  return !!relays && relays.remaining > 0\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ownersArray\":\"styles_ownersArray__Lwugg\",\"strikethrough\":\"styles_strikethrough__dsfcO\",\"errorMessage\":\"styles_errorMessage__EgiJf\",\"networkFee\":\"styles_networkFee__s25eL\",\"networkFeeInline\":\"styles_networkFeeInline__o4u72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"styles_row__UGXjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__89vKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__uq_oY\",\"method\":\"styles_method__e_FVs\",\"label\":\"styles_label__DK6kD\",\"radioLabel\":\"styles_radioLabel__LApjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sponsoredBy\":\"styles_sponsoredBy__0eMhp\",\"icon\":\"styles_icon__MhBil\",\"logo\":\"styles_logo___DNjH\"};"],"names":["name","value","ReviewRow","Grid","item","xs","Typography","variant","action","chain","useCurrentChain","NetworkWarning","isWrongChain","useIsWrongChain","Alert","severity","AlertTitle","sx","fontWeight","chainName","Box","mt","ChainSwitcher","getAvailableSaltNonce","customRpcs","replayedSafe","chainInfos","knownSafeAddresses","isAvailableOnAllChains","allRPCs","map","rpcUrl","chainId","getRpcServiceUrl","rpcUri","safeAddress","find","rpc","web3ReadOnly","createWeb3ReadOnly","chains","computeNewSafeAddress","safeAccountConfig","saltNonce","safeVersion","predictAddressBasedOnReplayData","some","sameAddress","knownAddress","isSmartContract","Number","toString","NetworkFee","totalFee","isWaived","inline","className","classnames","css","b","nativeCurrency","symbol","owners","threshold","networks","container","spacing","length","Tooltip","title","p","ChainIndicator","safeItem","arrow","data-testid","display","NetworkLogosList","owner","index","EthHashInfo","address","ens","shortAddress","showPrefix","showName","hasExplorer","showCopyButton","data","onSubmit","ReviewStep","onBack","setStep","useSyncSafeCreationStep","wallet","useWallet","dispatch","useAppDispatch","router","useRouter","gasPrice","useGasPrice","customRpc","useAppSelector","selectRpc","payMethod","setPayMethod","useState","PayMethod","PayLater","executionMethod","setExecutionMethod","ExecutionMethod","RELAY","isCreating","setIsCreating","submitError","setSubmitError","isCounterfactualEnabled","useHasFeature","FEATURES","COUNTERFACTUAL","isEIP1559","hasFeature","EIP1559","ownerAddresses","useMemo","minRelays","useLeastRemainingRelays","isMultiChainDeployment","canRelay","hasRemainingRelays","willRelay","newSafeProps","createNewUndeployedSafeWithoutSalt","paymentReceiver","undefined","safePropsForGasEstimation","Date","now","gasLimit","useEstimateSafeCreationGas","maxFeePerGas","maxPriorityFeePerGas","walletCanPay","useWalletCanPay","getTotalFeeFormatted","allSafes","useAllSafes","knownAddresses","uniq","safe","customRPCs","handleCreateSafeClick","nextAvailableNonce","replayedSafeWithNonce","customRpcUrl","provider","network","createSafe","updateAddressBook","gtmSetChainId","push","pathname","AppRoutes","home","query","shortName","safeCreationDispatch","SafeCreationEvent","AWAITING_EXECUTION","groupKey","CF_TX_GROUP_KEY","err","console","error","props","gtmSetSafeAddress","trackEvent","OVERVIEW_EVENTS","PROCEED_WITH_TX","label","category","CREATE_SAFE_CATEGORY","replayCounterfactualSafeDeployment","CREATE_SAFE_EVENTS","CREATED_SAFE","options","onSubmitCallback","taskId","txHash","RELAYING","PROCESSING","SUBMIT_CREATE_SAFE","relaySafeCreation","createNewSafe","_err","asError","isWalletRejection","REJECT_CREATE_SAFE","showNetworkWarning","PayNow","isDisabled","layoutCss","SafeSetupOverview","Divider","PayNowPayLater","isMultiChain","pt","ExecutionMethodSelector","relays","component","flexDirection","gap","color","ErrorMessage","justifyContent","Button","size","onClick","handleBack","startIcon","ArrowBackIcon","fontSize","disabled","CircularProgress","undeployedSafe","useWeb3ReadOnly","gasLimitError","gasLimitLoading","useAsync","estimateSafeCreationGas","currentChain","useEffect","RELAY_SPONSORS","gno","logo","default","sponsor","SponsoredBy","img","src","alt","RemainingRelays","tooltip","limit","MAX_DAY_RELAYS","maybePlural","div","alignItems","remaining","placement","span","style","lineHeight","SvgIcon","InfoIcon","inheritViewBox","balance","useWalletBalance","BalanceInfo","WalletBalance","madProps","noLabel","shouldRelay","borderRadius","shape","FormControl","RadioGroup","row","onChange","onChooseExecutionMethod","newExecutionMethod","FormControlLabel","flex","whiteSpace","control","Radio","WalletIcon","width","height","icon","isEtherscanResult","parseEtherscanOracleResult","result","gweiFactor","BigInt","FastGasPrice","baseFee","suggestBaseFee","fetchGasOracle","gasPriceOracle","uri","gasParameter","response","fetch","ok","json","isGasPriceFixed","gasPriceConfig","type","toUpperCase","GAS_PRICE_TYPE","FIXED","isGasPriceFixed1559","FIXED_1559","isGasPriceOracle","ORACLE","getGasPrice","gasPriceConfigs","config","weiValue","logError","Errors","_611","message","getGasParameters","estimation","feeData","getTotalFee","formatVisualAmount","decimals","isSpeedUp","counter","useIntervalCounter","REFRESH_DELAY","gasPriceError","gasPriceLoading","gasEstimation","Promise","all","getFeeData","gasParameters","SPEED_UP_MAX_PRIO_FACTOR","SPEED_UP_GAS_PRICE_FACTOR","useSafeInfo","getRelayCount","txHistoryTag","then","min","Math","r","catch","walletBalance","getBalance"],"sourceRoot":"","ignoreList":[]}