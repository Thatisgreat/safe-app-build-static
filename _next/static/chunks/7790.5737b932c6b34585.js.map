{"version":3,"file":"static/chunks/7790.5737b932c6b34585.js","mappings":"6OAgBA,IAAMA,EAAWC,QAETA,EACGA,EACDA,EAFFA,EACGA,EACDA,EAHR,MAAO,CACLC,GAAID,QAAAA,EAAAA,QAAAA,EAAAA,EAAUE,MAAAA,GAAVF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkBC,EAAE,CAACE,KAAK,GAA1BH,KAAAA,MAAAA,EAA8B,GAClCG,MAAOH,QAAAA,EAAAA,QAAAA,EAAAA,EAAUE,MAAAA,GAAVF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkBG,KAAAA,GAAlBH,KAAAA,IAAAA,EAAAA,EAA2B,IAClCI,KAAMJ,QAAAA,EAAAA,QAAAA,EAAAA,EAAUE,MAAAA,GAAVF,KAAAA,MAAAA,KAAAA,EAAAA,EAAkBK,OAAAA,GAAlBL,KAAAA,IAAAA,EAAAA,EAA6B,KACnCM,UAAWC,EAAAA,aAAaA,CAACC,IAAI,CAEjC,EAEMC,EAAe,OAAC,UAAEC,CAAQ,CAAqB,GAC7C,WAAEC,CAAS,CAAEC,gBAAc,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACC,EAAAA,CAAaA,EACxDC,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,GAO9B,MALAC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACR,IAAMC,EAAQH,EAASI,GAAG,CAAC,GAAQpB,EAAQqB,EAAGpB,SAAS,GACvDqB,CAAAA,EAAAA,EAAAA,EAAAA,CAAyBA,CAACH,GAAOI,IAAI,CAACX,GAAWY,KAAK,CAACX,EACzD,EAAG,CAACG,EAAUJ,EAAWC,EAAe,EAEjC,UAACY,EAAAA,CAAiBA,CAAAA,CAACd,SAAUA,EAAUe,OAAO,KACvD,EAiBA,EAfyB,IACvB,GAAM,QAAEC,CAAM,CAAE,CAAGV,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,GAChC,MACE,UAACW,EAAAA,CAAQA,CAAAA,CACPC,MAAM,gBACNC,SAAU,uBAA4CC,MAAAA,CAArBJ,EAAO,gBAAkC,OAApBI,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACJ,IAClEK,KAAMC,EAAAA,CAASA,CACfC,KAAM,EACNR,OAAO,aAEP,UAAChB,EAAAA,CAAc,GAAGyB,CAAK,IAG7B","sources":["webpack://_N_E/./src/components/tx-flow/flows/ConfirmBatch/index.tsx"],"sourcesContent":["import { type ReactElement, useContext, useEffect } from 'react'\nimport { type TransactionDetails } from '@safe-global/safe-gateway-typescript-sdk'\nimport SignOrExecuteForm from '@/components/tx/SignOrExecuteForm'\nimport { createMultiSendCallOnlyTx } from '@/services/tx/tx-sender'\nimport { SafeTxContext } from '../../SafeTxProvider'\nimport type { MetaTransactionData } from '@safe-global/safe-core-sdk-types'\nimport { OperationType } from '@safe-global/safe-core-sdk-types'\nimport TxLayout from '../../common/TxLayout'\nimport BatchIcon from '@/public/images/common/batch.svg'\nimport { useDraftBatch } from '@/hooks/useDraftBatch'\nimport { maybePlural } from '@/utils/formatters'\n\ntype ConfirmBatchProps = {\n  onSubmit: () => void\n}\n\nconst getData = (txDetails: TransactionDetails): MetaTransactionData => {\n  return {\n    to: txDetails.txData?.to.value ?? '',\n    value: txDetails.txData?.value ?? '0',\n    data: txDetails.txData?.hexData ?? '0x',\n    operation: OperationType.Call, // only calls can be batched\n  }\n}\n\nconst ConfirmBatch = ({ onSubmit }: ConfirmBatchProps): ReactElement => {\n  const { setSafeTx, setSafeTxError } = useContext(SafeTxContext)\n  const batchTxs = useDraftBatch()\n\n  useEffect(() => {\n    const calls = batchTxs.map((tx) => getData(tx.txDetails))\n    createMultiSendCallOnlyTx(calls).then(setSafeTx).catch(setSafeTxError)\n  }, [batchTxs, setSafeTx, setSafeTxError])\n\n  return <SignOrExecuteForm onSubmit={onSubmit} isBatch />\n}\n\nconst ConfirmBatchFlow = (props: ConfirmBatchProps) => {\n  const { length } = useDraftBatch()\n  return (\n    <TxLayout\n      title=\"Confirm batch\"\n      subtitle={`This batch contains ${length} transaction${maybePlural(length)}`}\n      icon={BatchIcon}\n      step={0}\n      isBatch\n    >\n      <ConfirmBatch {...props} />\n    </TxLayout>\n  )\n}\n\nexport default ConfirmBatchFlow\n"],"names":["getData","txDetails","to","txData","value","data","hexData","operation","OperationType","Call","ConfirmBatch","onSubmit","setSafeTx","setSafeTxError","useContext","SafeTxContext","batchTxs","useDraftBatch","useEffect","calls","map","tx","createMultiSendCallOnlyTx","then","catch","SignOrExecuteForm","isBatch","length","TxLayout","title","subtitle","maybePlural","icon","BatchIcon","step","props"],"sourceRoot":"","ignoreList":[]}