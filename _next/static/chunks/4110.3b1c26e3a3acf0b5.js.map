{"version":3,"file":"static/chunks/4110.3b1c26e3a3acf0b5.js","mappings":"8MAUA,IAAMA,EAAkB,SACfC,EAAAA,EAAP,eAAOA,EAAAA,MAAAA,GAAAA,KAAAA,IAAAA,EAAAA,KAAAA,EAAmB,QAAnBA,EAAAA,EAAQC,UAAU,CAAC,kCAAnBD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoDE,OAAO,EAM9DC,EAAkB,GAEtB,EAAKC,EAAD,CAIGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,CAAC,CACnBC,QAAS,EACTC,UAAWH,EAAAA,EAAaA,CACxBI,eAAgB,CACdC,eAAgB,CACd,gBAAiB,MACnB,EACAC,UAAWX,IAAoB,OAAS,OAC1C,EACAY,eAAgB,CAACC,SAASC,EAAMC,OAAO,EAAE,CACzCC,QAASC,SAASC,MAAM,GAbjB,IAAM,KAiBXC,EAAuF,CAC3F,CAACC,EAAAA,CAAWA,CAACC,QAAQ,CAAC,CAAE,IAAMC,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,GAClD,CAACF,EAAAA,CAAWA,CAACG,gBAAgB,CAAC,CAAE,GAAWnB,EAAgBU,GAC3D,CAACM,EAAAA,CAAWA,CAACI,QAAQ,CAAC,CAAE,IAAMC,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,CAAC,CAAEC,SAAU1B,GAAkB,GAC3E,CAACoB,EAAAA,CAAWA,CAACO,EAAE,CAAC,CAAE,GAAWC,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAACd,EAAMC,OAAO,CAAED,EAAMe,MAAM,CACnE,EAEaC,EAAgB,GACpBC,OAAOC,MAAM,CAACb,GAAgBc,GAAG,CAAEC,GAAWA,EAAOpB,IAGjDqB,EAAoB,CAACC,EAA2BC,KAC3D,IAAMC,EAA4BC,OAATA,EAAAA,CAASA,EAAAA,KAAAA,IAATA,EAAAA,CAASA,CAAAA,KAAAA,EAATA,EAAAA,CAAW,CAACF,EAAYG,WAAW,GAAkB,CAC9E,MAAO,CAACJ,EAAgBK,QAAQ,CAACH,GAAoBD,EACvD,EAAC,EAEkC,IACjC,IAAMK,EAAiBX,OAAOY,OAAO,CAACxB,GAAgByB,MAAM,CAAC,OAAC,CAACC,EAAI,UAAKV,EAAkBrB,EAAMsB,eAAe,CAAES,YAEjH,GAAiC,CAA7BH,EAAeI,MAAM,CAChB,CAACxB,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,GAAG,CAG1BoB,EAAeT,GAAG,CAAC,OAAC,EAAGC,EAAO,UAAKA,EAAOpB,IACnD,EAAC","sources":["webpack://_N_E/./src/hooks/wallets/wallets.ts"],"sourcesContent":["import { WC_PROJECT_ID } from '@/config/constants'\nimport type { ChainInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { InitOptions } from '@web3-onboard/core'\nimport coinbaseModule from '@web3-onboard/coinbase'\nimport injectedWalletModule from '@web3-onboard/injected-wallets'\nimport walletConnect from '@web3-onboard/walletconnect'\nimport pkModule from '@/services/private-key-module'\n\nimport { CGW_NAMES, WALLET_KEYS } from './consts'\n\nconst prefersDarkMode = (): boolean => {\n  return window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n}\n\ntype WalletInits = InitOptions['wallets']\ntype WalletInit = WalletInits extends Array<infer U> ? U : never\n\nconst walletConnectV2 = (chain: ChainInfo) => {\n  // WalletConnect v2 requires a project ID\n  if (!WC_PROJECT_ID) {\n    return () => null\n  }\n\n  return walletConnect({\n    version: 2,\n    projectId: WC_PROJECT_ID,\n    qrModalOptions: {\n      themeVariables: {\n        '--wcm-z-index': '1302',\n      },\n      themeMode: prefersDarkMode() ? 'dark' : 'light',\n    },\n    requiredChains: [parseInt(chain.chainId)],\n    dappUrl: location.origin,\n  })\n}\n\nconst WALLET_MODULES: Partial<{ [_key in WALLET_KEYS]: (chain: ChainInfo) => WalletInit }> = {\n  [WALLET_KEYS.INJECTED]: () => injectedWalletModule() as WalletInit,\n  [WALLET_KEYS.WALLETCONNECT_V2]: (chain) => walletConnectV2(chain) as WalletInit,\n  [WALLET_KEYS.COINBASE]: () => coinbaseModule({ darkMode: prefersDarkMode() }) as WalletInit,\n  [WALLET_KEYS.PK]: (chain) => pkModule(chain.chainId, chain.rpcUri) as WalletInit,\n}\n\nexport const getAllWallets = (chain: ChainInfo): WalletInits => {\n  return Object.values(WALLET_MODULES).map((module) => module(chain))\n}\n\nexport const isWalletSupported = (disabledWallets: string[], walletLabel: string): boolean => {\n  const legacyWalletName = CGW_NAMES?.[walletLabel.toUpperCase() as WALLET_KEYS]\n  return !disabledWallets.includes(legacyWalletName || walletLabel)\n}\n\nexport const getSupportedWallets = (chain: ChainInfo): WalletInits => {\n  const enabledWallets = Object.entries(WALLET_MODULES).filter(([key]) => isWalletSupported(chain.disabledWallets, key))\n\n  if (enabledWallets.length === 0) {\n    return [injectedWalletModule()]\n  }\n\n  return enabledWallets.map(([, module]) => module(chain))\n}\n"],"names":["prefersDarkMode","window","matchMedia","matches","walletConnectV2","WC_PROJECT_ID","walletConnect","version","projectId","qrModalOptions","themeVariables","themeMode","requiredChains","parseInt","chain","chainId","dappUrl","location","origin","WALLET_MODULES","WALLET_KEYS","INJECTED","injectedWalletModule","WALLETCONNECT_V2","COINBASE","coinbaseModule","darkMode","PK","pkModule","rpcUri","getAllWallets","Object","values","map","module","isWalletSupported","disabledWallets","walletLabel","legacyWalletName","CGW_NAMES","toUpperCase","includes","enabledWallets","entries","filter","key","length"],"sourceRoot":"","ignoreList":[]}