{"version":3,"file":"static/chunks/8879.00c26d9dff231711.js","mappings":"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S,GAAK,EAE/B,IAFY,IAAc,CAE1B,GACA,mBACA,uBACA,yBACA,qBACA,qBACA,2BACA,8BACA,CAAC,UAAsC,EAEvC,YAKA,mBAMA,iBACA,eACA,iBAMA,yBACA,6BACA,+BACA,iCAMA,sCAMA,0BACA,kCACA,4BACA,oDACA,8CACA,0BACA,wBACA,0CACA,oDACA,iDACA,CAAC,UAA4B,EAE7B,YACA,eAEA,uDAEA,yDAEA,+CAEA,uCAEA,iCAEA,mCAEA,iDAEA,2DAEA,iEAEA,gDAEA,gEAEA,oDAEA,kEAEA,0CAEA,8CACA,4DACA,8CACA,sDACA,uDACA,CAAC,UAAwB,ECxGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qFAAqF;AAClH;AACA;AACA;AACA;AACA,EACO,kBAA+B,OAAkB,MACxD,gCAA0D,EAAM,qBAChE,iBACA,KACA,cACA,SACA,cACA,iCACA,CAAS,CACT,qBACA,SACA,WAAyB,mBAA2B,CACpD,wBACA,CAAS,CACT,CAAK,EACL,MAAY,oBAAsB,eAClC,cACA,qBAEA,wBACA,YAGA,aADA,0BACA,uBACA,cACA,cAEA,0BACA,EACA,QACA,KACA,sBACA,4DACA,CAAC,CACD,QACA,UACA,2CACA,kBACA,gCACA,qDACA,SACA,kBACA,UAAmB,CAAS,cAC5B,iBAA0B,CAAgB,qBAC1C,+BACA,oBACA,iBAA8B,CAAgB,qBAC9C,wBACA,CAAS,CACT,EAAK,EACL,CAAC,CACD,OACA,kBACA,uCAEA,ECvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DEhCA,IAAMqJ,GAA4BC,OAAOC,IAAI,CAAC9T,IACxC+T,GAAqBC,GAAAA,EAAmBA,CADMhU,eACU,GAKjDiU,GAAsB,IACjC,IAAMC,QAAahQ,EAAAA,KAAAA,EAAAA,EAAQjI,IAAI,CAC/B,GADmBiI,GACZzF,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,KACb,GAAI,CAACyV,EAAY,MAAO,EAAE,CAE1B,IAAMC,EAA8B,CAClCpM,GAAImM,EAAWnM,EAAE,CACjB9E,MAAOiR,EAAWjR,KAAK,CACvBhH,KAAMiY,EAAWjY,IAAI,CACrB+L,UAAWkM,EAAWlM,SAAS,EAGjC,GAAImM,EAAOnM,SAAS,GAAKC,EAAAA,aAAaA,CAACmM,YAAY,CAEjD,CAFmD,EAE/C,CACF,IAAMC,EAAmBC,CAAAA,EAAAA,GAAAA,mBAAAA,CAAmBA,CAACH,EAAOlY,IAAI,EACxD,GAAIoY,EAAiBE,MAAM,CAAG,EAC5B,CAD+B,MACxBF,EAAiBG,GAAG,CAAC,GAAS,KAAKhH,CAAE,CAAExF,UAAWC,EAAAA,aAAaA,CAACC,IAAI,CAAC,EAEhF,CAAE,MAAOxL,EAAG,CAAC,CAGf,MAAO,CAACyX,EAAO,EACd,CAACD,EAAW,CACjB,EAAC,GAK2B,KAC1B,GAAM,MAAErb,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtB2b,EAAmB1V,CAAAA,EAAAA,EAAAA,EAAAA,CAAaA,CAACC,GAAAA,EAAQA,CAAC0V,YAAY,EAEtD,CAACzY,EAAK,CAAG2D,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAAC,UACtB,GAAI,CAACgU,GAA0Be,QAAQ,CAAC9b,EAAK0H,OAAO,GAAK,CAACkU,EAAkB,MAAO,EAAE,CAErF,IAAMG,EAAc/b,EAAKgc,OAAO,EAAI,EAAE,CAOtC,MAAOC,CANW,MAAMtL,QAAQC,GAAG,CACjCmL,EAAYJ,GAAG,CAAC,GACdO,GAAc,CAAEjV,QAASA,CAAZiV,CAAoB9R,KAAK,CAAmB1C,QAASoQ,SAAS9X,EAAK0H,OAAO,CAAa,MAIvF3I,MAAM,CACrB,GACU,OAARod,GACAA,EAAIC,MAAM,GAAKpc,EAAKiH,OAAO,CAACmD,KAAK,CAACiS,WAAW,IAC7CF,EAAIG,MAAM,GAAKtc,EAAKiH,OAAO,CAACmD,KAAK,CAACiS,WAAW,IAC7CF,EAAII,KAAK,CAACb,MAAM,CAAG,EAEzB,EAAG,CAAC1b,EAAM4b,EAAiB,EAE3B,OAAOxY,CACT,EAAC,GAEiC,CAChC,6CACA,6CACA,6CACA,6CACD,CACKoZ,GAAsC,CAC1C,6CACA,6CACA,6CACD,CAaYC,GAAW,IACtB,IAAMC,EAAmBtB,GAAoB/P,GACvC4Q,EAAYU,KACZ9V,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAClBgQ,QAAgBjQ,EAAAA,KAAAA,EAAAA,EAAQI,OAAO,CAACoV,WAAW,GAG3CO,EAAiBhX,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,KAC7B,IAAMxG,EAAiB,EAAE,CACzB,GAAgC,IAA5Bsd,EAAiBhB,MAAM,CAAQ,OAAOtc,EAE1C,GAAI0X,GAAiBmF,EACnB,IAAK,IAAMY,CADmB,IACPZ,EAAW,CAChC,IAAMa,EAAYD,EAASE,kBAAkB,CAACC,IAAI,CAAC,GAAUC,GAA0BnB,QAAQ,CAACoB,IAC1FC,EAAoBN,EAASE,kBAAkB,CAACC,IAAI,CAAC,GACzDR,GAAoCV,QAAQ,CAACoB,IAG/C,IAAK,IAAME,KAAQP,EAASN,KAAK,CAAE,GAC7Ba,EAAKC,OAAO,CAACvB,QAAQ,CAAChF,GAAgB,CACxC,IAAMwG,EAAWZ,EAAiBf,GAAG,CAAC,GAAY4B,GAAiBH,EAAM9B,IACzElc,EAAOoe,IAAI,CAAC,CACVC,WAAYZ,EAAS5V,OAAO,CAC5ByW,QAASN,EAAKO,GAAG,CACjBb,UAAWJ,EAAiBkB,IAAI,CAAC,GAAYtC,EAAOnM,SAAS,GAAKC,EAAAA,aAAaA,CAACmM,YAAY,EACxFuB,EACAK,EACJhgB,OACEmgB,EAASN,IAAI,CAAC,GAAY7f,IAAW0gB,EAAOC,EAAE,EAAe,OAAX3gB,IAClDmgB,EAASN,IAAI,CAAC,GAAY7f,IAAW0gB,EAAOC,EAAE,EAAHD,CAC3CA,EAAOC,EAAE,EAAHD,CAIhB,CAGF,OAAOze,CACT,EAAG,CAAC6c,EAAWnF,EAAe4F,EAAiB,EACzC/F,EAAeC,CAAAA,EAAAA,GAAAA,EAAAA,CAAeA,GAG9B,CAACmH,EAAiC,CAAGhX,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CACjD,IACE4J,QAAQC,GAAG,CACTgM,EAAejB,GAAG,CAAC,MAAOyB,IACJ,OAAhBA,EAAKjgB,MAAM,EAAa2Z,GAAiBH,IAC3CyG,EAAKjgB,MAAM,CAAG,CAD2C,KACrC6gB,GAAeZ,EAAMV,EAAkB5F,EAAeH,EAAAA,EAErEyG,KAGb,CAACR,EAAgBF,EAAkB5F,EAAeH,EAAa,EAIjE,OAAOoH,GAAoCnB,CAC7C,EAAC,GAE+B,GAAqCL,EAAMS,IAAI,CAAC,GAAUI,EAAKjgB,MAAM,GAAK0gB,EAAOC,EAAE,EAEtGG,GAAqB,GAChCC,GAAiB3B,IACjBA,EAAMS,IAAI,CAAC,GAAUI,EAAKjgB,MAAM,GAAK0gB,EAAOM,IAADN,mBAAwB,EAAIT,EAAKjgB,MAAM,GAAK0gB,EAAOO,IAADP,cAAmB,GAChHtB,EAAMS,IAAI,CAAC,GAAUI,EAAKjgB,MAAM,GAAK0gB,EAAOM,IAADN,mBAAwB,GACnEtB,CAAK,CAAC,EAAE,CAKJgB,GAAmB,CAACH,EAAmB9B,KAC3C,IAAMc,EAASgB,EAAKiB,OAAO,CAACrB,IAAI,CAAC,GAAOsB,EAAErX,OAAO,GAAKqU,EAAOpM,EAAE,CAACmN,WAAW,IAC3E,GAAI,CAACD,EAAQ,OAAOyB,EAAOM,IAADN,mBAAwB,CAElD,GAAIzB,EAAOmC,SAAS,GAAKC,EAAUC,MAAM,CAEvC,CAFyC,KAATD,CAEzBE,GAAsBtC,EAAOuC,gBAAgB,CAAErD,GAGxD,GAAIc,EAAOmC,SAAS,GAAKC,EAAUI,QAAQ,CAAE,CAE3C,GAFgCJ,CAE1BK,EAAWvD,EAAOlY,IAAI,CAACoU,KAAK,CAAC,EAAG,IAChCsH,EAAO1C,EAAO2C,SAAS,CAAC/B,IAAI,CAAC,GAAOgC,EAAEH,QAAQ,GAAKA,GAEzD,GAAIC,EAAM,CACR,IAAMG,EAAoBP,GAAsBI,EAAKH,gBAAgB,CAAErD,UACvE,IAA0BuC,EAAOC,EAAE,CAASmB,CAAZpB,CACzBiB,EAAKI,UAAU,CAAGrB,EAAOC,EAAE,CAAG,CAAND,GACjC,CAD4C,CAI9C,OAAOA,EAAOO,IAADP,cAAmB,EAG5Ba,GAAwB,CAACS,EAA+B7D,KAC5D,GAR0F,CAQpF8D,EAAS/b,OAAOiY,EAAOlR,KAAK,EAAI,MAAO,CAAE,CACzCiV,EAAiB/D,EAAOnM,SAAS,GAAKC,EAAAA,aAAaA,CAACmM,YAAY,QAEtE,GAAc4D,IAAgBG,EAAiBC,IAAI,EAAIJ,IAAgBG,EAAiBE,IAAI,CACnF3B,CADqF,CAC9E4B,CAD8BH,GAC/BzB,SADwEyB,CACzD,CAE1BD,GAAkBF,IAAgBG,EAAiB/D,YAAY,EAAI4D,IAAgBG,EAAjCA,IAAsD,CACnGzB,CADqG,CAC9F6B,IAAD7B,SADwFyB,SACjE,CAG/BzB,EAAOC,EAAE,EAAHD,GAGsB,OAAC,MACpCT,CAAI,kBACJV,CAAgB,CAIjB,GACO/F,EAAeC,CAAAA,EAAAA,GAAAA,EAAAA,CAAeA,GAC9B/P,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAClBgQ,QAAgBjQ,EAAAA,KAAAA,EAAAA,EAAQI,OAAO,CAAfJ,WAA2B,GAEjD,MAAOjB,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CACZ,IACEwX,GAAQtG,GAAiBH,EACrBgJ,GAAyBvC,EAAMV,EAAkB5F,EAAeH,QAChE3V,EACN,CAACoc,EAAMV,EAAkB5F,EAAeH,EAAa,CAEzD,EAAC,GAE8B,CAACyG,EAAYV,KAC1C,GAAgC,GAAG,CAA/BA,EAAiBhB,MAAM,CACzB,MAAM,MAAU,yCAElB,GAAmC,CAA/BgB,EAAiBhB,MAAM,CAClBgB,CAAgB,CAAC,EAAE,CAInB,CACLxN,GAHSkO,EAAKN,SAAS,EAAIG,EAAyB,CAAC,EAAE,CAIvD7S,MAAO,IACPhH,KAAM8X,GAAmB0E,kBAAkB,CAAC,YAAa,CAACC,CAAAA,EAAAA,EAAAA,mBAAAA,CAAmBA,CAACnD,GAAkB,EAChGvN,UAAWC,EAAAA,aAAaA,CAACmM,YAAY,CAG3C,EAEMoE,GAA2B,CAC/BvC,EACAV,EACA1M,EACAjF,KAEA,IAAM+U,EAAiBC,GAAuB3C,EAAMV,GAG9CtZ,EADgB4c,CAAAA,EAAAA,GAAAA,CAAAA,CAAiBA,CAACC,GAAAA,CAAcA,CAACC,QAAQ,CAAE9C,EAAKK,UAAU,CAAE1S,GACvDoV,SAAS,CAACP,kBAAkB,CAAC,0BAA2B,CACjFE,EAAe5Q,EAAE,CACjB7L,OAAOyc,EAAe1V,KAAK,EAC3B0V,EAAe1c,IAAI,CACnB0c,EAAe3Q,SAAS,EAAI,EAC5BiO,EAAKM,OAAO,EACZ,EACD,EAED,MAAO,CACLxO,GAAIkO,EAAKK,UAAU,CACnBra,OACAgH,MAAO,SACP4F,CACF,CACF,EAEMgO,GAAiB,MACrBZ,EACAV,EACA1M,EACAjF,KAEA,IAAM+U,EAAiBC,GAAuB3C,EAAMV,GAE9C0D,EAAgBJ,CAAAA,EAAAA,GAAAA,CAAAA,CAAiBA,CAACC,GAAAA,CAAcA,CAACC,QAAQ,CAAE9C,EAAKK,UAAU,CAAE1S,GAClF,GAAI,CAWF,OAVA,MAAMqV,EAAcC,uBAAuB,CAACtQ,WAAW,CACrD+P,EAAe5Q,EAAE,CACjB7L,OAAOyc,EAAe1V,KAAK,EAC3B0V,EAAe1c,IAAI,CACnB0c,EAAe3Q,SAAS,EAAI,EAC5BiO,EAAKM,OAAO,EACZ,EACA,MAAE1N,CAAK,GAGF6N,EAAOC,EAAE,CAChB,CADaD,KACNha,EAAQ,CACf,IAAMjD,EAAQwf,EAAcD,SAAS,CAACG,QAAQ,CAACzc,EAAET,IAAI,CAACoU,KAAK,CAAC,EAAG,KAC/D,GAAc,OAAV5W,GAAiC,sBAAsB,CAArCA,EAAMyG,IAAI,CAE9B,OADAkZ,QAAQ3f,KAAK,CAAC,sCAAuCA,EAAOiD,EAAET,IAAI,CAAES,GAC7D,KAIT,GAAM,CAAE1G,QAAM,CAAE,CAAGijB,EAAcD,SAAS,CAACK,iBAAiB,CAAC5f,EAAOiD,EAAET,IAAI,EAC1E,OAAOqd,OAAOtjB,EAChB,CACF,EAEauZ,GAAc,IAOzB,IAAMC,EAAeC,CAAAA,EAAAA,GAAAA,EAAAA,CAAeA,GAE9B,CAACjW,EAAUoF,EAAeuK,EAAgB,CAAGvJ,CAAAA,EAAAA,EAAAA,CAAAA,CAT7B2P,CAS0D,UAC9E,GAAI,GAAkB/B,EAEtB,EAF0B,KAEnBgC,EAAa5G,EAFC,SAEU,CAAC4E,EAClC,EAAG,CAACgC,EAAchC,EAAG,EAQrB,MANAxW,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACJ4H,GACFqP,CAAAA,EAAAA,EAAAA,EAAAA,CAAQA,CAACzI,EAAAA,CADQ,CACDwK,IAAI,CAAEpR,EAAchF,OAAO,CAE/C,EAAG,CAACgF,EAAc,EAEX,UAAEpF,gBAAUoF,kBAAeuK,CAAgB,CACpD,EAAC,GAEsC,MACrC5I,EACA6J,EACAmP,IAGOC,CAAAA,EAAAA,GAAAA,OAAAA,CAAOA,CAAC,IAAMC,CAAAA,EAAAA,GAAAA,EAAAA,CAAsBA,CAAClZ,EAAS6J,EAAamP,GAAS,CACzEG,cAAe,IACfC,SAAU,IACVC,cAAe,GACfC,MAAO,IACLT,QAAQU,IAAI,CAAC,kEAAmEpd,IACzE,EAEX,0CEtUF,IAAMqd,GAAO,OAAC,UAAEC,CAAQ,CAAwB,GAC1CC,EAAuBD,EAC3B,GAAI,CACFC,EDdG,YACP,MAAiB,SAAQ,YAEzB,iBACA,mDAEA,aACA,2DAGA,SACA,iBACA,IAGA,MAAW,SAAY,cACvB,ECF+CD,EAC7C,CAAE,MAAOtd,EAAG,CAAC,CAEb,MAAO,UAAC8E,OAAAA,CAAKtK,UAAWE,IAAAA,QAAY,UAAG6iB,GACzC,EA8MA,GAAe1X,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CA5Me,OAAC,QACrC2B,CAAM,MACN+R,CAAI,UACJla,CAAQ,eACRqI,GAAgB,CAAK,YACrBE,CAAU,CAMX,GACOiG,EAAevG,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,GAC9B+E,EAAUC,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,GACpBtJ,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAClB,MAAE9G,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAEtByH,EAAUgK,OAAAA,EAAAA,KAAAA,EAAAA,EAAchK,OAAAA,GAAW,IAEnC,CAAC2Z,EAAWC,EAAa,CAAG9b,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAU,GAC9C,CAACoG,EAAkBC,EAAoB,CAAGrG,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAU,GAC5D,CAACgM,EAAaC,EAAe,CAAGjM,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,GAExC,WAAEuG,CAAS,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACC,EAAAA,CAAcA,EACzC,uBAAEC,CAAqB,iBAAEC,CAAe,kBAAEC,CAAgB,CAAE,CAAGX,EAE/D8V,EAAmC,SAAXpkB,MAAM,CAAYqkB,EAAuB,CAACpE,EAAKjgB,MAAM,CAAC,CAAG,KACjFuf,EAAmBtB,GAAoB/P,GACvCoW,EAAsB/E,EAAiBhB,MAAM,CAAG,EADVN,CACe,CAACgC,EAAKN,SAAS,CAGpE4E,EAAgBC,GAAsB,CAC1CvE,KAAMA,EAAKjgB,MAAM,GAAK0gB,CADmB8D,CACZ7D,EAAE,EAAHD,EAAO,KAA8B7c,EAAPoc,mBAC1DV,CACF,GAGM,UAAE/b,CAAQ,eAAEoF,CAAa,CAAE,CAAG2Q,GAAYgL,GAC1C,CAAC/P,EAAgBC,EAAkB,CAAGvM,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC1E,GAGxDsC,EAAe,MAAOY,QAsBtB6c,EAnBJ,GAFA7c,EAAEC,cAAc,GAEZoI,GAAyB,CAACC,EAAiB,CAC7CC,GAAiB,GACjB,MACF,CAUA,GARAwV,CAAAA,EAAAA,GAAAA,EAAAA,CAAYA,CAAC/a,GACbgb,CAAAA,EAAAA,GAAAA,EAAAA,CAAaA,CAAC3R,GAEdrE,GAAoB,GACpByV,GAAa,GACb7P,OAAezQ,GACf6K,EAAoB,IAEhB,CAAC6V,EACH,MAAM,MAAU,CADE,yCAIpB,IAAM3P,EAAYC,CAAAA,EAAAA,EAAAA,EAAAA,CAAYA,CAACL,EAAgBD,GAG/C,GAAI,CACFgP,EAAS,MAAMoB,CAAAA,EAAAA,GAAAA,EAAAA,CAAyBA,CAAC,CAAE,GAAGJ,CAAa,CAAE,GAAG3P,CAAS,EAAIlL,EAAOkE,QAAQ,CAAE/K,EAAKiH,OAAO,CAACmD,KAAK,CAClH,CAAE,MAAOkC,EAAM,CACb,IAAMC,EAAMC,CAAAA,EAAAA,EAAAA,CAAAA,CAAOA,CAACF,GAChBG,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAACF,GACpBV,GAD0B,IAG1Ba,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACC,EAAAA,CAAMA,CAACoV,IAAI,CAAExV,GACxBkF,EAAelF,IAEjB+U,GAAa,GACb,MACF,CAOA,GAJAvV,EAAU,UAACiN,GAAAA,CAAiBA,CAAAA,CAAC0H,OAAQA,SAAY1f,EAAW,IAIxD,CAACghB,SADsBtQ,KAAAA,EAAAA,EAAcsQ,EAChB,KADEtQ,WAAcsQ,EAEvC,MAAM,MAAU,iCAElB,IAAM3V,EAAO,MAAM4V,GAAwBva,EAAS1H,EAAKiH,OAAO,CAACmD,KAAK,CAAEsW,EAA9BuB,OAC1C/e,GAAAA,EAAWmJ,GAAM,GAGjBN,EAAU,UAACiN,GAAAA,CAAiBA,CAAAA,CAAC3M,KAAMA,SAAUrL,GAAW,EAC1D,EAEM4R,EAAeC,CAAAA,EAAAA,EAAAA,CAAAA,CAAeA,CAAC,UACnClS,EACAmC,aAAc6O,EAAe7O,YAAY,GAGrC+J,EAAiB,CAAC6U,GAAiBL,GAAa9V,GAAkBW,GAAyB,CAACC,EAElG,MACE,iCACE,UAACa,EAAAA,GAAOA,CAAAA,CAAC3O,UAAW4O,IAAAA,aAAuB,CAAE9D,GAAI,CAAE+D,GAAI,CAAE,IAEzD,WAACvJ,OAAAA,CAAKT,SAAUD,YACb,CAACse,GACA,iCACE,WAACjd,EAAAA,GAAUA,CAAAA,CAAC6E,GAAI,CAAE8J,GAAI,CAAE,YAAG,QACpB,UAACiO,GAAAA,UAAM9D,EAAKM,OAAO,GAAQ,6FAIlC,UAACjf,MAAAA,CAAIJ,UAAWE,IAAAA,MAAU,UACxB,UAACsH,EAAAA,EAAcA,CAAAA,CACbC,WAAW,IACXvD,OAAQoP,EACR5R,oBAAqBY,EACrBiD,aAAcgO,EACd7L,cAAeA,SAMtBwb,GACC,WAACnjB,EAAAA,GAAGA,CAAAA,CAAC6U,GAAI,YACP,WAAC3O,EAAAA,GAAUA,CAAAA,CAAC6E,GAAI,CAAE8J,GAAI,CAAE,YAAG,2BACD,UAACiO,GAAAA,UAAM9D,EAAKM,OAAO,GAAQ,mDAGrD,UAACzM,EAAAA,CAAYA,CAAAA,UAAEsQ,OAInB,WAACjd,EAAAA,GAAUA,CAAAA,CAACC,QAAQ,UAAU6D,QAAQ,OAAOE,IAAI,MAAMxG,MAAM,iBAAiBqH,GAAI,CAAE8J,GAAI,CAAE,YAAG,aAE3F,UAACtL,MAAAA,CAAIC,IAAI,wCAAwCoD,MAAO,GAAIC,OAAQ,GAAIpD,IAAI,iBAC5E,UAACc,OAAAA,CAAKtK,UAAWE,IAAAA,MAAU,UAAE,cAG9BkjB,GACC,UAACrjB,EAAAA,GAAGA,CAAAA,CAACyG,GAAI,WACP,UAACoM,EAAAA,CAAYA,CAAAA,UAAC,oHAOjB,EAOClL,GACE,UAAC3H,EAAAA,GAAGA,CAAAA,CAACyG,GAAI,WACP,UAACoM,EAAAA,CAAYA,CAAAA,CAACrQ,MAAOmF,WAAe,kGARxC,UAAC3H,EAAAA,GAAGA,CAAAA,CAACyG,GAAI,WACP,UAACoM,EAAAA,CAAYA,CAAAA,CAACgI,MAAM,gBAAO,mFAc9BzH,GACC,UAACpT,EAAAA,GAAGA,CAAAA,CAACyG,GAAI,WACP,UAACoM,EAAAA,CAAYA,CAAAA,CAACrQ,MAAO4Q,WAAa,0DAIrC5F,GACC,UAACxN,EAAAA,GAAGA,CAAAA,CAACyG,GAAI,WACP,UAACkI,EAAAA,CAAoBA,CAAAA,CAAAA,KAIzB,UAAC3O,EAAAA,GAAGA,CAAAA,CAACyG,GAAI,WACP,UAACmI,EAAAA,GAAOA,CAAAA,CAAC3O,UAAW4O,IAAAA,aAAuB,KAG7C,UAACE,EAAAA,GAAWA,CAAAA,UAEV,UAACK,EAAAA,CAAWA,CAAAA,CAACoG,aAAa,IAACnG,aAAc,CAACZ,WACvC,GACC,UAAC1H,EAAAA,GAAMA,CAAAA,CACLsF,cAAY,gCACZlG,QAAQ,YACRzD,KAAK,SACLoB,SAAU,CAACwL,GAAQb,EACnB1D,GAAI,CAAEwE,SAAU,OAAQ,WAEvB0T,EAAY,UAACxT,EAAAA,GAAgBA,CAAAA,CAAChM,KAAM,KAAS,qBAQ9D,EAAC,CAKC4J,WAH2B,CAGfsC,GAHqB/B,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACgC,EAAAA,EAAiBA,CAI/D,EAAE,CAEIwT,GAAyD,CAC7D,CAAC3D,EAAOC,EAAE,CAAC,CAAJD,IAJyB9P,CAMhC,CAAC8P,EAAO6B,IAAD7B,kBAAuB,CAAC,CAAE,yDACjC,CAACA,EAAOM,IAADN,mBAAwB,CAAC,CAAE,6CAClC,CAACA,EAAOO,IAADP,cAAmB,CAAC,CAAE,kEAC7B,CAACA,EAAO4B,IAAD5B,UAAe,CAAC,CAAE,gDACzB,CAACA,EAAOqE,IAADrE,OAAY,CAAC,CAAE,gEACtB,CAACA,EAAOsE,IAADtE,QAAa,CAAC,CAAE,gEACvB,CAACA,EAAOuE,IAADvE,eAAoB,CAAC,CAAE,sDAC9B,CAACA,EAAOwE,IAADxE,oBAAyB,CAAC,CAAE,4DACnC,CAACA,EAAOyE,IAADzE,uBAA4B,CAAC,CAAE,+DACtC,CAACA,EAAO0E,IAAD1E,cAAmB,CAAC,CAAE,sDAC7B,CAACA,EAAO2E,IAAD3E,sBAA2B,CAAC,CAAE,kEACrC,CAACA,EAAO4E,IAAD5E,gBAAqB,CAAC,CAAE,oEAC/B,CAACA,EAAO6E,IAAD7E,uBAA4B,CAAC,CAAE,yEACtC,CAACA,EAAO8E,IAAD9E,WAAgB,CAAC,CAAE,qDAC1B,CAACA,EAAO+E,IAAD/E,aAAkB,CAAC,CAAE,wDAC5B,CAACA,EAAOgF,IAADhF,oBAAyB,CAAC,CAAE,mDACnC,CAACA,EAAOiF,IAADjF,aAAkB,CAAC,CAAE,6CAC5B,CAACA,EAAOkF,IAADlF,iBAAsB,CAAC,CAAE,kDAChC,CAACA,EAAOmF,IAADnF,kBAAuB,CAAC,CAAE,kDACnC,8MCtMA,OAxDsD,OAAC,CAAEoF,OAAQ,cAAEC,CAAY,CAAE,CAAE,EAwDpEC,CAvDP,MAAEnjB,CAAI,CAAE,CAAGC,CAAAA,EAAAA,CAuDUkjB,CAvDVljB,CAuDU,CAvDCA,GACtBsC,EAASyJ,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACrM,GAAAA,CAAqBA,EAE/C,GAAI,CAACujB,GAAgBA,EAAapiB,IAAI,GAAKsiB,GAAAA,gBAAgBA,CAACC,YAAY,CAAE,OAAO,KAEjF,IAAMC,EAAyB,UAAWJ,GAAgB,aAAc3gB,EAClEghB,EAAc,aAAchhB,EAC5BihB,EAAmBxjB,EAAKyjB,MAAM,CAAC/H,MAAM,CAAI,kBAAkBwH,EAAe,GAAI,EAC9EQ,EAAsBR,EAAapiB,IAAI,GAAKsiB,GAAAA,gBAAgBA,CAACO,oBAAoB,CAEvF,MACE,iCACGD,GAAuB,UAACE,GAAAA,CAA+BA,CAAAA,CAACC,gBAAiBX,EAAaY,OAAO,CAAC1Z,KAAK,GAEnG,aAAc8Y,GACb,WAACa,GAAAA,GAAKA,CAAAA,CAAC5a,GAAI,CAAE6a,gBAAiB,OAAC,SAAEC,CAAO,CAAE,UAAKA,EAAQC,OAAO,CAACC,UAAU,EAAEC,EAAG,CAAE,YAC9E,WAAC9f,GAAAA,GAAUA,CAAAA,CAACxC,MAAM,iBAAiBmR,GAAI,EAAG7K,QAAQ,OAAOC,WAAW,mBAClE,UAACS,GAAAA,GAAOA,CAAAA,CAACC,UAAWsb,GAAAA,CAASA,CAAEpb,cAAc,IAACC,SAAS,QAAQC,GAAI,CAAEoQ,GAAI,CAAE,IAAK,qBAGlF,UAAC+K,GAAAA,CAAWA,CAAAA,CACVjd,KAAM6b,EAAaqB,QAAQ,CAACld,IAAI,CAChCJ,QAASic,EAAaqB,QAAQ,CAACna,KAAK,CACpCoa,cAAc,EACdC,cAAc,IACdC,WAAW,SAKhB,UAAWxB,GAAgB,CAACK,GAAe,UAACoB,GAAAA,CAASA,CAAAA,CAAClB,OAAQ,CAACP,EAAa0B,KAAK,CAAC,GAClFrB,GAAe,UAACoB,GAAAA,CAASA,CAAAA,CAAClB,OAAQ,CAAC,CAAEpc,KAAM9E,EAAOsiB,QAAQ,CAACxd,IAAI,CAAE+C,MAAO7H,EAAOsiB,QAAQ,CAAC5d,OAAO,EAAG,GAElGqc,GAA0B,UAACwB,GAAAA,CAAwBA,CAAAA,CAAAA,GAEnD,cAAe5B,GACd,iCACE,UAAClW,GAAAA,GAAOA,CAAAA,CAAC3O,UAAW4O,IAAAA,aAAuB,GAE3C,WAAC7O,GAAAA,GAAGA,CAAAA,WACF,UAACkG,GAAAA,GAAUA,CAAAA,CAACC,QAAQ,iBAAQ,kDAC5B,WAACD,GAAAA,GAAUA,CAAAA,WACT,UAACiE,IAAAA,UAAG2a,EAAanO,SAAS,GAAK,UAAQ,IACvC,WAACxM,IAAAA,WACEib,EAAiB,UAAQrb,CAAAA,EAAAA,GAAAA,EAAAA,CAAWA,CAACqb,eAMhD,UAACxW,GAAAA,GAAOA,CAAAA,CAAC3O,UAAW4O,IAAAA,aAAuB,KAGjD,kBCnEO,IAAM8X,GAAuB,GAA6B9B,EAAOniB,IAAI,GAAKkkB,GAAAA,mBAAmBA,CAACC,eAAe,CAEvGC,GAAqB,GAA2BC,OAAAA,EAAAA,KAAAA,EAAAA,EAAQrkB,IAAI,IAAKskB,GAAAA,EAAgBA,CAAA,GAEzD,QAGoBnC,SAAvDA,EAAOniB,IAAI,GAAKkkB,GAAAA,mBAAmBA,CAACC,eAAe,EAAIhC,CAAmB,QAAnBA,EAAAA,EAAOC,YAAAA,GAAPD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAqBniB,IAAAA,IAASsiB,GAAAA,gBAAgBA,CAACiC,gBAAgB,KCGxH,SAASC,CAAgD,MAGMrC,KAHtC,QAAEA,CAAM,CAAwB,CAAhC,EACjB,CA+BOqC,KA/BLtlB,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,EA+BA,CA9BtB,cAAEslB,CAAY,CAAE,CAAGvZ,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACnM,GAAAA,CAA4BA,EAC1DkV,EAAYkO,GAAUuC,GAAsBvC,IAAAA,CAAAA,QAAWA,EAAAA,EAAOC,CAAnBsC,WAAmBtC,GAAPD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAqBlO,SAAAA,EAElF,MACE,iCACE,UAAC+P,GAAAA,CAAwBA,CAAAA,CAAAA,GAEzB,WAACrmB,MAAAA,WACC,UAAC6F,EAAAA,GAAUA,CAAAA,CAACC,QAAQ,QAAQzC,MAAM,iBAAiBmR,GAAI,YAAK,sDAI5D,WAAC3O,EAAAA,GAAUA,CAAAA,CAACmhB,aAAW,sBACrB,UAACld,IAAAA,UAAGgd,GAAgBxQ,IAAc,UAAQ,IAC1C,WAACxM,IAAAA,WACEvI,EAAKyjB,MAAM,CAAC/H,MAAM,CAAC,UAAQvT,CAAAA,EAAAA,GAAAA,EAAAA,CAAWA,CAACnI,EAAKyjB,MAAM,WAIzD,UAACrlB,EAAAA,GAAGA,CAAAA,CACF+K,GAAI,CACFuc,GAAI,CACN,WAEA,UAAC1Y,EAAAA,GAAOA,CAAAA,CAAC3O,UAAW4O,IAAAA,aAAuB,OAInD,6BCpCA,OANA,SAAS0Y,EACP,IAAMC,EAAWC,CAAAA,EAAAA,GAAAA,CAAAA,CAAaA,GAE9B,MAAO,UAACC,GAAAA,CAAWA,CAAAA,CAACC,IAGUJ,EAAA,EAHDC,GAC/B,wICDA,OAJmB,OAAC,OAAEI,CAAK,OAIZC,CAJcC,CAAM,CAA2C,GAC5E,IAGuBD,EAHhB,UAACE,GAAAA,CAAuBA,CAAAA,CAACC,OAAQ,CAACJ,EAAOE,EAAO,CAAEG,SAAS,KACpE,4HCGO,IAAMC,GAA2B,OAAC,OACvC1Y,CAAK,CAGN,GACO2Y,EAAMC,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,CAAC5Y,GAE3B,GAAoB,GAAG,CAAnB6S,OAAO8F,GACT,OAAO,KAGT,IAAM9kB,EACJ,iCAAE,aACW,IACX,UAACglB,GAAAA,CAAeA,CAAAA,CACdhlB,MACE,iCAAE,sRAG4D,GAAa,OAAXilB,GAAAA,EAAUA,EAAG,gDAE3E,UAACC,GAAAA,CAAOA,CAAAA,CAAC5hB,KAAMC,GAAAA,EAAiBA,CAAC4hB,gBAAgB,CAAExK,OAAO,SAASyK,IAAI,+BAAsB,uBASvG,MACE,WAACC,GAAAA,CAAOA,CAAAA,CAACC,WAAW,aAAatlB,MAAOA,YACrCgf,OAAO8F,GAAO,IAAI,OAD8B,aAIvD,EAAC,4BCvCM,IAAMS,GAA6B,IAEtC,WAACjU,GAAAA,GAAKA,CAAAA,CACJC,SAAS,UACT9H,KAAM,UAACpC,GAAAA,GAAOA,CAAAA,CAACC,UAAWke,GAAAA,CAAgBA,CAAEhe,cAAc,IAACnH,MAAM,UACjEqH,GAAI,CAAE8J,GAAI,CAAE,YAEZ,UAAC1K,IAAAA,UAAE,mCACD,IAAG,+KC4IX,GA1HqC,OAAC,OAAEqF,CAAK,WA0H9BsZ,EA1HgCC,CAAW,kBA0HtBD,EA1HwBE,CAAkB,CAAkB,GACxF,OAAExC,CAAK,MAAEyC,CAAI,YAAEC,CAAU,WAAEC,CAAS,UAAEC,CAAQ,YAAEC,CAAU,WAAEC,CAAS,aAAEC,CAAW,UAAEC,CAAQ,CAAE,CAAGha,EAEjGia,EAAcja,EAAM9M,IAAI,GAAKkkB,GAAAA,mBAAmBA,CAAC8C,UAAU,CAE3DC,EAAaC,CAAAA,EAAAA,GAAAA,EAAAA,CAAaA,CAACpa,GAC3Bqa,EAAaC,CAAAA,EAAAA,GAAAA,EAAAA,CAAaA,CAACta,GAC3Bua,EAAU,IAAIC,KAAkB,IAAbd,GACnBe,EAAM,IAAID,KAEVE,EAAWC,CAAAA,EAAAA,GAAAA,EAAAA,CAAoBA,CAAC3a,GAChC4a,EAAuB,SAATnB,EACdoB,EAA4BtB,GAAeuB,CAAAA,EAAAA,GAAAA,EAAAA,CAA4BA,CAACvB,GAE9E,MACE,iCACGsB,GAA6B,UAACzB,GAA0BA,CAAAA,GAEzD,UAAC2B,GAAAA,CAASA,CAAAA,CACRC,GAHuD5B,IAGhD,gBACP6B,KAAM,CACJ,UAACpqB,MAAAA,CAAiBJ,UAAWE,KAAAA,MAAU,UACrC,UAAC0nB,GAAUA,CACTD,MAAO,CACL5b,MAAOqd,EACPrmB,EAHO6kB,IAGAuC,EAAc,OAAS,cAC9BM,UAAWvB,CACb,EACArB,OAAQ,CACN9b,MAAOsd,EACPtmB,MAAOonB,EAAc,eAAiB,cACtCM,UAAWtB,CACb,KAXK,UAeT,WAACV,GAAAA,CAAOA,CAAAA,CAACC,WAAW,cAAgCtlB,MAAM,wBAAc,KACnE+lB,EAAS9T,MAAM,CAAC,MAAIqV,CAAAA,EAAAA,GAAAA,EAAAA,CAAYA,CAAChB,GAAY,IAAER,EAAU7T,MAAM,GAD9B,eAIT,IAA7BsV,CAAAA,EAAAA,GAAAA,CAAAA,CAAUA,CAACX,EAAKF,GACd,UAACrB,GAAAA,CAAOA,CAAAA,CAACC,WAAW,SAAsBtlB,MAAM,kBAC9C,WAAC6C,GAAAA,GAAUA,CAAAA,WACT,UAACA,GAAAA,GAAUA,CAAAA,CAACE,WAAY,IAAKuE,UAAU,gBACpCkgB,CAAAA,EAAAA,GAAAA,EAAAA,CAAiBA,CAAc,IAAb3B,KACP,IAAI,IAChB4B,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,CAAc,IAAb5B,GAAmB,QALP,UASjC,UAACR,GAAAA,CAAOA,CAAAA,CAAcrlB,MAAM,kBACzBynB,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,CAAc,IAAb5B,IADL,UAIA,UAAfW,EACE,WAACnB,GAAAA,CAAOA,CAAAA,CAACC,WAAW,WAA0BtlB,MAAM,qBACjD6mB,EAAS,MADuB,YAInC,UAACa,EAAAA,QAAQA,CAAAA,CAAAA,EAAK,QAEhB,EAKE,yBAJA,UAACrC,GAAAA,CAAOA,CAAAA,CAACC,WAAW,WAA0BtlB,MAAM,oBAClD,UAAC2nB,GAAAA,CAAOA,CAAAA,CAACC,QAASzb,EAAM0b,GAAG,CAAEvkB,KAAM4iB,KADF,YAMrC,UAACrB,GAAwBA,CAAkB1Y,MAAOA,GAApB,WAAL0Y,GACzB,UAACQ,GAAAA,CAAOA,CAAAA,CAACC,WAAW,eAAmCtlB,MAAM,yBAC3D,UAAC8nB,GAAAA,CAAYA,CAAAA,CAACtiB,QAASmgB,EAAoBoC,QAAQ,IAAC9E,WAAW,IAACF,cAAc,EAAOiF,WAAY,MAD5D,iBAGvC7B,GAAYhD,IAAUgD,EACpB,iCACE,UAACd,GAAAA,CAAOA,CAAAA,CAACC,WAAW,YAAoCtlB,MAAM,qBAC5D,UAAC6iB,GAAAA,CAAWA,CAAAA,CAACrd,QAAS2gB,EAAUlD,aAAa,EAAM+E,WAAY,MAD7B,qBAGpC,UAAChrB,MAAAA,UACC,UAACsU,GAAAA,GAAKA,CAAAA,CAACtI,cAAY,kBAAkBuI,SAAS,UAAU9H,KAAMwe,GAAAA,CAASA,UACrE,WAACplB,GAAAA,GAAUA,CAAAA,CAACC,QAAQ,kBAClB,UAACD,GAAAA,GAAUA,CAAAA,CAACyE,UAAU,OAAOI,GAAI,CAAE3E,WAAY,MAAO,WAAG,sDAE3C,IAAI,uDALf,gBAYX,yBAEH,GAGFqjB,GACC,UAACppB,MAAAA,CAAIJ,UAAWE,KAAAA,UAAc,UAC5B,UAACoqB,GAAAA,CAASA,CAAAA,CACRE,KAAM,CACJ,UAACvkB,GAAAA,GAAUA,CAAAA,CAAaC,QAAQ,QAAQlG,UAAWE,KAAAA,eAAmB,UACpE,WAACuO,SAAAA,WAAO,yBACiB,IACvB,WAACnE,OAAAA,CAAKtK,UAAWE,KAAAA,kBAAsB,WAAGqP,EAAM+b,aAAa,CAAC,sBAHlD,SAMhB,UAACC,GAAAA,CAAcA,CAAAA,CAAChc,MAAOA,EAAOic,UAAU,YAAe,aACvD,UAACC,GAAAA,CAAaA,CAAAA,CAAClc,MAAOA,EAAOic,UAAU,YAAe,YACtD,WAAC/C,GAAAA,CAAOA,CAAAA,CAACrlB,MAAM,uBACZmM,EAAMmc,SAAS,CAACC,SAAS,GAAKC,GAAAA,cAAcA,CAACC,cAAc,EAAI,MAC/Dtc,EAAMmc,SAAS,CAACC,SAAS,GAAKC,GAAAA,cAAcA,CAACE,QAAQ,EAAI,oBAA0C,OAAtBvc,EAAMmc,SAAS,CAACK,KAAK,IAFrE,cAIhC,UAACC,GAAAA,CAAYA,CAAAA,CAACzc,MAAOA,GAAW,iBAChC,UAACkZ,GAAAA,CAAOA,CAAAA,CAACrlB,MAAM,0BACZ6oB,CAAAA,EAAAA,GAAAA,EAAAA,CAASA,CAAC,CAAC1c,EAAM2c,gBAAgB,CAAG,CAAC3c,EAAM+b,aAAa,GADvB,kBAGrC,OAMb,ECnIA,GAVA,SAASa,CAA4C,MAK3BlQ,EAAAA,KALP,CAAE2I,KAUNuH,GAVY,MAUHA,EAAA,CAVW,CAAkB,CAAlC,EACjB,MACE,UAACtD,GAAqBA,CACpBtZ,MAAOqV,EACPkE,WAAW,EAFSD,KAEP5M,EAAAA,KAAAA,EAAAA,EAAQmQ,QAARnQ,GAAmB,CAChC8M,mBAAqC,OAAjB9M,SAAAA,EAAAA,KAAAA,EAAU,QAAVA,EAAAA,EAAQpL,EAAAA,GAARoL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYlQ,KAAAA,GAAZkQ,KAAAA,IAAAA,EAAAA,EAAqB,IAG/C,sDCyDA,OA9DkC,KA8DnBoQ,EA9DoB,OAAE9c,CAAK,CAAqC,GACvE+c,EAAaC,CAAAA,EAAAA,GAAAA,EAAAA,CAA8BA,CAAChd,CA6DZ,CA7DkBid,iBAAiB,CAAGjd,EAAMkd,uBAAuB,CAAE,CACzG,OACA,QACD,EAED,MACE,WAAC1d,GAAAA,GAAKA,CAAAA,CACJjE,GAAI,CACFb,IAAK,CACP,YAEA,UAAC6d,GAAAA,CAAuBA,CAAAA,CACtBC,OAAQ,CACN,CACEhc,MAAO,GAAuB,OAApBwD,EAAMmd,aAAa,CAAC,eAC9B3pB,MAAO,MACT,EACA,CACEgJ,MAAOwD,EAAMxD,KAAK,CAClB0e,UAAWlb,EAAMkb,SAAS,CAC1B1nB,MAAO,SACT,EACD,GAEH,WAAC4pB,GAAAA,CAAUA,CAAAA,CACTvpB,MACE,iCAAE,cAEA,UAACwpB,GAAAA,CAAWA,CAAAA,CACVxpB,MACE,iCAAE,iCAEA,WAAC2R,KAAAA,WACC,UAACG,KAAAA,UAAG,gFACJ,UAACA,KAAAA,UAAG,8FAOjB,SACQoX,KAET,UAACrmB,GAAAA,GAAUA,CAAAA,CACTC,QAAQ,QACR4E,GAAI,CACFrH,MAAO,iBACP+C,GAAI,CACN,WACD,mHAGD,UAACkO,GAAAA,GAAKA,CAAAA,CAACC,SAAS,UAAU7J,GAAI,CAAE8J,GAAI,CAAE,WAAG,gIAM/C,kBC7CA,OAhB+B,OAAC,OAAErF,CAAK,CAAqC,MAgB7Dsd,GAfb,CAAIC,EAAAA,GAAAA,EAAAA,CAAsBA,CAACvd,GAClB,MAc0Bsd,EAd1B,EAACE,GAAAA,CAA4BA,CAAAA,CAACxd,MAAOA,IAG1Cyd,CAAAA,EAAAA,GAAAA,EAAAA,CAAmBA,CAACzd,GACf,KADuB,GACvB,EAAC8c,GAAyBA,CAAAA,MAAQ9c,IAGvC0d,CAAAA,EAAAA,GAAAA,EAAAA,CAAuBA,CAAC1d,GACnB,KAD2B,GAC3B,EAAC2d,GAAAA,CAA6BA,CAAAA,CAAC3d,MAAOA,IAGxC,IACT,ECZA,GAJA,SAAS4d,CAAoC,KAA1B,QAAEvI,CAAM,CAAkB,CAA1B,EACjB,CAGauI,KAHN,IAGeA,CAHf,CAGe,EAHf,EAACN,GAAsBA,CAACtd,MAAOqV,GACxC,QADgCiI,iCCIhC,SAASO,GAAM,CAA6D,KAA7D,UAAEtK,CAAQ,OAAEuK,CAAK,CAA4C,CAA7D,EACb,MACE,UAACttB,EAAAA,GAAGA,CAAAA,CACFsM,KAAM,EACNihB,QAASD,EAAQ,mBAAqB,oBACtCtH,EAAG,EACHwH,UAAU,SACVpnB,WAAY,IACZ0E,SAAU,GACVc,aAAc,WAEbmX,GAGP,CA+CA,IAAM0K,GAAaniB,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CA7CpB,SAASoiB,CAQf,KAR2B,CAC1Bvd,aAAW,WACXwd,CAAS,OACTpiB,CAAK,CAKN,CAR2B,EASpBqiB,EAAmBD,GAAaE,KAAgB1d,EA3B1B,UA4BtB2d,CAD6DC,CAAdF,OAC3BtiB,EAAAA,KAAAA,EAAAA,EAAOyiB,OAAPziB,qBAAOyiB,GAAgCC,GAAAA,EAAmBA,CAEpF,MACE,iCACE,WAACjf,EAAAA,GAAKA,CAAAA,CAACC,UAAU,MAAMhF,WAAW,SAASlE,QAAS,YAClD,WAACsnB,GAAAA,WAAM,oBAAkBld,KACzB,UAACnQ,EAAAA,GAAGA,CAAAA,CAAC8K,SAAU,YAAI,MACnB,WAACuiB,GAAAA,CAAMC,KAAK,cAAC,gBAAcQ,QAG7B,WAAC5nB,EAAAA,GAAUA,CAAAA,WAAC,kEACsD,IAChE,WAACQ,GAAAA,CAAYA,CAAAA,CAACC,KAAM,+DAAiF,OAAlBmnB,aAAqB,WAC7FA,EAAkB,mBAI9BF,GACC,WAACjZ,EAAAA,GAAKA,CAAAA,CAACC,SAAS,oBACd,UAACsZ,EAAAA,GAAUA,CAAAA,CAACnjB,GAAI,CAAE3E,WAAY,GAAI,WAAG,0DAAkE,YAC7FunB,EAAU,0BAAwB5jB,CAAAA,EAAAA,GAAAA,EAAAA,CAAWA,CAAC2P,SAASiU,IAAY,uIAKjF,UAAC/e,EAAAA,GAAOA,CAAAA,CAAC7D,GAAI,CAAEuc,GAAI,EAAG6G,GAAI,CAAC,CAAE,MAGnC,EAOyC,CACvC5iB,MAAOwB,EAAAA,EAAeA,CACtBoD,YAPF,CAOeie,QAPNA,EACP,GAAM,CAAExsB,MAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAC5B,MAAOD,OAAAA,EAAAA,KAAAA,EAAAA,EAAMnB,MAANmB,CAAMnB,GAAW,EAC1B,EAKEktB,UAAWU,GAAAA,EAAkBA,mBClC/B,IAAMC,GAA+B,OAAC,QACpCzJ,CAAM,QACN3I,CAAM,QACN6K,CAAM,CACkD,UACxD,GAA0BlC,GAAgB,MAAP,EAAO,EAACqC,GAAeA,CAACrC,CAAlCuC,MAA0CvC,IAE/DiC,GAAmBC,GAAgB,MAAP,EAAO,EAACQ,EAAlBT,CAFoCI,CAEDK,GAErDZ,GAAqB9B,GAAgB,MAAP,EAAO,EAACE,GAAcA,CAAhC4B,OAAyC9B,EAFR0C,EAIrDgH,CAAAA,EAAAA,GAAAA,EAAAA,CAA2BA,CAACrS,GAAgB,KAFQ6I,CAEf,EAAO,EAACyJ,GAAAA,CAAmBA,CAAAA,CAACxpB,KAAMkX,EAAQuS,kBAAkB,MAEjGC,CAAAA,EAAAA,GAAAA,EAAAA,CAAYA,CAACxS,GAAgB,MAAP,EAAO,EAACyS,GAAAA,CAAeA,CAAAA,CAAC3pB,KAAMkX,EAAQuS,kBAAkB,MAE9EG,CAAAA,EAAAA,GAAAA,EAAAA,CAAiBA,CAAC/J,IAAWgK,CAAAA,EAAAA,GAAAA,EAAAA,CAAiBA,CAAChK,GAAgB,MAAP,EAAO,EAACuH,GAASA,CAACvH,OAAQA,EAAQ3I,OAAQA,IAElG4S,CAAAA,EAAAA,CAFyE1C,EAEzE0C,EAAAA,CAAkBA,CAACjK,GAAgB,MAAP,EAAO,EAACuI,GAASA,CAACvI,OAAQA,IAEtDkK,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,CAAClK,GAF8BuI,CAEnB4B,CAAAA,EAAAA,GAAAA,EAAAA,CAAkBA,CAAC9S,GAAgB,MAAP,EAAO,EAACuR,GAAUA,CAAAA,GAExEsB,CAAAA,EAAAA,EDgBmB,CChBnBA,EAAAA,CAAcA,CAAClK,IAAWoK,CAAAA,EAAAA,GAAAA,EAAAA,CAAyBA,CAAC/S,GAC/C,MADwD,EACxD,EAACgT,GAAAA,CAAsBA,CAAAA,CAAC/oB,QAAQ,QAAQ+V,OAAQA,IAGlD,IACT,EA8CA,GA5CyB,OAAC,QAAEjP,CAAM,GA4CnBkiB,QA5CqBC,CAAS,OA4CdD,EAAA,EA5CgBE,CAAS,CAAE,GAAGjrB,EAA8B,GACnF,CAAE6J,MAAI,CAAE,CAAG7J,EACX,QAAE2iB,CAAM,CAAE,CAAGnZ,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACC,EAAAA,CAAcA,EACtCyhB,QAAUD,EAAAA,EAAaD,EAEvBG,EAA4B/nB,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IACjC8nB,EACHhB,GAA6B,CAC3BzJ,OAAQyK,EAAQzK,MAAM,CACtB3I,OAAQoT,EAAQpT,MAAM,QACtB6K,CACF,QACAnkB,EACH,CAAC0sB,EAASvI,EAAO,EAEdyI,EACJvhB,GACA,CAAC7J,EAAM4O,UAAU,EACjBqc,GACA,CAACN,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,CAACM,EAAUxK,MAAM,GAChC,CAACiK,CAAAA,EAAAA,GAAAA,EAAAA,CAAkBA,CAACO,EAAUxK,MAAM,GACpC,CAAC4K,CAAAA,EAAAA,GAAAA,EAAAA,CAAaA,CAACJ,EAAUxK,MAAM,EAEjC,MACE,iCACG0K,GACEC,GAAiBF,GAChB,UAACI,GAAAA,CAAMA,CAAAA,CAACxT,MAAM,OAAEoT,EAAAA,KAAAA,EAAAA,EAASpT,MAAM,CAAE2I,EAAjByK,IAAuB,OAAEA,EAAAA,KAAAA,EAAAA,EAASzK,MAAM,CAAEwK,EAAjBC,QAA4BD,EAAWM,WAAW,EAAOC,OAAO,MAG5GxrB,EAAM2e,QAAQ,CAEf,UAAC8M,GAAAA,CAASA,CAAAA,CACRtZ,GAAItJ,EACJoiB,UAAWA,EACXnT,MAAM,OAAEoT,EAAAA,KAAAA,EAAAA,EAASpT,MAAM,CACvB2I,EADQyK,IACF,OAAEA,EAAAA,KAAAA,EAAAA,EAASzK,MAAM,CACvBiL,EADQR,YACO,CAAClrB,EAAMmX,OAAO,CAC7BwU,eAAgB3rB,EAAM2rB,cAAc,EAAI,CAACR,GAA6B,CAACC,GAAiB,CAACprB,EAAM4rB,UAAU,KAIjH,8BChHA,uBACA,cAAsB,yDAAwE,YAAgB,mBAAsB,KAAO,mBAAsB,mBAAoB,uCAAgD,UAAW,uBAsBhP,OAlBA,UAkBe,EAjBf,UAiB2B,GAjB3B,CACA,YACA,EANA,cAA0C,oBAA0B,mBACpE,KAA+C,oBAA0B,SAAY,sBAAuB,2BAA8B,0BAA6B,UAAe,UADlH,KAAmD,iCAAoC,sCAAyC,QAAY,WAAc,8BAAkC,6CAAqD,UAMrT,MACA,OAAsB,eAAmB,WACzC,SACA,UACA,oBACA,YACA,mCACA,mBACA,CAAG,MAA+B,eAAmB,UACrD,IACA,CAAG,eAAgD,eAAmB,SACtE,glEACA,mBACA,EAAG,EACH,oDCGO,IAAMC,GAAa,QACsCC,KADrC,aAAExoB,CAAW,CAA6B,GAC7D,QAAEkS,CAAM,kBAAEuW,CAAgB,CAAEC,gBAAiB3nB,CAAM,CAAE,CAAmBynB,OAAhBA,GAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAgBA,EAAAA,GAAhBA,KAAAA,IAAAA,EAAAA,EAAsB,CAAC,EAC/EG,EAAmBC,CAAAA,EAAAA,GAAAA,CAAAA,CAAmBA,GACtC7e,QAAgBmI,EAAAA,KAAAA,EAAAA,EAAQ/Q,OAAO,CAAf+Q,MACdhY,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtB,QAAEoL,CAAM,CAAE,CAAGW,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACqL,EAAAA,CAAaA,EACrCsX,EAAgBC,CAAAA,EAAAA,GAAAA,CAAAA,CAAoBA,GAOpCC,EAAkBhxB,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,CACjC,GACE,CAAKwN,GAAD,EAIAA,EAAOyJ,CAJE,SAIQ,CAACjT,IAAI,CAAG7B,EAAK+U,SAAAA,EAAW,CAEpC,CADS+Z,MAAM9e,IAAI,CAAC3E,EAAOyJ,UAAU,CAACmG,IAAI,IACjC2C,IAAI,CAAC,GAASmR,CAAAA,EAAAA,GAAAA,EAAAA,CAAWA,CAACpR,EAAK1W,IAKnD,CAACoE,EAAQrL,EAAK+U,SAAS,CAAC,EAGpBia,EAAUppB,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,KACtB,GAAI,CAACiB,EACH,MAAO,EAAE,CAEX,IAAM4c,EAAS,IAAIwL,UAAIR,EAAAA,EAAoB,EAAE,EACvCS,IAAgB7jB,GAASA,EAAOyJ,UAAU,CAACjT,CAD1B4sB,GAC8B,EAAIzuB,EAAK+U,SAAS,CAMvE,EAN0E,KAEtE,GAAgBma,GAAkBlvB,EAAKyjB,MAAM,CAAC7F,IAAI,CAAC,GAAWmR,CAAAA,EAAAA,GAAAA,EAAAA,CAAWA,CAACnK,EAAMxa,KAAK,CAAEvD,EAAOI,OAAO,KACvGwc,EAAO0L,GAAG,CAACtoB,EAAOI,OAAO,EAGpB6nB,MAAM9e,IAAI,CAACyT,EACpB,EAAG,CAACgL,EAAkBzuB,EAAKyjB,MAAM,CAAEzjB,EAAK+U,SAAS,CAAE1J,EAAQxE,EAAQf,EAAY,SAE/E,GAAgB6oB,EAKd,KALa,IAKb,EAACS,EAL4B,CAK5BA,CAAMA,CAAAA,WACL,WAAC9qB,GAAAA,GAAUA,CAAAA,CAACC,QAAQ,KAAK6D,QAAQ,OAAOE,IAAK,EAAGD,WAAW,mBACzD,UAACS,GAAAA,GAAOA,CAAAA,CAACC,UAAWsmB,GAAepmB,MAAFomB,QAAgB,IAACnmB,SAAS,UAC1DpD,EAAc,UAAY,OAAO,QAClC,UAACtE,GAAAA,GAAOA,CAAAA,CACNC,MAAO,wHAEN,OADCqE,EAAc,UAAY,OAC3B,UACD4C,KAAK,IACLD,UAAU,eAEV,UAACK,GAAAA,GAAOA,CAAAA,CAACC,UAAWC,GAAAA,CAAQA,CAAEC,cAAc,IAACnH,MAAM,SAASoH,SAAS,eAIzE,UAAC9K,GAAAA,GAAGA,CAAAA,CAACgK,QAAQ,OAAOC,WAAW,SAASC,IAAK,WAC3C,WAACrH,GAAAA,GAAWA,CAAAA,CAACC,SAAS,IAACW,KAAK,mBAC1B,UAACytB,GAAAA,GAAUA,CAAAA,CAACtwB,GAAG,wBAAe,mBAC9B,UAACuwB,GAAAA,GAAMA,CAAAA,CACLlxB,UAAWE,KAAAA,UAAc,CACzBixB,QAAQ,eACRpuB,MAAM,iBACNF,SAAS,IACTmJ,SA/DO,CA+DGA,GA9DlB3D,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACC,EAAAA,EAAaA,CAAC8oB,aAAa,EACtClB,SAAAA,EAAmBmB,EAAMtT,MAAM,CAAChS,KAAK,CACvC,EA6DUA,CA9DRmkB,KA8De1e,QAAAA,EAAiBmf,EAAQjwB,MAAM,CAAC8vB,EAAgB,CAAC,EAAE,EAAnDhf,QAENmf,QAAAA,KAAAA,EAAAA,EAASrT,GAATqT,CAAa,GACZ,WAACW,GAAAA,GAAQA,CAAAA,CAAavlB,MAAOwa,EAAO1iB,SAAU,CAAC2sB,EAAgBjK,aAC7D,UAACN,GAAAA,CAAWA,CAAAA,CAACrd,QAAS2d,EAAO6E,WAAY,GAAID,QAAQ,IAACoG,aAAa,IAClE,CAACf,EAAgBjK,IAChB,UAACtgB,GAAAA,GAAUA,CAAAA,CAACC,QAAQ,UAAUwE,UAAU,OAAO1K,UAAWE,KAAAA,YAAgB,UAAE,qBAHjEqmB,cA/BlB,IA6CX,EAAC,4BEiID,OAAelb,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAACmmB,QAbcrtB,EAA2BA,EAA3BA,KAlLJ,SAChCkF,CAAO,QACP2D,CAAM,CACNykB,aAAW,UACX5sB,CAAQ,YACRkO,CAAU,CACV,GAAG5O,EAQJ,GACO,CAACutB,EAAcC,EAAgB,CAAGxqB,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,CAAqBhD,EAAM8I,MAAM,EAC3E,sBAAEgJ,CAAoB,CAAE,CAAGL,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,CAACC,GAAAA,EAAcA,EACxD,CAAC+b,EAAeC,EAAiB,CAAG1qB,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,CAAU8O,GACtD6b,EAAoBC,CAAAA,EAAAA,EAAAA,EAAAA,CAAwBA,IAAMhf,EAClDif,EAAiBC,CAAAA,EAAAA,EAAAA,EAAAA,CAAgBA,CAACjlB,GAClCuO,GAAoC,IAAtBpX,EAAMoX,WAAW,EAAcvO,GAAU,CAACgU,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAChU,GAEvE,CAAC/K,EAAQ,CAAGiwB,CAAAA,EAAAA,GAAAA,EAAAA,CAAiCA,GAC7C,CAACC,EAAkB,CAAGC,CAAAA,EAAAA,GAAAA,CAAAA,CAAgBA,CAAC,CAAEviB,gBAAiB7C,CAAO,GACjE+iB,EAAaoC,GAAqBA,EAAkB9U,MAAM,CAAG,EAC7D,MAAE1b,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtBywB,EAAc7c,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,GAC5BmE,EAASnB,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAElB8Z,EADaC,CAAAA,EAAAA,GAAAA,CAAAA,CAAmBA,IACJ,CAACF,GAAetf,EAC5Cyf,EAAuB,CAAC7wB,EAAKmC,QAAQ,CAGrCoa,EAAQE,GACZ,IAAyBrL,CADLqL,EACqB0T,GAAqBO,OAAwB1vB,CAA/C,CAAsCqK,EAAL,CAEpEylB,EAAe5S,GAAiB3B,GAChCwU,EAAiB9S,GAAmB1B,GACpCyU,EAF+B9S,CAEN,CAAC4S,GAAiB,CAAC,CAACC,GADV9S,CAC6ByS,EAChEO,EAAoBD,GAAyB,CAACN,EAG9CQ,EAAab,IAAmB7tB,EAAM2uB,EAHoB,UAG1B3uB,EAAsB2tB,CAAAA,CAAgB,CACtErqB,EAAc,CAACtD,EAAM2O,WAAW,EAAI8e,CAAAA,CAAY,EAAMiB,GAAc,CAACD,EACrEG,EACJ,CAAC5uB,EAAM2O,WAAW,EAAI8e,CAAAA,CAAY,EAAMe,GAA0B,EANkE,GAMnDC,CAAAA,CAAgB,CAE7FrtB,EAAe/F,CAAAA,EAAAA,EAAAA,OAF+C,IAE/CA,CAAWA,CAC9B,eAAOwO,CAAAA,MAAcglB,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,EAAAA,SAAAA,CAAAA,EAAAA,CAAoBC,EAAP,UAAOA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,EAAAA,SAAAA,CAAAA,EAAAA,CAAyBC,EAAP,UAAOA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,EAAAA,SAAAA,CAAAA,EAAAA,GAAqB,IACrFruB,GAAAA,EAAWmJ,EAAMglB,GAEjB,GAAM,CAAEjuB,KAAMsqB,CAAO,CAFrBxqB,CAE0B,MAAM5C,EAAQ,SAAEoH,OAAS2E,CAAK,IAExDmlB,SDhEUA,CACyB,CACvCpgB,CAAmB,CC8DFogB,CD7DE,CACnBF,CAAwB,CACxBC,CAA2B,CAC3BE,CAAuB,CACvBnmB,CAAe,YAEf,IAAMomB,EAAuB,CAAC,CAAChE,GAAWiE,CAAAA,EAAAA,GAAAA,EAAAA,CAA0BA,CAACjE,EAAQzK,MAAM,EAE7E2O,EA9CN,CADwBC,EA+Ce,CAAEJ,CA/CuE,SA+C1FK,OAAmCR,qCAAiBC,CAAmB,GA9CpFE,cAAc,CACdnf,CADgB,CAChBA,CAASA,CAACyf,iBAAiB,CAEhCF,EAAKP,eAAe,CACfhf,CADiB,CACjBA,CAASA,CAAC0f,eAAe,CAE9BH,EAAKN,kBAAkB,CAClBjf,CADoB,CACpBA,CAASA,CAAC2f,mBAAmB,CAE/B3f,EAAAA,CAASA,CAACC,MAAM,CAsCjB2f,EAlCN,CAD4BL,EAmCmB,EAnC6C,aAmClEM,CAAuBV,uBAAgBC,CAAqB,GAlC7ED,cAAc,CACdnf,CADgB,CAChBA,CAASA,CAAC8f,kBAAkB,CAEjCP,EAAKH,oBAAoB,CACpBpf,CADsB,CACtBA,CAASA,CAAC+f,iBAAiB,CAE7B/f,EAAAA,CAASA,CAACggB,OAAO,CA6BlBC,EAzBN,CADyBV,EA0BgB,EA1B0E,UA0B5FW,IAAoBf,uBAAgBC,kBAAsBJ,CAAgB,GAzBxFG,cAAc,CACdnf,CADgB,CAChBA,CAASA,CAACmgB,kBAAkB,CAEjCZ,EAAKH,oBAAoB,CACpBpf,CADsB,CACtBA,CAASA,CAACogB,iBAAiB,CAEhCb,EAAKP,eAAe,CACfhf,CADiB,CACjBA,CAASA,CAACqgB,gBAAgB,CAE5BrgB,EAAAA,CAASA,CAACE,OAAO,CA4BlBogB,EAASC,CAAAA,EAAAA,GAAAA,CAAAA,CAA0BA,CAACnF,EAASpiB,GACnD5E,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAAC,CART,GAFA,EACSkrB,EAELP,EACKkB,EAEFL,CAII,CAAU9wB,EAVL,IAUYwxB,CAAO,GAGjCxhB,GAAcigB,GAChB3qB,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CADkB,CACf,GAAG6rB,CAAc,CAAEnxB,MAAOwxB,CAAO,EAElD,ECiCQlF,EACA,CAAC,CAACtc,EACFigB,EACAC,EACAC,EACA,CAAC,QAACvZ,EAAAA,KAAAA,EAAAA,EAAQmC,MAAM,EAChB4V,GAGEA,IAAiBvtB,EAAM8I,MAAM,EAAE,CACjCwnB,EAAAA,GAAAA,EAAAA,CAAYA,EAEhB,EACA,CAACprB,EAAS0J,EAAYlO,EAAU5C,QAAS0X,EAAAA,KAAAA,EAAAA,EAAQmC,MAAM,CAAE4V,CAAhB/X,CAA8BxV,EAAM8I,MAAM,CAAC,EAGhFynB,EAAwBl1B,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,CACvC,CAACwO,EAAMglB,IAAeztB,EAAayI,EAAMglB,GAAY,GACrD,CAACztB,EAAa,EAGVovB,EAAuBn1B,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,CACtC,CAACwO,EAAMglB,IAAeztB,EAAayI,EAAMglB,GAAY,GAAO,GAC5D,CAACztB,EAAa,EAGVqvB,EAAep1B,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,CAC9B,IACEmyB,EAAgBkD,CAAAA,EAAAA,GAAAA,EAAAA,CAAYA,CAACC,EAAM3wB,EAAM8I,MAAM,EACjD,EACA,CAAC0kB,EAAiBxtB,EAAM8I,MAAM,CAAC,EAuCjC,MACE,iCACE,WAAC8jB,GAAAA,CAAMA,CAAAA,WACJ5sB,EAAM2e,QAAQ,CAEf,UAACoM,GAAgBA,CACflhB,KAAM7J,EAAM6J,IAAI,CAChB+E,EAFemc,SAEHnc,EACZqc,UAAWjrB,EAAMirB,SAAS,CAC1BD,UAAWhrB,EAAMgrB,SAAS,CAC1BniB,OAAQA,EACRsO,QAASnX,EAAMmX,OAAO,CACtBwU,eAAgB3rB,EAAM2rB,cAAc,CACpCC,WAAYA,WAEX,CAAC5rB,EAAM4wB,WAAW,EACjB,UAACC,GAAAA,EAAaA,CAAAA,CAACC,SAAU,UAAC70B,MAAAA,UAAI,gCAC3B2vB,GAAc,UAACmF,GAAAA,CAAcA,CAAAA,CAACrlB,gBAAiB7C,QAKrD,CAACwlB,GAAwB,CAACruB,EAAM4wB,WAAW,EAAI,UAACI,GAAAA,CAAsBA,CAAAA,CAAAA,MAGxE,CAAC3C,GAAwB,CAACruB,EAAM4wB,WAAW,EAAI,UAACK,GAAAA,CAAQA,CAAAA,CAAAA,GAEzD,UAACC,GAAAA,EAAUA,CAAAA,CAACtiB,iBAAYA,GAAAA,EAAqB/G,SAAU4oB,EAAjB,OAAd7hB,GAAwD5O,EAAMirB,SAAS,GAE/F,UAACY,GAAUA,CAACvoB,MAADuoB,MAAcvoB,IAEzB,WAACspB,GAAAA,CAAMA,CAAAA,WACL,UAACuE,GAAAA,CAAiBA,CAAAA,CAChBpvB,QACEosB,EACIiD,GAAAA,CAAsBA,CAACC,OAAO,CAC9B/tB,EACE8tB,GAAAA,CAAsBA,CAACE,OAAO,CAC9BF,GAAAA,CAAsBA,CAACG,IAAI,CAEnC3iB,WAAYA,IAGb0e,GACC,UAAC7e,EAAAA,CAAYA,CAAAA,CAACrQ,MAAOkvB,WAAa,iGAKlCoB,CAAAA,GAAcF,CAAAA,CAAoB,EAAM,CAACxuB,EAAM2O,WAAW,EAAI,CAAC0f,GAAwB,CAACF,GACxF,UAAC5c,GAAeA,CAAC1J,SAAU6lB,IAG7B,CAHkBnc,EAGlB,OAACigB,GAAAA,CAAcA,CAAAA,CAAAA,GAEf,UAACzZ,GAAoBA,CAACD,OAA+B,QAAvB9X,EAAe,QAAfA,EAAAA,EAAMirB,KAAflT,IAAekT,GAANjrB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiB8X,MAAAA,GAAjB9X,KAAAA,IAAAA,EAAAA,EAAAA,QAA2BA,EAAAA,EAAMgrB,SAAAA,GAANhrB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiB8X,MAAM,GAEhF,UAAC2Z,GAAAA,EAAQA,CAAAA,CAAAA,GAERC,CA/FS,KACd,IAAMC,EAAc,CAClB,GAAG3xB,CAAK,CACR6I,oBACA+F,EACA9F,OAAQykB,EACR7sB,SAAUU,CACZ,SACA,GAA4B,CAAC+sB,EACpB,UAACyD,CADgC,EACdA,CAAE,GAAGD,CAAW,CAAEhjB,WAAW,MAGrD,IAAyBrL,GAAgB6qB,EAIzC,CAACE,GAAwBO,EAEzB,IANwC,CAMxC,KAACiD,GAAsBA,CACpB,GAAGF,CAAW,CACf/W,GAJ+C,EAIxC0T,GAAgBC,EACvBjB,YAAaA,EACb5sB,OAJqBmxB,EAIXtB,IAKZ,GAA0BjtB,GAAgBsrB,GAA2BT,EAIrEA,EACK,SAL6E,CAK5EvlB,CADO,CACKA,CAAE,GAAG+oB,CAAW,CAAEjxB,CALgC,QAKtB8vB,WAJzC,EAIa5nB,CAJb,OAACsO,GAAQA,CAAE,GAAGya,CAAW,CAAEva,YAAaA,IAfxC,CAeSF,EAfT,OAAC4a,GAAWA,CAAE,GAAGH,CAAW,EAqBvC,UAiEF,EAAC,CAMCzsB,MA5FuB4sB,EA4FdjkB,EAAAA,EAAUA,CACnBhF,OALgB,CAKRkpB,GALcvoB,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACqL,EAAAA,CAAaA,EAAEhM,MAAM,CAMtDykB,YALqB,CAKR0E,GALcxoB,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACqL,EAAAA,CAAaA,EAAEyY,WAAW,EAMhE,6BC5OF,OAR8B,IAC5B,UAACV,GAAAA,CAAMA,CAAAA,UACL,UAAChxB,CAMUq2B,EANVr2B,GAAGA,CAAAA,CAACs2B,UAAU,IAMiBD,EAAA,EANTrsB,QAAQ,OAAOC,WAAW,SAASoR,eAAe,SAASxG,GAAI,WACpF,UAAC5V,GAAAA,CAAcA,CAAAA,CAACF,OAAQD,GAAAA,CAAaA,CAACy3B,UAAU,mCCsCtD,OAtBsB,IACpB,GAAM,QAAEtpB,CAAM,KAqBDupB,QArBG9E,CAAW,CAAE,CAAG9jB,CAAAA,CAqBN4oB,CArBM5oB,CAqBN,CArBMA,UAAAA,CAAUA,CAACqL,EAAAA,CAAaA,EAClD,CAACoW,GAAaoH,EAAiB,CAAGC,CAAAA,EAAAA,GAAAA,CAAAA,CAAYA,CAACtyB,EAAM6J,IAAI,EACzD,CAACmhB,GAAauH,EAAiB,CAAGC,CAAAA,EAAAA,GAAAA,CAAAA,CAAYA,OAAC3pB,EAAAA,KAAAA,EAAAA,EAAQjI,IAAI,IAAZiI,EAAcrK,EAAWwB,EAAM6J,IAAI,QAExF,CAAMhB,GAAU,CAACykB,GAAgB+E,GAAoBE,EAC5C,UAACN,GAAqBA,CAAAA,EADwC,CAKrE,UAAC5E,GAAiBA,CACf,GAAGrtB,CAAK,CACT4O,WAAY,CAAC5O,CANciyB,CAMRpoB,IAAI,CACvBA,KAAM7J,EAHUqtB,IAGA,CAChBpC,UAAWA,EACXD,UAAWA,WAEVhrB,EAAM2e,QAAQ,EAGrB,gGCvCO,IAAM2D,EAA2B,KACtC,IAAMmQ,EAAmBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,GACtCxjB,EAAevG,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,GAEpC,GAAK8pB,CAAD,CAEJ,MACE,UAACliB,EAAAA,GAAKA,CAAAA,CAACC,SAAS,OAAO7J,GAAI,CAAE+J,OAAQ,OAAQrO,GAAI,EAAGoO,GAAI,CAAE,WACvD,gHAAwI,aAAxBvB,EAAAA,KAAAA,EAAAA,EAAcoJ,SAAS,GAG9I,EAHuHpJ,8FCPhH,IAAMwjB,EAAsB,KACjC,IAAM3jB,EAAc4jB,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,GAC5B,oBAAEC,CAAkB,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,CAAkBA,GAEjD,MAAOzvB,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CACZ,UAAMwvB,EAAAA,KAAAA,EAAAA,EAAoBxX,IAAI,CAAC,GAAamR,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACxd,EAAa+jB,CAA/DF,CAAuEG,KAAK,CAAC,EAAE,CAACtuB,OAAO,GAC7F,CAACmuB,EAAoB7jB,EAAY,CAErC,EAAC,2HCPM,IAAMrJ,EAAiB,EAAC,EAEA,KAC7B,IAAMyB,EAAQwB,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,GACvB,CAAEnL,MAAI,aAAEuR,CAAW,CAAE,CAAGtR,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAEzC,MAAO8G,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAAC,KACd,GAAI,GAAiB4C,GACjB6rB,CAAAA,EAAAA,CADwB,CACxBA,EAAAA,CAAUA,CADM,EACErvB,EAAAA,EAAQA,CAACsvB,QAAQ,EACrC,CADwC,KACjCC,CAAAA,EAAAA,EAAAA,aAAAA,CAAaA,CAAC/rB,EAAMjC,OAAO,CAAE6J,EAGxC,EAAG,CAAC5H,EAAO4H,EAAavR,EAAK21B,YAAY,CAAC,CAC5C,EAAC,EAEsC,IACrC,IAAMhsB,EAAQwB,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,GACvB,MAAEnL,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAE5B,MAAO8G,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAAC,KACd,GAAI,GAAWyuB,CAAAA,EAAAA,EAAAA,CAAD,CAACA,CAAUA,CAAC7rB,EAAOxD,EAAAA,EAAQA,CAACsvB,QAAQ,EAElD,CAFqD,MAE9C9kB,QAAQC,GAAG,CAACglB,EAAeja,GAAG,CAAC,GAAa+Z,CAAAA,EAAAA,EAAAA,aAAAA,CAAaA,CAAC/rB,EAAMjC,OAAO,CAAET,KAC7EgO,IAAI,CAAC,IACJ,IAAM5S,EAAMwP,KAAKxP,GAAG,IAAIjD,EAAOuc,GAAG,CAAC,GAAOka,EAAErtB,SAAS,GACrD,OAAOpJ,EAAO4d,IAAI,CAAC,GAAO6Y,EAAErtB,SAAS,GAAKnG,EAC5C,GACC8S,KAAK,CAAC,KACE,CAAE3M,UAAW,EAAGP,MAAOC,EAAe,EAGnD,EAAG,CAACyB,EAAOisB,EAAgB51B,EAAK21B,YAAY,CAAC,CAC/C,EAAC,mFCzBD,MATA,SAAsBtpB,CAAa,EACjC,IAAM3E,EAAU2I,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,EAQbykB,CANb,MAAO/tB,CAAAA,EAAAA,EAMkB+tB,CANlB/tB,CAAQA,CAAC,KACd,GAAKsF,CAAD,CACJ,IADW,EACJypB,CAAAA,EAAAA,EAAAA,qBAAAA,CAAqBA,CAACpuB,EAAS2E,EACxC,EAAG,CAAC3E,EAAS2E,EAAK,CACpB,yECKA,MAbwB,OAAC,CAAE1L,UAAQ,UAapBkS,IAbsB/P,CAAY,CAAuD,GAChG,CAACizB,EAAc,CAAG1sB,CAAAA,CAYIwJ,CAZJxJ,CAYI,CAZJA,CAAAA,CAAgBA,UAIxC,SAAI1I,GAAwDmC,MAA9BA,QAAyE9B,GAA1B,CAAQ+0B,GAK9EA,EALwC/0B,CAG9Bg1B,CAFf,EAEeA,EAAAA,EAAAA,CAFR,CAEoBlzB,EAAcnC,EAG7C,CAD0Bs1B,oFCK1B,MAdyB,KACvB,IAAMtf,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,GAC9B/P,EAASC,CAAAA,EAAAA,CAYFuC,CAZEvC,EAAAA,CAASA,GAExB,MAAOC,CAAAA,EAAAA,EAUsB,CAVtBA,CAAQA,CAAqB,UAClC,GAAKF,GAAW8P,EAKhB,KALe,EAIC,KAJc,CAIRA,EAAauf,UAAU,CAACrvB,EAAOI,OAAO,CAAE,SAEhE,EAAG,CAACJ,EAAQ8P,EAAa,CAC3B,iDCdO,IAAMiC,EAAqB,GACzB,CAAC,CAAC9Q,GAAUA,EAAOU,SAAS,CAAG,aCFxC,WAAkB,wdCAlB,WAAkB,+CCAlB,WAAkB,kGCAlB,WAAkB,+ICAlB,WAAkB,4FCAlB,WAAkB,wGCAlB,WAAkB,8NCDlB,aACA,sBACA,aAAsB,wDAAwE,YAAgB,mBAAsB,KAAO,mBAAsB,oBAAoB,sCAAgD,UAAW,uBA0BhP,MAtBA,YACA,cACA,UAoBuB,CApBvB,CACA,EANA,cAA0C,oBAA0B,mBACpE,KAA+C,oBAA0B,SAAY,sBAAuB,2BAA8B,0BAA6B,UAAe,UADlH,KAAmD,iCAAoC,sCAAyC,QAAY,WAAc,8BAAkC,6CAAqD,UAMrT,KACA,OAAsB,eAAmB,UACzC,SACA,UACA,oBACA,YACA,mCACA,mBACA,CAAG,MAA+B,eAAmB,UACrD,IACA,CAAG,eAAgD,eAAmB,SACtE,MACA,IACA,SACA,SACA,KACA,mBACA,EAAG,EACH","sources":["webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/new-safe/create/steps/StatusStep/LoadingSpinner/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/AddOwner/context.ts","webpack://_N_E/./src/components/tx-flow/flows/ChangeThreshold/context.tsx","webpack://_N_E/./src/components/tx/AdvancedParams/types.ts","webpack://_N_E/./src/components/tx/AdvancedParams/GasLimitInput.tsx","webpack://_N_E/./src/components/tx/AdvancedParams/AdvancedParamsForm.tsx","webpack://_N_E/./src/components/tx/AdvancedParams/useAdvancedParams.ts","webpack://_N_E/./src/components/tx/AdvancedParams/index.tsx","webpack://_N_E/./src/components/tx/AdvancedParams/useUserNonce.ts","webpack://_N_E/./src/components/tx/SponsoredBy/index.tsx","webpack://_N_E/./src/components/tx/RemainingRelays/index.tsx","webpack://_N_E/./src/components/tx/BalanceInfo/index.tsx","webpack://_N_E/./src/components/tx/ExecutionMethodSelector/index.tsx","webpack://_N_E/./node_modules/@mui/system/esm/Stack/Stack.js","webpack://_N_E/./src/components/tx/SignOrExecuteForm/ProposerForm.tsx","webpack://_N_E/./src/features/counterfactual/hooks/useDeployGasLimit.ts","webpack://_N_E/./src/components/tx/SignOrExecuteForm/NonOwnerError.tsx","webpack://_N_E/./src/features/counterfactual/CounterfactualForm.tsx","webpack://_N_E/./src/components/tx/ExecuteCheckbox/index.tsx","webpack://_N_E/./src/hooks/useWalletCanRelay.ts","webpack://_N_E/./src/hooks/useGasLimit.ts","webpack://_N_E/./src/hooks/useValidateTxData.ts","webpack://_N_E/./src/components/tx/SignOrExecuteForm/ExecuteForm.tsx","webpack://_N_E/./src/components/tx/SignOrExecuteForm/BatchButton.tsx","webpack://_N_E/./src/components/tx/SignOrExecuteForm/SignForm.tsx","webpack://_N_E/./src/components/tx/SignOrExecuteForm/UnknownContractError.tsx","webpack://_N_E/../../node_modules/zodiac-roles-deployments/build/esm/chains.js","webpack://_N_E/../../node_modules/zodiac-roles-deployments/build/esm/types.js","webpack://_N_E/../../node_modules/zodiac-roles-deployments/build/esm/fetchRolesMod.js","webpack://_N_E/../../node_modules/zodiac-roles-deployments/build/esm/fetchRole.js","webpack://_N_E/../../node_modules/zodiac-roles-deployments/build/esm/index.js","webpack://_N_E/./src/components/tx/SignOrExecuteForm/ExecuteThroughRoleForm/hooks.ts","webpack://_N_E/../../node_modules/ethers/lib.esm/abi/bytes32.js","webpack://_N_E/./src/components/tx/SignOrExecuteForm/ExecuteThroughRoleForm/index.tsx","webpack://_N_E/./src/components/tx/confirmation-views/SettingsChange/index.tsx","webpack://_N_E/./src/components/tx/confirmation-views/utils.ts","webpack://_N_E/./src/components/tx/confirmation-views/ChangeThreshold/index.tsx","webpack://_N_E/./src/components/tx/confirmation-views/BatchTransactions/index.tsx","webpack://_N_E/./src/features/swap/components/SwapTokens/index.tsx","webpack://_N_E/./src/features/swap/components/SwapOrderConfirmationView/OrderFeeConfirmationView.tsx","webpack://_N_E/./src/features/swap/components/TwapFallbackHandlerWarning/index.tsx","webpack://_N_E/./src/features/swap/components/SwapOrderConfirmationView/index.tsx","webpack://_N_E/./src/components/tx/confirmation-views/SwapOrder/index.tsx","webpack://_N_E/./src/features/stake/components/StakingConfirmationTx/Exit.tsx","webpack://_N_E/./src/features/stake/components/StakingConfirmationTx/index.tsx","webpack://_N_E/./src/components/tx/confirmation-views/StakingTx/index.tsx","webpack://_N_E/./src/components/tx/confirmation-views/UpdateSafe/index.tsx","webpack://_N_E/./src/components/tx/confirmation-views/index.tsx","webpack://_N_E/./public/images/transactions/signature.svg","webpack://_N_E/./src/components/tx/SignOrExecuteForm/SignerForm/index.tsx","webpack://_N_E/./src/components/tx/SignOrExecuteForm/tracking.ts","webpack://_N_E/./src/components/tx/SignOrExecuteForm/SignOrExecuteForm.tsx","webpack://_N_E/./src/components/tx/SignOrExecuteForm/SignOrExecuteSkeleton.tsx","webpack://_N_E/./src/components/tx/SignOrExecuteForm/index.tsx","webpack://_N_E/./src/features/multichain/components/SignerSetupWarning/ChangeSignerSetupWarning.tsx","webpack://_N_E/./src/features/multichain/hooks/useIsMultichainSafe.ts","webpack://_N_E/./src/hooks/useRemainingRelays.ts","webpack://_N_E/./src/hooks/useTxDetails.ts","webpack://_N_E/./src/hooks/useWalletCanPay.ts","webpack://_N_E/./src/hooks/wallets/useWalletBalance.ts","webpack://_N_E/./src/utils/relaying.ts","webpack://_N_E/./src/components/new-safe/create/steps/StatusStep/LoadingSpinner/styles.module.css","webpack://_N_E/./src/components/tx/BalanceInfo/styles.module.css","webpack://_N_E/./src/components/tx/ExecuteCheckbox/styles.module.css","webpack://_N_E/./src/components/tx/ExecutionMethodSelector/styles.module.css","webpack://_N_E/./src/components/tx/SignOrExecuteForm/SignerForm/styles.module.css","webpack://_N_E/./src/components/tx/SponsoredBy/styles.module.css","webpack://_N_E/./src/features/swap/components/SwapOrderConfirmationView/styles.module.css","webpack://_N_E/./public/images/common/minus.svg"],"sourcesContent":["export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import { Box } from '@mui/material'\nimport css from '@/components/new-safe/create/steps/StatusStep/LoadingSpinner/styles.module.css'\nimport classnames from 'classnames'\nimport { useCallback, useEffect, useRef } from 'react'\n\nconst rectTlEndTransform = 'translateX(0) translateY(20px) scaleY(1.1)'\nconst rectTrEndTransform = 'translateX(30px) scaleX(2.3)'\nconst rectBlEndTransform = 'translateX(30px) translateY(60px) scaleX(2.3)'\nconst rectBrEndTransform = 'translateY(40px) translateX(60px) scaleY(1.1)'\n\nconst moveToEnd = (transformEnd: string, element: HTMLDivElement | null) => {\n  if (element) {\n    element.getAnimations().forEach((animation) => {\n      if ((animation as CSSAnimation).animationName) {\n        animation.pause()\n      }\n    })\n    const transformStart = window.getComputedStyle(element).transform\n    element.getAnimations().forEach((animation) => {\n      if ((animation as CSSAnimation).animationName) {\n        animation.cancel()\n      }\n    })\n    element.animate([{ transform: transformStart }, { transform: transformEnd }], {\n      duration: 1000,\n      easing: 'ease-out',\n      fill: 'forwards',\n    })\n  }\n}\n\nexport enum SpinnerStatus {\n  ERROR = 'isError',\n  SUCCESS = 'isSuccess',\n  PROCESSING = 'isProcessing',\n}\n\nconst LoadingSpinner = ({ status }: { status: SpinnerStatus }) => {\n  // TODO: only monitoring the PendingTxs we can't determine the transaction's result\n  const isError = status === SpinnerStatus.ERROR\n  const isSuccess = status === SpinnerStatus.SUCCESS\n\n  const rectTl = useRef<HTMLDivElement>(null)\n  const rectTr = useRef<HTMLDivElement>(null)\n  const rectBl = useRef<HTMLDivElement>(null)\n  const rectBr = useRef<HTMLDivElement>(null)\n  const rectCenter = useRef<HTMLDivElement>(null)\n\n  const onFinish = useCallback(() => {\n    moveToEnd(rectTlEndTransform, rectTl.current)\n    moveToEnd(rectTrEndTransform, rectTr.current)\n    moveToEnd(rectBlEndTransform, rectBl.current)\n    moveToEnd(rectBrEndTransform, rectBr.current)\n  }, [rectBl, rectBr, rectTl, rectTr])\n\n  useEffect(() => {\n    if (isSuccess) {\n      onFinish()\n    }\n  }, [isSuccess, onFinish])\n\n  return (\n    <Box className={classnames(css.box, { [css.rectError]: isError }, { [css.rectSuccess]: isSuccess })}>\n      <div className={classnames(css.rect, css.rectTl)} ref={rectTl} />\n      <div className={classnames(css.rect, css.rectTr)} ref={rectTr} />\n      <div className={classnames(css.rect, css.rectBl)} ref={rectBl} />\n      <div className={classnames(css.rect, css.rectBr)} ref={rectBr} />\n      <div className={classnames(css.rect, css.rectCenter)} ref={rectCenter} />\n\n      <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n        <defs>\n          <filter id=\"gooey\">\n            <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"3\" result=\"blur\" />\n            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9\" result=\"goo\" />\n            <feComposite in=\"SourceGraphic\" in2=\"goo\" operator=\"atop\" />\n          </filter>\n        </defs>\n      </svg>\n    </Box>\n  )\n}\n\nexport default LoadingSpinner\n","import { type Context, createContext } from 'react'\nimport { type AddOwnerFlowProps } from '.'\nimport { type ReplaceOwnerFlowProps } from '../ReplaceOwner'\n\ntype SettingsChange = Context<AddOwnerFlowProps | ReplaceOwnerFlowProps>\n\nexport const SettingsChangeContext: SettingsChange = createContext({} as AddOwnerFlowProps | ReplaceOwnerFlowProps)\n","import { createContext } from 'react'\n\nexport const ChangeThresholdReviewContext = createContext<{ newThreshold?: number }>({})\n","// import type {BigNumberish, BigNumber}    from 'ethers'\n// import { type BigNumber } from '@ethersproject/bignumber'\n\nexport enum AdvancedField {\n  nonce = 'nonce',\n  userNonce = 'userNonce',\n  gasLimit = 'gasLimit',\n  maxFeePerGas = 'maxFeePerGas',\n  maxPriorityFeePerGas = 'maxPriorityFeePerGas',\n  safeTxGas = 'safeTxGas',\n}\n\nexport type AdvancedParameters = Partial<{\n  [AdvancedField.nonce]: number\n  [AdvancedField.userNonce]: number\n  [AdvancedField.gasLimit]: bigint | null\n  [AdvancedField.maxFeePerGas]: bigint | null\n  [AdvancedField.maxPriorityFeePerGas]: bigint | null\n  [AdvancedField.safeTxGas]: number\n}>\n","import useSafeInfo from '@/hooks/useSafeInfo'\nimport { FormControl, IconButton, Tooltip } from '@mui/material'\nimport RotateLeftIcon from '@mui/icons-material/RotateLeft'\nimport { useFormContext } from 'react-hook-form'\nimport { BASE_TX_GAS } from '@/config/constants'\nimport { AdvancedField } from './types'\nimport NumberField from '@/components/common/NumberField'\n\nconst GasLimitInput = ({ recommendedGasLimit }: { recommendedGasLimit?: string }) => {\n  const { safe } = useSafeInfo()\n\n  const {\n    register,\n    watch,\n    setValue,\n    trigger,\n    formState: { errors },\n  } = useFormContext()\n\n  const currentGasLimit = watch(AdvancedField.gasLimit)\n\n  const onResetGasLimit = () => {\n    setValue(AdvancedField.gasLimit, recommendedGasLimit)\n    trigger(AdvancedField.gasLimit)\n  }\n\n  const error = errors.gasLimit as\n    | {\n        message: string\n        type: string\n      }\n    | undefined\n\n  const errorMessage = error ? (error.type === 'min' ? 'Gas limit must be at least 21000' : error.message) : undefined\n\n  return (\n    <FormControl fullWidth>\n      <NumberField\n        label={errorMessage || 'Gas limit'}\n        error={!!errorMessage}\n        InputProps={{\n          endAdornment: recommendedGasLimit && recommendedGasLimit !== currentGasLimit.toString() && (\n            <Tooltip title=\"Reset to recommended gas limit\">\n              <IconButton onClick={onResetGasLimit} size=\"small\" color=\"primary\">\n                <RotateLeftIcon />\n              </IconButton>\n            </Tooltip>\n          ),\n        }}\n        // @see https://github.com/react-hook-form/react-hook-form/issues/220\n        InputLabelProps={{\n          shrink: currentGasLimit !== undefined,\n        }}\n        disabled={!safe.deployed}\n        required\n        {...register(AdvancedField.gasLimit, { required: true, min: BASE_TX_GAS })}\n      />\n    </FormControl>\n  )\n}\n\nexport default GasLimitInput\n","import { type SyntheticEvent } from 'react'\nimport { Button, DialogActions, FormControl, Grid, Typography, DialogContent } from '@mui/material'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport { safeFormatUnits, safeParseUnits } from '@/utils/formatters'\nimport { FLOAT_REGEX } from '@/utils/validation'\nimport ModalDialog from '@/components/common/ModalDialog'\nimport { AdvancedField, type AdvancedParameters } from './types'\nimport GasLimitInput from './GasLimitInput'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport NumberField from '@/components/common/NumberField'\nimport { HelpCenterArticle } from '@/config/constants'\n\ntype AdvancedParamsFormProps = {\n  params: AdvancedParameters\n  onSubmit: (params: AdvancedParameters) => void\n  recommendedGasLimit?: AdvancedParameters['gasLimit']\n  isExecution: boolean\n  isEIP1559?: boolean\n  willRelay?: boolean\n}\n\ntype FormData = {\n  [AdvancedField.userNonce]: number\n  [AdvancedField.gasLimit]?: string\n  [AdvancedField.maxFeePerGas]: string\n  [AdvancedField.maxPriorityFeePerGas]: string\n}\n\nconst AdvancedParamsForm = ({ params, ...props }: AdvancedParamsFormProps) => {\n  const formMethods = useForm<FormData>({\n    mode: 'onChange',\n    defaultValues: {\n      userNonce: params.userNonce ?? 0,\n      gasLimit: params.gasLimit?.toString() || undefined,\n      maxFeePerGas: params.maxFeePerGas ? safeFormatUnits(params.maxFeePerGas) : '',\n      maxPriorityFeePerGas: params.maxPriorityFeePerGas ? safeFormatUnits(params.maxPriorityFeePerGas) : '',\n    },\n  })\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = formMethods\n\n  const onBack = () => {\n    props.onSubmit({\n      userNonce: params.userNonce,\n      gasLimit: params.gasLimit,\n      maxFeePerGas: params.maxFeePerGas,\n      maxPriorityFeePerGas: params.maxPriorityFeePerGas,\n    })\n  }\n\n  const onSubmit = (data: FormData) => {\n    props.onSubmit({\n      userNonce: data.userNonce,\n      gasLimit: data.gasLimit ? BigInt(data.gasLimit) : undefined,\n      maxFeePerGas: safeParseUnits(data.maxFeePerGas) ?? params.maxFeePerGas,\n      maxPriorityFeePerGas: safeParseUnits(data.maxPriorityFeePerGas) ?? params.maxPriorityFeePerGas,\n    })\n  }\n\n  const onFormSubmit = (e: SyntheticEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    handleSubmit(onSubmit)()\n  }\n\n  return (\n    <ModalDialog open dialogTitle=\"Advanced parameters\" hideChainIndicator>\n      <FormProvider {...formMethods}>\n        <form onSubmit={onFormSubmit}>\n          <DialogContent>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\" fontWeight={700}>\n                  Execution parameters\n                </Typography>\n              </Grid>\n\n              {/* User nonce */}\n              <Grid item xs={6}>\n                <FormControl fullWidth>\n                  <NumberField\n                    disabled={props.willRelay}\n                    label={errors.userNonce?.message || 'Wallet nonce'}\n                    error={!!errors.userNonce}\n                    {...register(AdvancedField.userNonce)}\n                  />\n                </FormControl>\n              </Grid>\n\n              {/* Gas limit */}\n              <Grid item xs={6}>\n                <GasLimitInput recommendedGasLimit={props.recommendedGasLimit?.toString()} />\n              </Grid>\n\n              {/* Gas price */}\n              {props.isEIP1559 && (\n                <Grid item xs={6}>\n                  <FormControl fullWidth>\n                    <NumberField\n                      disabled={props.willRelay}\n                      label={errors.maxPriorityFeePerGas?.message || 'Max priority fee (Gwei)'}\n                      error={!!errors.maxPriorityFeePerGas}\n                      required\n                      {...register(AdvancedField.maxPriorityFeePerGas, {\n                        required: true,\n                        pattern: FLOAT_REGEX,\n                        min: 0,\n                      })}\n                    />\n                  </FormControl>\n                </Grid>\n              )}\n\n              <Grid item xs={6}>\n                <FormControl fullWidth>\n                  <NumberField\n                    disabled={props.willRelay}\n                    label={errors.maxFeePerGas?.message || props.isEIP1559 ? 'Max fee (Gwei)' : 'Gas price (Gwei)'}\n                    error={!!errors.maxFeePerGas}\n                    required\n                    {...register(AdvancedField.maxFeePerGas, { required: true, pattern: FLOAT_REGEX, min: 0 })}\n                  />\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            {/* Help link */}\n            <Typography mt={2}>\n              <ExternalLink href={HelpCenterArticle.ADVANCED_PARAMS}>\n                How can I configure these parameters manually?\n              </ExternalLink>\n            </Typography>\n          </DialogContent>\n\n          {/* Buttons */}\n          <DialogActions>\n            <Button color=\"inherit\" onClick={onBack}>\n              Back\n            </Button>\n\n            <Button variant=\"contained\" type=\"submit\">\n              Confirm\n            </Button>\n          </DialogActions>\n        </form>\n      </FormProvider>\n    </ModalDialog>\n  )\n}\n\nexport default AdvancedParamsForm\n","import { useMemo, useState } from 'react'\nimport useGasPrice from '@/hooks/useGasPrice'\nimport { type AdvancedParameters } from './types'\nimport useUserNonce from './useUserNonce'\n\nexport const useAdvancedParams = (\n  gasLimit?: AdvancedParameters['gasLimit'],\n): [AdvancedParameters, (params: AdvancedParameters) => void] => {\n  const [manualParams, setManualParams] = useState<AdvancedParameters>()\n  const [gasPrice] = useGasPrice()\n  const userNonce = useUserNonce()\n\n  const advancedParams: AdvancedParameters = useMemo(\n    () => ({\n      userNonce: manualParams?.userNonce ?? userNonce,\n      gasLimit: manualParams?.gasLimit ?? gasLimit,\n      maxFeePerGas: manualParams?.maxFeePerGas ?? gasPrice?.maxFeePerGas,\n      maxPriorityFeePerGas: manualParams?.maxPriorityFeePerGas ?? gasPrice?.maxPriorityFeePerGas,\n    }),\n    [manualParams, userNonce, gasLimit, gasPrice?.maxFeePerGas, gasPrice?.maxPriorityFeePerGas],\n  )\n\n  return [advancedParams, setManualParams]\n}\n","import GasParams from '@/components/tx/GasParams'\nimport { useHasFeature } from '@/hooks/useChains'\nimport { MODALS_EVENTS, trackEvent } from '@/services/analytics'\nimport { FEATURES } from '@/utils/chains'\nimport { useState } from 'react'\nimport AdvancedParamsForm from './AdvancedParamsForm'\nimport { type AdvancedParameters } from './types'\n\ntype Props = {\n  params: AdvancedParameters\n  recommendedGasLimit?: AdvancedParameters['gasLimit']\n  willExecute: boolean\n  onFormSubmit: (data: AdvancedParameters) => void\n  gasLimitError?: Error\n  willRelay?: boolean\n}\n\nconst AdvancedParams = ({\n  params,\n  recommendedGasLimit,\n  willExecute,\n  onFormSubmit,\n  gasLimitError,\n  willRelay,\n}: Props) => {\n  const [isEditing, setIsEditing] = useState<boolean>(false)\n  const isEIP1559 = useHasFeature(FEATURES.EIP1559)\n\n  const onEditOpen = () => {\n    setIsEditing(true)\n    trackEvent(MODALS_EVENTS.EDIT_ADVANCED_PARAMS)\n  }\n\n  const onAdvancedSubmit = (data: AdvancedParameters) => {\n    onFormSubmit(data)\n    setIsEditing(false)\n  }\n\n  return isEditing ? (\n    <AdvancedParamsForm\n      params={params}\n      isExecution={willExecute}\n      recommendedGasLimit={recommendedGasLimit}\n      onSubmit={onAdvancedSubmit}\n      isEIP1559={isEIP1559}\n      willRelay={willRelay}\n    />\n  ) : (\n    <GasParams\n      params={params}\n      isExecution={willExecute}\n      isEIP1559={isEIP1559}\n      gasLimitError={gasLimitError}\n      onEdit={onEditOpen}\n      willRelay={willRelay}\n    />\n  )\n}\n\nexport default AdvancedParams\n\nexport * from './useAdvancedParams'\n\nexport * from './types'\n","import useAsync from '@/hooks/useAsync'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { getUserNonce } from '@/hooks/wallets/web3'\n\nconst useUserNonce = (): number | undefined => {\n  const wallet = useWallet()\n\n  const [userNonce] = useAsync<number>(() => {\n    if (!wallet) return\n    return getUserNonce(wallet.address)\n  }, [wallet])\n\n  return userNonce\n}\n\nexport default useUserNonce\n","import chains from '@/config/chains'\nimport css from './styles.module.css'\n\nexport const RELAY_SPONSORS = {\n  [chains.gno]: {\n    name: 'Gnosis',\n    logo: '/images/common/gnosis-chain-logo.png',\n  },\n  default: {\n    name: 'Safe',\n    logo: '/images/logo-no-text.svg',\n  },\n}\n\nconst SponsoredBy = ({ chainId }: { chainId: string }) => {\n  const sponsor = RELAY_SPONSORS[chainId] || RELAY_SPONSORS.default\n\n  return (\n    <>\n      <img src={sponsor.logo} alt={sponsor.name} className={css.logo} /> {sponsor.name}\n    </>\n  )\n}\n\nexport default SponsoredBy\n","import { SvgIcon, Tooltip, Typography } from '@mui/material'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport { MAX_DAY_RELAYS } from '@/hooks/useRemainingRelays'\nimport css from '../BalanceInfo/styles.module.css'\nimport type { RelayCountResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport { maybePlural } from '@/utils/formatters'\n\nconst RemainingRelays = ({ relays, tooltip }: { relays?: RelayCountResponse; tooltip?: string }) => {\n  if (!tooltip) {\n    const limit = relays?.limit ?? MAX_DAY_RELAYS\n    tooltip = `${limit} transaction${maybePlural(limit)} per day for free`\n  }\n\n  return (\n    <div className={css.container}>\n      <Typography variant=\"body2\" color=\"primary.light\" display=\"flex\" alignItems=\"center\" gap={0.5}>\n        <b>{relays?.remaining ?? MAX_DAY_RELAYS}</b> free transactions left today\n        <Tooltip title={tooltip} placement=\"top\" arrow>\n          <span style={{ lineHeight: 0 }}>\n            <SvgIcon component={InfoIcon} inheritViewBox color=\"info\" fontSize=\"small\" sx={{ color: '#B2B5B2' }} />\n          </span>\n        </Tooltip>\n      </Typography>\n    </div>\n  )\n}\n\nexport default RemainingRelays\n","import { Typography } from '@mui/material'\nimport css from './styles.module.css'\nimport useWalletBalance from '@/hooks/wallets/useWalletBalance'\nimport WalletBalance from '@/components/common/WalletBalance'\n\n// TODO: Remove this component if not being used\nconst BalanceInfo = () => {\n  const [balance] = useWalletBalance()\n\n  return (\n    <div className={css.container}>\n      <Typography variant=\"body2\" color=\"primary.light\">\n        <b>Wallet balance:</b> <WalletBalance balance={balance} />\n      </Typography>\n    </div>\n  )\n}\n\nexport default BalanceInfo\n","import { Box, FormControl, FormControlLabel, Radio, RadioGroup, Typography } from '@mui/material'\nimport type { Dispatch, SetStateAction, ReactElement, ChangeEvent } from 'react'\n\nimport useWallet from '@/hooks/wallets/useWallet'\nimport WalletIcon from '@/components/common/WalletIcon'\nimport SponsoredBy from '../SponsoredBy'\nimport RemainingRelays from '../RemainingRelays'\n\nimport css from './styles.module.css'\nimport BalanceInfo from '@/components/tx/BalanceInfo'\nimport madProps from '@/utils/mad-props'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport type { ChainInfo, RelayCountResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { ConnectedWallet } from '@/hooks/wallets/useOnboard'\n\nexport const enum ExecutionMethod {\n  RELAY = 'RELAY',\n  WALLET = 'WALLET',\n}\n\nconst _ExecutionMethodSelector = ({\n  wallet,\n  chain,\n  executionMethod,\n  setExecutionMethod,\n  relays,\n  noLabel,\n  tooltip,\n}: {\n  wallet: ConnectedWallet | null\n  chain?: ChainInfo\n  executionMethod: ExecutionMethod\n  setExecutionMethod: Dispatch<SetStateAction<ExecutionMethod>>\n  relays?: RelayCountResponse\n  noLabel?: boolean\n  tooltip?: string\n}): ReactElement | null => {\n  const shouldRelay = executionMethod === ExecutionMethod.RELAY\n\n  const onChooseExecutionMethod = (_: ChangeEvent<HTMLInputElement>, newExecutionMethod: string) => {\n    setExecutionMethod(newExecutionMethod as ExecutionMethod)\n  }\n\n  return (\n    <Box className={css.container} sx={{ borderRadius: ({ shape }) => `${shape.borderRadius}px` }}>\n      <div className={css.method}>\n        <FormControl sx={{ display: 'flex' }}>\n          {!noLabel ? (\n            <Typography variant=\"body2\" className={css.label}>\n              Who will pay gas fees:\n            </Typography>\n          ) : null}\n\n          <RadioGroup row value={executionMethod} onChange={onChooseExecutionMethod}>\n            <FormControlLabel\n              data-testid=\"relay-execution-method\"\n              sx={{ flex: 1 }}\n              value={ExecutionMethod.RELAY}\n              label={\n                <Typography className={css.radioLabel} whiteSpace=\"nowrap\">\n                  Sponsored by\n                  <SponsoredBy chainId={chain?.chainId ?? ''} />\n                </Typography>\n              }\n              control={<Radio />}\n            />\n\n            <FormControlLabel\n              data-testid=\"connected-wallet-execution-method\"\n              sx={{ flex: 1 }}\n              value={ExecutionMethod.WALLET}\n              label={\n                <Typography className={css.radioLabel}>\n                  <WalletIcon provider={wallet?.label || ''} width={20} height={20} icon={wallet?.icon} /> Connected\n                  wallet\n                </Typography>\n              }\n              control={<Radio />}\n            />\n          </RadioGroup>\n        </FormControl>\n      </div>\n\n      {shouldRelay && relays ? <RemainingRelays relays={relays} tooltip={tooltip} /> : wallet ? <BalanceInfo /> : null}\n    </Box>\n  )\n}\n\nexport const ExecutionMethodSelector = madProps(_ExecutionMethodSelector, {\n  wallet: useWallet,\n  chain: useCurrentChain,\n})\n","'use client';\n\nimport PropTypes from 'prop-types';\nimport createStack from \"./createStack.js\";\n/**\n *\n * Demos:\n *\n * - [Stack (Joy UI)](https://mui.com/joy-ui/react-stack/)\n * - [Stack (Material UI)](https://mui.com/material-ui/react-stack/)\n * - [Stack (MUI System)](https://mui.com/system/react-stack/)\n *\n * API:\n *\n * - [Stack API](https://mui.com/system/api/stack/)\n */\nconst Stack = createStack();\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the theme's default props configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import WalletRejectionError from '@/components/tx/SignOrExecuteForm/WalletRejectionError'\nimport { isWalletRejection } from '@/utils/wallets'\nimport { type ReactElement, type SyntheticEvent, useContext, useState } from 'react'\nimport { Box, Button, CardActions, CircularProgress, Divider, Typography } from '@mui/material'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport CheckWallet from '@/components/common/CheckWallet'\nimport { TxModalContext } from '@/components/tx-flow'\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport { TxSecurityContext } from '@/components/tx/security/shared/TxSecurityContext'\nimport { useTxActions } from '@/components/tx/SignOrExecuteForm/hooks'\nimport type { SignOrExecuteProps } from '@/components/tx/SignOrExecuteForm/SignOrExecuteForm'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { Errors, trackError } from '@/services/exceptions'\nimport { asError } from '@/services/exceptions/utils'\nimport madProps from '@/utils/mad-props'\nimport Stack from '@mui/system/Stack'\n\nexport const ProposerForm = ({\n  safeTx,\n  origin,\n  disableSubmit = false,\n  txActions,\n  txSecurity,\n  onSubmit,\n}: SignOrExecuteProps & {\n  txActions: ReturnType<typeof useTxActions>\n  txSecurity: ReturnType<typeof useTxSecurityContext>\n  safeTx?: SafeTransaction\n}): ReactElement => {\n  // Form state\n  const [isSubmittable, setIsSubmittable] = useState<boolean>(true)\n  const [isRejectedByUser, setIsRejectedByUser] = useState<Boolean>(false)\n\n  // Hooks\n  const wallet = useWallet()\n  const { signProposerTx } = txActions\n  const { setTxFlow } = useContext(TxModalContext)\n  const { needsRiskConfirmation, isRiskConfirmed, setIsRiskIgnored } = txSecurity\n\n  // On modal submit\n  const handleSubmit = async (e: SyntheticEvent) => {\n    e.preventDefault()\n\n    if (needsRiskConfirmation && !isRiskConfirmed) {\n      setIsRiskIgnored(true)\n      return\n    }\n\n    if (!safeTx || !wallet) return\n\n    setIsSubmittable(false)\n    setIsRejectedByUser(false)\n\n    try {\n      const txId = await signProposerTx(safeTx, origin)\n      onSubmit?.(txId)\n    } catch (_err) {\n      const err = asError(_err)\n      if (isWalletRejection(err)) {\n        setIsRejectedByUser(true)\n      } else {\n        trackError(Errors._805, err)\n      }\n      setIsSubmittable(true)\n      return\n    }\n\n    setTxFlow(undefined)\n  }\n\n  const submitDisabled = !safeTx || !isSubmittable || disableSubmit || (needsRiskConfirmation && !isRiskConfirmed)\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Typography>\n        As a <strong>Proposer</strong>, you&apos;re creating this transaction without any signatures. It will need\n        approval from a signer before it becomes a valid transaction.\n      </Typography>\n\n      {isRejectedByUser && (\n        <Box mt={1}>\n          <WalletRejectionError />\n        </Box>\n      )}\n\n      <Divider className={commonCss.nestedDivider} sx={{ pt: 3 }} />\n\n      <CardActions>\n        <Stack\n          sx={{\n            width: ['100%', '100%', '100%', 'auto'],\n          }}\n          direction={{ xs: 'column-reverse', lg: 'row' }}\n          spacing={{ xs: 2, md: 2 }}\n        >\n          {/* Submit button */}\n          <CheckWallet checkNetwork>\n            {(isOk) => (\n              <Button\n                data-testid=\"sign-btn\"\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={!isOk || submitDisabled}\n                sx={{ minWidth: '82px', order: '1', width: ['100%', '100%', '100%', 'auto'] }}\n              >\n                {!isSubmittable ? <CircularProgress size={20} /> : 'Propose transaction'}\n              </Button>\n            )}\n          </CheckWallet>\n        </Stack>\n      </CardActions>\n    </form>\n  )\n}\n\nconst useTxSecurityContext = () => useContext(TxSecurityContext)\n\nexport default madProps(ProposerForm, {\n  txActions: useTxActions,\n  txSecurity: useTxSecurityContext,\n})\n","import useAsync from '@/hooks/useAsync'\nimport useChainId from '@/hooks/useChainId'\nimport useOnboard from '@/hooks/wallets/useOnboard'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { getSafeSDKWithSigner } from '@/services/tx/tx-sender/sdk'\nimport { estimateSafeDeploymentGas, estimateTxBaseGas } from '@safe-global/protocol-kit'\nimport type Safe from '@safe-global/protocol-kit'\n\nimport { OperationType, type SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport {\n  getCompatibilityFallbackHandlerContract,\n  getSimulateTxAccessorContract,\n} from '@safe-global/protocol-kit/dist/src/contracts/safeDeploymentContracts'\n\nimport { ZERO_ADDRESS } from '@safe-global/protocol-kit/dist/src/utils/constants'\n\ntype DeployGasLimitProps = {\n  safeTxGas: bigint\n  safeDeploymentGas: string\n  totalGas: bigint\n}\n\nconst useDeployGasLimit = (safeTx?: SafeTransaction) => {\n  const onboard = useOnboard()\n  const wallet = useWallet()\n  const chainId = useChainId()\n\n  const [gasLimit, gasLimitError, gasLimitLoading] = useAsync<DeployGasLimitProps | undefined>(async () => {\n    if (!wallet || !onboard) return\n\n    const sdk = await getSafeSDKWithSigner(wallet.provider)\n\n    const [baseGas, batchTxGas, safeDeploymentGas] = await Promise.all([\n      safeTx ? estimateTxBaseGas(sdk, safeTx) : '0',\n      safeTx ? estimateBatchDeploymentTransaction(safeTx, sdk, chainId) : '0',\n      estimateSafeDeploymentGas(sdk),\n    ])\n\n    const totalGas = safeTx ? BigInt(baseGas) + BigInt(batchTxGas) : BigInt(safeDeploymentGas)\n    const safeTxGas = totalGas - BigInt(safeDeploymentGas)\n\n    return { safeTxGas, safeDeploymentGas, totalGas }\n  }, [onboard, wallet, chainId, safeTx])\n\n  return { gasLimit, gasLimitError, gasLimitLoading }\n}\n\n/**\n * Estimates batch transaction containing the safe deployment and the first transaction.\n *\n * This estimation is done by calling `eth_estimateGas` with a MultiSendCallOnly batch transaction that\n *   1. Calls the SafeProxyFactory to deploy the SafeProxy\n *   2. Call the `simulate` function on the now deployed SafeProxy with the first transaction data.\n * Then we substract a flat gas amount for the overhead of simulating the transaction.\n *\n * Note: To have a more accurate estimation the base gas of a Safe Transaction has to be added to the result\n * @param safeTransaction - first SafeTransaction that should be batched with the deployment\n * @param sdk - predicted Safe instance\n * @param chainId - chainId of the Safe\n * @returns the gas estimation for the batch (as `bigint`)\n */\nexport const estimateBatchDeploymentTransaction = async (\n  safeTransaction: SafeTransaction,\n  sdk: Safe,\n  chainId: string,\n) => {\n  const customContracts = sdk.getContractManager().contractNetworks?.[chainId]\n  const safeVersion = await sdk.getContractVersion()\n  const safeProvider = sdk.getSafeProvider()\n  const fallbackHandlerContract = await getCompatibilityFallbackHandlerContract({\n    safeProvider,\n    safeVersion,\n    customContracts,\n  })\n\n  const simulateTxAccessorContract = await getSimulateTxAccessorContract({\n    safeProvider,\n    safeVersion,\n    customContracts,\n  })\n\n  // 1. Get Deploy tx\n  const safeDeploymentTransaction = await sdk.createSafeDeploymentTransaction()\n  const safeDeploymentBatchTransaction = {\n    to: safeDeploymentTransaction.to,\n    value: safeDeploymentTransaction.value,\n    data: safeDeploymentTransaction.data,\n    operation: OperationType.Call,\n  }\n\n  // 2. Add a simulate call to the predicted SafeProxy as second transaction\n  const transactionDataToEstimate: string = simulateTxAccessorContract.encode('simulate', [\n    safeTransaction.data.to,\n    BigInt(safeTransaction.data.value),\n    safeTransaction.data.data,\n    safeTransaction.data.operation,\n  ])\n\n  const safeFunctionToEstimate: string = fallbackHandlerContract.encode('simulate', [\n    await simulateTxAccessorContract.getAddress(),\n    transactionDataToEstimate,\n  ])\n\n  const simulateBatchTransaction = {\n    to: await sdk.getAddress(),\n    value: '0',\n    data: safeFunctionToEstimate,\n    operation: OperationType.Call,\n  }\n\n  const safeDeploymentBatch = await sdk.createTransactionBatch([\n    safeDeploymentBatchTransaction,\n    simulateBatchTransaction,\n  ])\n\n  const signerAddress = await safeProvider.getSignerAddress()\n\n  // estimate the entire batch\n  const safeTxGas = await safeProvider.estimateGas({\n    ...safeDeploymentBatch,\n    from: signerAddress || ZERO_ADDRESS, // This address should not really matter\n  })\n\n  // Substract ~20k gas for the simulation overhead\n  return BigInt(safeTxGas) - 20_000n\n}\n\nexport default useDeployGasLimit\n","import ErrorMessage from '@/components/tx/ErrorMessage'\n\nconst NonOwnerError = () => {\n  return (\n    <ErrorMessage>\n      You are currently not a signer of this Safe Account and won&apos;t be able to submit this transaction.\n    </ErrorMessage>\n  )\n}\n\nexport default NonOwnerError\n","import { TxModalContext } from '@/components/tx-flow'\nimport useDeployGasLimit from '@/features/counterfactual/hooks/useDeployGasLimit'\nimport { deploySafeAndExecuteTx } from '@/features/counterfactual/utils'\nimport { getTotalFeeFormatted } from '@/hooks/useGasPrice'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport useWalletCanPay from '@/hooks/useWalletCanPay'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { OVERVIEW_EVENTS, trackEvent, WALLET_EVENTS } from '@/services/analytics'\nimport { TX_EVENTS, TX_TYPES } from '@/services/analytics/events/transactions'\nimport madProps from '@/utils/mad-props'\nimport React, { type ReactElement, type SyntheticEvent, useContext, useState } from 'react'\nimport { CircularProgress, Box, Button, CardActions, Divider, Alert } from '@mui/material'\nimport classNames from 'classnames'\n\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport { trackError, Errors } from '@/services/exceptions'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { getTxOptions } from '@/utils/transactions'\nimport CheckWallet from '@/components/common/CheckWallet'\nimport { useIsExecutionLoop } from '@/components/tx/SignOrExecuteForm/hooks'\nimport type { SignOrExecuteProps } from '@/components/tx/SignOrExecuteForm/SignOrExecuteForm'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport AdvancedParams, { useAdvancedParams } from '@/components/tx/AdvancedParams'\nimport { asError } from '@/services/exceptions/utils'\n\nimport css from '@/components/tx/SignOrExecuteForm/styles.module.css'\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport { TxSecurityContext } from '@/components/tx/security/shared/TxSecurityContext'\nimport useIsSafeOwner from '@/hooks/useIsSafeOwner'\nimport NonOwnerError from '@/components/tx/SignOrExecuteForm/NonOwnerError'\n\nexport const CounterfactualForm = ({\n  safeTx,\n  disableSubmit = false,\n  onlyExecute,\n  isCreation,\n  isOwner,\n  isExecutionLoop,\n  txSecurity,\n  onSubmit,\n}: SignOrExecuteProps & {\n  isOwner: ReturnType<typeof useIsSafeOwner>\n  isExecutionLoop: ReturnType<typeof useIsExecutionLoop>\n  txSecurity: ReturnType<typeof useTxSecurityContext>\n  safeTx?: SafeTransaction\n  isCreation?: boolean\n}): ReactElement => {\n  const wallet = useWallet()\n  const chain = useCurrentChain()\n  const { safeAddress } = useSafeInfo()\n\n  // Form state\n  const [isSubmittable, setIsSubmittable] = useState<boolean>(true)\n  const [submitError, setSubmitError] = useState<Error | undefined>()\n\n  // Hooks\n  const currentChain = useCurrentChain()\n  const { needsRiskConfirmation, isRiskConfirmed, setIsRiskIgnored } = txSecurity\n  const { setTxFlow } = useContext(TxModalContext)\n\n  // Estimate gas limit\n  const { gasLimit, gasLimitError } = useDeployGasLimit(safeTx)\n  const [advancedParams, setAdvancedParams] = useAdvancedParams(gasLimit?.totalGas)\n\n  // On modal submit\n  const handleSubmit = async (e: SyntheticEvent) => {\n    e.preventDefault()\n    onSubmit?.(Math.random().toString())\n\n    if (needsRiskConfirmation && !isRiskConfirmed) {\n      setIsRiskIgnored(true)\n      return\n    }\n\n    setIsSubmittable(false)\n    setSubmitError(undefined)\n\n    const txOptions = getTxOptions(advancedParams, currentChain)\n\n    try {\n      trackEvent({ ...OVERVIEW_EVENTS.PROCEED_WITH_TX, label: TX_TYPES.activate_with_tx })\n\n      await deploySafeAndExecuteTx(txOptions, wallet, safeAddress, safeTx, wallet?.provider)\n\n      trackEvent({ ...TX_EVENTS.CREATE, label: TX_TYPES.activate_with_tx })\n      trackEvent({ ...TX_EVENTS.EXECUTE, label: TX_TYPES.activate_with_tx })\n      trackEvent(WALLET_EVENTS.ONCHAIN_INTERACTION)\n    } catch (_err) {\n      const err = asError(_err)\n      trackError(Errors._804, err)\n      setIsSubmittable(true)\n      setSubmitError(err)\n      return\n    }\n\n    setTxFlow(undefined)\n  }\n\n  const walletCanPay = useWalletCanPay({\n    gasLimit: gasLimit?.totalGas,\n    maxFeePerGas: advancedParams.maxFeePerGas,\n  })\n\n  const cannotPropose = !isOwner && !onlyExecute\n  const submitDisabled =\n    !safeTx ||\n    !isSubmittable ||\n    disableSubmit ||\n    isExecutionLoop ||\n    cannotPropose ||\n    (needsRiskConfirmation && !isRiskConfirmed)\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Alert severity=\"info\" sx={{ mb: 2, border: 0 }}>\n          Executing this transaction will activate your account.\n          <br />\n          <ul style={{ margin: 0, padding: '4px 16px 0' }}>\n            <li>\n              Base fee: &asymp;{' '}\n              <strong>\n                {getTotalFeeFormatted(advancedParams.maxFeePerGas, BigInt(gasLimit?.safeTxGas || '0'), chain)}{' '}\n                {chain?.nativeCurrency.symbol}\n              </strong>\n            </li>\n            <li>\n              One-time activation fee: &asymp;{' '}\n              <strong>\n                {getTotalFeeFormatted(advancedParams.maxFeePerGas, BigInt(gasLimit?.safeDeploymentGas || '0'), chain)}{' '}\n                {chain?.nativeCurrency.symbol}\n              </strong>\n            </li>\n          </ul>\n        </Alert>\n\n        <div className={classNames(css.params)}>\n          <AdvancedParams\n            willExecute\n            params={advancedParams}\n            recommendedGasLimit={gasLimit?.totalGas}\n            onFormSubmit={setAdvancedParams}\n            gasLimitError={gasLimitError}\n            willRelay={false}\n          />\n        </div>\n\n        {/* Error messages */}\n        {cannotPropose ? (\n          <NonOwnerError />\n        ) : isExecutionLoop ? (\n          <ErrorMessage>\n            Cannot execute a transaction from the Safe Account itself, please connect a different account.\n          </ErrorMessage>\n        ) : !walletCanPay ? (\n          <ErrorMessage>Your connected wallet doesn&apos;t have enough funds to execute this transaction.</ErrorMessage>\n        ) : (\n          gasLimitError && (\n            <ErrorMessage error={gasLimitError}>\n              This transaction will most likely fail.\n              {` To save gas costs, ${isCreation ? 'avoid creating' : 'reject'} this transaction.`}\n            </ErrorMessage>\n          )\n        )}\n\n        {submitError && (\n          <Box mt={1}>\n            <ErrorMessage error={submitError}>Error submitting the transaction. Please try again.</ErrorMessage>\n          </Box>\n        )}\n\n        <Divider className={commonCss.nestedDivider} sx={{ pt: 3 }} />\n\n        <CardActions>\n          {/* Submit button */}\n          <CheckWallet allowNonOwner={onlyExecute} checkNetwork={!submitDisabled}>\n            {(isOk) => (\n              <Button variant=\"contained\" type=\"submit\" disabled={!isOk || submitDisabled} sx={{ minWidth: '112px' }}>\n                {!isSubmittable ? <CircularProgress size={20} /> : 'Execute'}\n              </Button>\n            )}\n          </CheckWallet>\n        </CardActions>\n      </form>\n    </>\n  )\n}\n\nconst useTxSecurityContext = () => useContext(TxSecurityContext)\n\nexport default madProps(CounterfactualForm, {\n  isOwner: useIsSafeOwner,\n  isExecutionLoop: useIsExecutionLoop,\n  txSecurity: useTxSecurityContext,\n})\n","import type { ChangeEvent, ReactElement } from 'react'\nimport { FormControlLabel, RadioGroup, Radio, Typography } from '@mui/material'\nimport { trackEvent, MODALS_EVENTS } from '@/services/analytics'\nimport { useAppDispatch, useAppSelector } from '@/store'\nimport { selectSettings, setTransactionExecution } from '@/store/settingsSlice'\n\nimport css from './styles.module.css'\n\nconst ExecuteCheckbox = ({ onChange }: { onChange: (checked: boolean) => void }): ReactElement => {\n  const settings = useAppSelector(selectSettings)\n  const dispatch = useAppDispatch()\n\n  const handleChange = (_: ChangeEvent<HTMLInputElement>, value: string) => {\n    const checked = value === 'true'\n    trackEvent({ ...MODALS_EVENTS.TOGGLE_EXECUTE_TX, label: checked })\n    dispatch(setTransactionExecution(checked))\n    onChange(checked)\n  }\n\n  return (\n    <>\n      <Typography>Would you like to execute the transaction immediately?</Typography>\n\n      <RadioGroup row value={String(settings.transactionExecution)} onChange={handleChange} className={css.group}>\n        <FormControlLabel\n          value=\"true\"\n          label={\n            <>\n              Yes, <b>execute</b>\n            </>\n          }\n          control={<Radio />}\n          className={css.radio}\n          data-testid=\"execute-checkbox\"\n        />\n        <FormControlLabel\n          value=\"false\"\n          label={<>No, later</>}\n          control={<Radio />}\n          className={css.radio}\n          data-testid=\"sign-checkbox\"\n        />\n      </RadioGroup>\n    </>\n  )\n}\n\nexport default ExecuteCheckbox\n","import useAsync from '@/hooks/useAsync'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { isSmartContractWallet } from '@/utils/wallets'\nimport { Errors, logError } from '@/services/exceptions'\nimport { type SafeTransaction } from '@safe-global/safe-core-sdk-types'\n\nconst useWalletCanRelay = (tx: SafeTransaction | undefined) => {\n  const { safe } = useSafeInfo()\n  const wallet = useWallet()\n  const hasEnoughSignatures = tx && tx.signatures.size >= safe.threshold\n\n  return useAsync(() => {\n    if (!tx || !wallet) return\n\n    return isSmartContractWallet(wallet.chainId, wallet.address)\n      .then((isSCWallet) => {\n        if (!isSCWallet) return true\n\n        return hasEnoughSignatures\n      })\n      .catch((err) => {\n        logError(Errors._106, err.message)\n        return false\n      })\n  }, [hasEnoughSignatures, tx, wallet])\n}\n\nexport default useWalletCanRelay\n","import { SafeProvider } from '@safe-global/protocol-kit'\nimport { useEffect } from 'react'\nimport type Safe from '@safe-global/protocol-kit'\nimport { encodeSignatures } from '@/services/tx/encodeSignatures'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport useAsync from '@/hooks/useAsync'\nimport useChainId from '@/hooks/useChainId'\nimport { useWeb3ReadOnly } from '@/hooks/wallets/web3'\nimport chains from '@/config/chains'\nimport { useSigner } from './wallets/useWallet'\nimport { useSafeSDK } from './coreSDK/safeCoreSDK'\nimport useIsSafeOwner from './useIsSafeOwner'\nimport { Errors, logError } from '@/services/exceptions'\nimport useSafeInfo from './useSafeInfo'\nimport { estimateTxBaseGas } from '@safe-global/protocol-kit/dist/src/utils/transactions/gas'\nimport {\n  getCompatibilityFallbackHandlerContract,\n  getSimulateTxAccessorContract,\n} from '@safe-global/protocol-kit/dist/src/contracts/safeDeploymentContracts'\nimport { type JsonRpcProvider } from 'ethers'\nimport { type ExtendedSafeInfo } from '@/store/safeInfoSlice'\n\nconst getEncodedSafeTx = (\n  safeSDK: Safe,\n  safeTx: SafeTransaction,\n  from: string | undefined,\n  needsSignature: boolean,\n): string | undefined => {\n  const EXEC_TX_METHOD = 'execTransaction'\n\n  // @ts-ignore union type is too complex\n  return safeSDK\n    .getContractManager()\n    .safeContract?.encode(EXEC_TX_METHOD, [\n      safeTx.data.to,\n      safeTx.data.value,\n      safeTx.data.data,\n      safeTx.data.operation,\n      safeTx.data.safeTxGas,\n      safeTx.data.baseGas,\n      safeTx.data.gasPrice,\n      safeTx.data.gasToken,\n      safeTx.data.refundReceiver,\n      encodeSignatures(safeTx, from, needsSignature),\n    ])\n}\n\nconst GasMultipliers = {\n  [chains.gno]: 1.3,\n  [chains.zksync]: 20,\n}\n\nconst incrementByGasMultiplier = (value: bigint, multiplier: number) => {\n  return (value * BigInt(100 * multiplier)) / BigInt(100)\n}\n\n/**\n * Estimates the gas limit for a transaction that will be executed on the zkSync network.\n *\n *  The rpc call for estimateGas is failing for the zkSync network, when the from address\n *  is a Safe. Quote from this discussion:\n *  https://github.com/zkSync-Community-Hub/zksync-developers/discussions/144\n *  ======================\n *  zkSync has native account abstraction and, under the hood, all accounts are a smart\n *  contract account. Even EOA use the DefaultAccount smart contract. All smart contract\n *  accounts on zkSync must be deployed using the createAccount or create2Account\n *  methods of the ContractDeployer system contract.\n *\n * When processing a transaction, the protocol checks the code of the from account and,\n * in this case, as Safe accounts are not deployed as native accounts on zkSync\n * (via createAccount or create2Account), it fails with the error above.\n * ======================\n *\n * We do some \"magic\" here by simulating the transaction on the SafeProxy contract\n *\n * @param safe\n * @param web3\n * @param safeSDK\n * @param safeTx\n */\nconst getGasLimitForZkSync = async (\n  safe: ExtendedSafeInfo,\n  web3: JsonRpcProvider,\n  safeSDK: Safe,\n  safeTx: SafeTransaction,\n) => {\n  // use a random EOA address as the from address\n  // https://github.com/zkSync-Community-Hub/zksync-developers/discussions/144\n  const fakeEOAFromAddress = '0x330d9F4906EDA1f73f668660d1946bea71f48827'\n  const customContracts = safeSDK.getContractManager().contractNetworks?.[safe.chainId]\n  const safeVersion = await safeSDK.getContractVersion()\n  const safeProvider = new SafeProvider({ provider: web3._getConnection().url })\n  const fallbackHandlerContract = await getCompatibilityFallbackHandlerContract({\n    safeProvider,\n    safeVersion,\n    customContracts,\n  })\n\n  const simulateTxAccessorContract = await getSimulateTxAccessorContract({\n    safeProvider,\n    safeVersion,\n    customContracts,\n  })\n\n  // 2. Add a simulate call to the predicted SafeProxy as second transaction\n  const transactionDataToEstimate: string = simulateTxAccessorContract.encode('simulate', [\n    safeTx.data.to,\n    // @ts-ignore\n    safeTx.data.value,\n    safeTx.data.data,\n    safeTx.data.operation,\n  ])\n\n  const safeFunctionToEstimate: string = fallbackHandlerContract.encode('simulate', [\n    await simulateTxAccessorContract.getAddress(),\n    transactionDataToEstimate,\n  ])\n\n  const gas = await web3.estimateGas({\n    to: safe.address.value,\n    from: fakeEOAFromAddress,\n    value: '0',\n    data: safeFunctionToEstimate,\n  })\n\n  // The estimateTxBaseGas function seems to estimate too low for zkSync\n  const baseGas = incrementByGasMultiplier(\n    BigInt(await estimateTxBaseGas(safeSDK, safeTx)),\n    GasMultipliers[chains.zksync],\n  )\n\n  return BigInt(gas) + baseGas\n}\n\nconst useGasLimit = (\n  safeTx?: SafeTransaction,\n): {\n  gasLimit?: bigint\n  gasLimitError?: Error\n  gasLimitLoading: boolean\n} => {\n  const safeSDK = useSafeSDK()\n  const web3ReadOnly = useWeb3ReadOnly()\n  const { safe } = useSafeInfo()\n  const safeAddress = safe.address.value\n  const threshold = safe.threshold\n  const wallet = useSigner()\n  const walletAddress = wallet?.address\n  const isOwner = useIsSafeOwner()\n  const currentChainId = useChainId()\n  const hasSafeTxGas = !!safeTx?.data?.safeTxGas\n\n  const [gasLimit, gasLimitError, gasLimitLoading] = useAsync<bigint | undefined>(async () => {\n    if (!safeAddress || !walletAddress || !safeSDK || !web3ReadOnly || !safeTx) return\n\n    const encodedSafeTx = getEncodedSafeTx(\n      safeSDK,\n      safeTx,\n      isOwner ? walletAddress : undefined,\n      safeTx.signatures.size < threshold,\n    )\n\n    // if we are dealing with zksync and the walletAddress is a Safe, we have to do some magic\n    if (safe.chainId === chains.zksync && (await web3ReadOnly.getCode(walletAddress)) !== '0x') {\n      return getGasLimitForZkSync(safe, web3ReadOnly, safeSDK, safeTx)\n    }\n\n    return web3ReadOnly\n      .estimateGas({\n        to: safeAddress,\n        from: walletAddress,\n        data: encodedSafeTx,\n      })\n      .then((gasLimit) => {\n        // Due to a bug in Nethermind estimation, we need to increment the gasLimit by 30%\n        // when the safeTxGas is defined and not 0. Currently Nethermind is used only for Gnosis Chain.\n        if (currentChainId === chains.gno && hasSafeTxGas) {\n          return incrementByGasMultiplier(gasLimit, GasMultipliers[chains.gno])\n        }\n\n        return gasLimit\n      })\n  }, [\n    safeAddress,\n    walletAddress,\n    safeSDK,\n    web3ReadOnly,\n    safeTx,\n    isOwner,\n    currentChainId,\n    hasSafeTxGas,\n    threshold,\n    safe,\n  ])\n\n  useEffect(() => {\n    if (gasLimitError) {\n      logError(Errors._612, gasLimitError.message)\n    }\n  }, [gasLimitError])\n\n  return { gasLimit, gasLimitError, gasLimitLoading }\n}\n\nexport default useGasLimit\n","import { SafeTxContext } from '@/components/tx-flow/SafeTxProvider'\nimport { useSafeSDK } from '@/hooks/coreSDK/safeCoreSDK'\nimport useAsync from '@/hooks/useAsync'\nimport { logError } from '@/services/exceptions'\nimport ErrorCodes from '@/services/exceptions/ErrorCodes'\nimport { ethers } from 'ethers'\nimport { useContext } from 'react'\n\nexport const useValidateTxData = (txId?: string) => {\n  const { safeTx } = useContext(SafeTxContext)\n\n  const sdk = useSafeSDK()\n\n  return useAsync(async () => {\n    if (!sdk || !safeTx) {\n      return\n    }\n    // Validate hash\n    const computedSafeTxHash = await sdk.getTransactionHash(safeTx)\n\n    if (txId && txId.slice(-66) !== computedSafeTxHash) {\n      return 'The transaction data does not match its safeTxHash'\n    }\n\n    // Validate non 1271 signatures\n    for (const signature of safeTx.signatures.values()) {\n      if (signature.isContractSignature) {\n        continue\n      }\n\n      const sig = signature.staticPart()\n      const v = parseInt(sig.slice(-2), 16)\n\n      if (v === 0 || v === 1) {\n        // We ignore pre-validated sigs and EIP1271 for now\n        continue\n      }\n      // ECDSA signature\n      if (v === 27 || v === 28) {\n        try {\n          const recoveredAddress = ethers.recoverAddress(computedSafeTxHash, sig)\n          if (recoveredAddress !== signature.signer) {\n            return `The signature for the signer ${signature.signer} is invalid`\n          }\n        } catch (e) {\n          logError(ErrorCodes._818, e)\n          return `The signature for the signer ${signature.signer} could not be validated`\n        }\n      }\n      // ETH_SIGN signature\n      if (v === 31 || v === 32) {\n        try {\n          const modifiedSig = `${sig.slice(0, -2)}${(v - 4).toString(16)}`\n          const recoveredAddress = ethers.verifyMessage(ethers.getBytes(computedSafeTxHash), modifiedSig)\n          if (recoveredAddress !== signature.signer) {\n            return `The signature for the signer ${signature.signer} is invalid`\n          }\n        } catch (e) {\n          logError(ErrorCodes._818, e)\n          return `The signature for the signer ${signature.signer} could not be validated`\n        }\n      }\n    }\n  }, [sdk, safeTx, txId])\n}\n","import useWalletCanPay from '@/hooks/useWalletCanPay'\nimport madProps from '@/utils/mad-props'\nimport { type ReactElement, type SyntheticEvent, useContext, useMemo, useState } from 'react'\nimport { CircularProgress, Box, Button, CardActions, Divider } from '@mui/material'\nimport classNames from 'classnames'\n\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport { trackError, Errors } from '@/services/exceptions'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { getTxOptions } from '@/utils/transactions'\nimport useIsValidExecution from '@/hooks/useIsValidExecution'\nimport CheckWallet from '@/components/common/CheckWallet'\nimport { useIsExecutionLoop, useTxActions } from './hooks'\nimport { useRelaysBySafe } from '@/hooks/useRemainingRelays'\nimport useWalletCanRelay from '@/hooks/useWalletCanRelay'\nimport { ExecutionMethod, ExecutionMethodSelector } from '../ExecutionMethodSelector'\nimport { hasRemainingRelays } from '@/utils/relaying'\nimport type { SignOrExecuteProps } from './SignOrExecuteForm'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport { TxModalContext } from '@/components/tx-flow'\nimport { SuccessScreenFlow } from '@/components/tx-flow/flows'\nimport useGasLimit from '@/hooks/useGasLimit'\nimport AdvancedParams, { useAdvancedParams } from '../AdvancedParams'\nimport { asError } from '@/services/exceptions/utils'\nimport { isWalletRejection } from '@/utils/wallets'\n\nimport css from './styles.module.css'\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport { TxSecurityContext } from '../security/shared/TxSecurityContext'\nimport useIsSafeOwner from '@/hooks/useIsSafeOwner'\nimport NonOwnerError from '@/components/tx/SignOrExecuteForm/NonOwnerError'\nimport WalletRejectionError from '@/components/tx/SignOrExecuteForm/WalletRejectionError'\nimport { useValidateTxData } from '@/hooks/useValidateTxData'\n\nexport const ExecuteForm = ({\n  safeTx,\n  txId,\n  onSubmit,\n  disableSubmit = false,\n  origin,\n  onlyExecute,\n  isCreation,\n  isOwner,\n  isExecutionLoop,\n  txActions,\n  txSecurity,\n}: SignOrExecuteProps & {\n  isOwner: ReturnType<typeof useIsSafeOwner>\n  isExecutionLoop: ReturnType<typeof useIsExecutionLoop>\n  txActions: ReturnType<typeof useTxActions>\n  txSecurity: ReturnType<typeof useTxSecurityContext>\n  isCreation?: boolean\n  safeTx?: SafeTransaction\n}): ReactElement => {\n  // Form state\n  const [isSubmittable, setIsSubmittable] = useState<boolean>(true)\n  const [submitError, setSubmitError] = useState<Error | undefined>()\n  const [isRejectedByUser, setIsRejectedByUser] = useState<Boolean>(false)\n\n  const [validationResult, , validationLoading] = useValidateTxData(txId)\n  const validationError = useMemo(\n    () => (validationResult !== undefined ? new Error(validationResult) : undefined),\n    [validationResult],\n  )\n  // Hooks\n  const currentChain = useCurrentChain()\n  const { executeTx } = txActions\n  const { setTxFlow } = useContext(TxModalContext)\n  const { needsRiskConfirmation, isRiskConfirmed, setIsRiskIgnored } = txSecurity\n\n  // We default to relay, but the option is only shown if we canRelay\n  const [executionMethod, setExecutionMethod] = useState(ExecutionMethod.RELAY)\n\n  // SC wallets can relay fully signed transactions\n  const [walletCanRelay] = useWalletCanRelay(safeTx)\n  const relays = useRelaysBySafe()\n  // The transaction can/will be relayed\n  const canRelay = walletCanRelay && hasRemainingRelays(relays[0])\n  const willRelay = canRelay && executionMethod === ExecutionMethod.RELAY\n\n  // Estimate gas limit\n  const { gasLimit, gasLimitError } = useGasLimit(safeTx)\n  const [advancedParams, setAdvancedParams] = useAdvancedParams(gasLimit)\n\n  // Check if transaction will fail\n  const { executionValidationError } = useIsValidExecution(\n    safeTx,\n    advancedParams.gasLimit ? advancedParams.gasLimit : undefined,\n  )\n\n  // On modal submit\n  const handleSubmit = async (e: SyntheticEvent) => {\n    e.preventDefault()\n\n    if (needsRiskConfirmation && !isRiskConfirmed) {\n      setIsRiskIgnored(true)\n      return\n    }\n\n    setIsSubmittable(false)\n    setSubmitError(undefined)\n    setIsRejectedByUser(false)\n\n    const txOptions = getTxOptions(advancedParams, currentChain)\n\n    let executedTxId: string\n    try {\n      executedTxId = await executeTx(txOptions, safeTx, txId, origin, willRelay)\n    } catch (_err) {\n      const err = asError(_err)\n      if (isWalletRejection(err)) {\n        setIsRejectedByUser(true)\n      } else {\n        trackError(Errors._804, err)\n        setSubmitError(err)\n      }\n      setIsSubmittable(true)\n      return\n    }\n\n    // On success\n    onSubmit?.(executedTxId, true)\n    setTxFlow(<SuccessScreenFlow txId={executedTxId} />, undefined, false)\n  }\n\n  const walletCanPay = useWalletCanPay({\n    gasLimit,\n    maxFeePerGas: advancedParams.maxFeePerGas,\n  })\n\n  const cannotPropose = !isOwner && !onlyExecute\n  const submitDisabled =\n    !safeTx ||\n    !isSubmittable ||\n    disableSubmit ||\n    isExecutionLoop ||\n    cannotPropose ||\n    (needsRiskConfirmation && !isRiskConfirmed) ||\n    validationError !== undefined ||\n    validationLoading\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className={classNames(css.params, { [css.noBottomBorderRadius]: canRelay })}>\n          <AdvancedParams\n            willExecute\n            params={advancedParams}\n            recommendedGasLimit={gasLimit}\n            onFormSubmit={setAdvancedParams}\n            gasLimitError={gasLimitError}\n            willRelay={willRelay}\n          />\n\n          {canRelay && (\n            <div className={css.noTopBorder}>\n              <ExecutionMethodSelector\n                executionMethod={executionMethod}\n                setExecutionMethod={setExecutionMethod}\n                relays={relays[0]}\n              />\n            </div>\n          )}\n        </div>\n\n        {/* Error messages */}\n        {cannotPropose ? (\n          <NonOwnerError />\n        ) : isExecutionLoop ? (\n          <ErrorMessage>\n            Cannot execute a transaction from the Safe Account itself, please connect a different account.\n          </ErrorMessage>\n        ) : !walletCanPay && !willRelay ? (\n          <ErrorMessage level=\"info\">\n            Your connected wallet doesn&apos;t have enough funds to execute this transaction.\n          </ErrorMessage>\n        ) : (\n          (executionValidationError || gasLimitError) && (\n            <ErrorMessage error={executionValidationError || gasLimitError}>\n              This transaction will most likely fail.\n              {` To save gas costs, ${isCreation ? 'avoid creating' : 'reject'} this transaction.`}\n            </ErrorMessage>\n          )\n        )}\n\n        {submitError && (\n          <Box mt={1}>\n            <ErrorMessage error={submitError}>Error submitting the transaction. Please try again.</ErrorMessage>\n          </Box>\n        )}\n\n        {isRejectedByUser && (\n          <Box mt={1}>\n            <WalletRejectionError />\n          </Box>\n        )}\n\n        {validationError !== undefined && (\n          <ErrorMessage error={validationError}>Error validating transaction data</ErrorMessage>\n        )}\n\n        <Divider className={commonCss.nestedDivider} sx={{ pt: 3 }} />\n\n        <CardActions>\n          {/* Submit button */}\n          <CheckWallet allowNonOwner={onlyExecute} checkNetwork={!submitDisabled}>\n            {(isOk) => (\n              <Button\n                data-testid=\"execute-form-btn\"\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={!isOk || submitDisabled}\n                sx={{ minWidth: '112px', width: ['100%', '100%', '100%', 'auto'] }}\n              >\n                {!isSubmittable ? <CircularProgress size={20} /> : 'Execute'}\n              </Button>\n            )}\n          </CheckWallet>\n        </CardActions>\n      </form>\n    </>\n  )\n}\n\nconst useTxSecurityContext = () => useContext(TxSecurityContext)\n\nexport default madProps(ExecuteForm, {\n  isOwner: useIsSafeOwner,\n  isExecutionLoop: useIsExecutionLoop,\n  txActions: useTxActions,\n  txSecurity: useTxSecurityContext,\n})\n","import { type SyntheticEvent } from 'react'\nimport { Box, Button, Divider, SvgIcon, Tooltip } from '@mui/material'\nimport PlusIcon from '@/public/images/common/plus.svg'\nimport Track from '@/components/common/Track'\nimport { BATCH_EVENTS } from '@/services/analytics'\n\nconst BatchButton = ({\n  onClick,\n  disabled,\n  tooltip,\n}: {\n  onClick: (e: SyntheticEvent) => void\n  disabled?: boolean\n  tooltip?: string\n}) => (\n  <>\n    <Tooltip title={tooltip} placement=\"top\">\n      <span>\n        <Track {...BATCH_EVENTS.BATCH_APPEND}>\n          <Button\n            variant=\"outlined\"\n            onClick={onClick}\n            disabled={disabled}\n            sx={{ display: ['none', 'flex'], width: ['100%', '100%', '100%', 'auto'] }}\n          >\n            <SvgIcon component={PlusIcon} inheritViewBox fontSize=\"small\" sx={{ mr: 1 }} />\n            Add to batch\n          </Button>\n        </Track>\n      </span>\n    </Tooltip>\n    <Box display={['none', 'flex']} flexDirection=\"column\" justifyContent=\"center\" color=\"border.main\">\n      {' '}\n      <Divider\n        sx={{\n          '&:before': {\n            display: { sx: 'block', lg: 'none' },\n          },\n        }}\n      >\n        or\n      </Divider>\n    </Box>\n  </>\n)\n\nexport default BatchButton\n","import madProps from '@/utils/mad-props'\nimport { type ReactElement, type SyntheticEvent, useContext, useMemo, useState } from 'react'\nimport { CircularProgress, Box, Button, CardActions, Divider } from '@mui/material'\nimport Stack from '@mui/system/Stack'\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport { trackError, Errors } from '@/services/exceptions'\nimport useIsSafeOwner from '@/hooks/useIsSafeOwner'\nimport CheckWallet from '@/components/common/CheckWallet'\nimport { useAlreadySigned, useTxActions } from './hooks'\nimport type { SignOrExecuteProps } from './SignOrExecuteForm'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport { TxModalContext } from '@/components/tx-flow'\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport { TxSecurityContext } from '../security/shared/TxSecurityContext'\nimport NonOwnerError from '@/components/tx/SignOrExecuteForm/NonOwnerError'\nimport WalletRejectionError from '@/components/tx/SignOrExecuteForm/WalletRejectionError'\nimport BatchButton from './BatchButton'\nimport { asError } from '@/services/exceptions/utils'\nimport { isWalletRejection } from '@/utils/wallets'\nimport { useSigner } from '@/hooks/wallets/useWallet'\nimport { NestedTxSuccessScreenFlow } from '@/components/tx-flow/flows'\nimport { useValidateTxData } from '@/hooks/useValidateTxData'\n\nexport const SignForm = ({\n  safeTx,\n  txId,\n  onSubmit,\n  disableSubmit = false,\n  origin,\n  isBatch,\n  isBatchable,\n  isCreation,\n  isOwner,\n  txActions,\n  txSecurity,\n}: SignOrExecuteProps & {\n  isOwner: ReturnType<typeof useIsSafeOwner>\n  txActions: ReturnType<typeof useTxActions>\n  txSecurity: ReturnType<typeof useTxSecurityContext>\n  isCreation?: boolean\n  safeTx?: SafeTransaction\n}): ReactElement => {\n  // Form state\n  const [isSubmittable, setIsSubmittable] = useState<boolean>(true)\n  const [submitError, setSubmitError] = useState<Error | undefined>()\n  const [isRejectedByUser, setIsRejectedByUser] = useState<Boolean>(false)\n\n  const [validationResult, , validationLoading] = useValidateTxData(txId)\n  const validationError = useMemo(\n    () => (validationResult !== undefined ? new Error(validationResult) : undefined),\n    [validationResult],\n  )\n\n  // Hooks\n  const { signTx, addToBatch } = txActions\n  const { setTxFlow } = useContext(TxModalContext)\n  const { needsRiskConfirmation, isRiskConfirmed, setIsRiskIgnored } = txSecurity\n  const hasSigned = useAlreadySigned(safeTx)\n  const signer = useSigner()\n\n  // On modal submit\n  const handleSubmit = async (e: SyntheticEvent, isAddingToBatch = false) => {\n    e.preventDefault()\n\n    if (needsRiskConfirmation && !isRiskConfirmed) {\n      setIsRiskIgnored(true)\n      return\n    }\n\n    if (!safeTx || validationError) return\n\n    setIsSubmittable(false)\n    setSubmitError(undefined)\n    setIsRejectedByUser(false)\n\n    let resultTxId: string\n    try {\n      resultTxId = await (isAddingToBatch ? addToBatch(safeTx, origin) : signTx(safeTx, txId, origin))\n    } catch (_err) {\n      const err = asError(_err)\n      if (isWalletRejection(err)) {\n        setIsRejectedByUser(true)\n      } else {\n        trackError(Errors._804, err)\n        setSubmitError(err)\n      }\n      setIsSubmittable(true)\n      return\n    }\n\n    // On successful sign\n    if (!isAddingToBatch) {\n      onSubmit?.(resultTxId)\n    }\n\n    if (!isAddingToBatch && signer?.isSafe) {\n      setTxFlow(<NestedTxSuccessScreenFlow txId={resultTxId} />, undefined, false)\n    } else {\n      setTxFlow(undefined)\n    }\n  }\n\n  const onBatchClick = (e: SyntheticEvent) => {\n    handleSubmit(e, true)\n  }\n\n  const cannotPropose = !isOwner\n  const submitDisabled =\n    !safeTx ||\n    !isSubmittable ||\n    disableSubmit ||\n    cannotPropose ||\n    (needsRiskConfirmation && !isRiskConfirmed) ||\n    validationError !== undefined ||\n    validationLoading\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {hasSigned && <ErrorMessage level=\"warning\">You have already signed this transaction.</ErrorMessage>}\n\n      {cannotPropose ? (\n        <NonOwnerError />\n      ) : (\n        submitError && (\n          <ErrorMessage error={submitError}>Error submitting the transaction. Please try again.</ErrorMessage>\n        )\n      )}\n\n      {isRejectedByUser && (\n        <Box mt={1}>\n          <WalletRejectionError />\n        </Box>\n      )}\n\n      {validationError !== undefined && (\n        <ErrorMessage error={validationError}>Error validating transaction data</ErrorMessage>\n      )}\n\n      <Divider className={commonCss.nestedDivider} sx={{ pt: 3 }} />\n\n      <CardActions>\n        <Stack\n          sx={{\n            width: ['100%', '100%', '100%', 'auto'],\n          }}\n          direction={{ xs: 'column-reverse', lg: 'row' }}\n          spacing={{ xs: 2, md: 2 }}\n        >\n          {/* Batch button */}\n          {isCreation && !isBatch && (\n            <BatchButton\n              onClick={onBatchClick}\n              disabled={submitDisabled || !isBatchable}\n              tooltip={!isBatchable ? `Cannot batch this type of transaction` : undefined}\n            />\n          )}\n\n          {/* Submit button */}\n          <CheckWallet checkNetwork={!submitDisabled}>\n            {(isOk) => (\n              <Button\n                data-testid=\"sign-btn\"\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={!isOk || submitDisabled}\n                sx={{ minWidth: '82px', order: '1', width: ['100%', '100%', '100%', 'auto'] }}\n              >\n                {!isSubmittable ? <CircularProgress size={20} /> : 'Sign'}\n              </Button>\n            )}\n          </CheckWallet>\n        </Stack>\n      </CardActions>\n    </form>\n  )\n}\n\nconst useTxSecurityContext = () => useContext(TxSecurityContext)\n\nexport default madProps(SignForm, {\n  isOwner: useIsSafeOwner,\n  txActions: useTxActions,\n  txSecurity: useTxSecurityContext,\n})\n","import { useMemo, type ReactElement } from 'react'\nimport type { TransactionData } from '@safe-global/safe-gateway-typescript-sdk'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { getExplorerLink } from '@/utils/gateway'\nimport ErrorMessage from '../ErrorMessage'\nimport { isValidMasterCopy } from '@/services/contracts/safeContracts'\nimport { extractMigrationL2MasterCopyAddress } from '@/features/multichain/utils/extract-migration-data'\n\nconst UnknownContractError = ({ txData }: { txData: TransactionData | undefined }): ReactElement | null => {\n  const { safe, safeAddress } = useSafeInfo()\n  const currentChain = useCurrentChain()\n  const newMasterCopy = useMemo(() => {\n    return txData && extractMigrationL2MasterCopyAddress(txData)\n  }, [txData])\n\n  // Unsupported base contract\n  const isUnknown = !isValidMasterCopy(safe.implementationVersionState)\n\n  if (!isUnknown || !!newMasterCopy) return null\n\n  return (\n    <ErrorMessage>\n      This Safe Account was created with an unsupported base contract. It should <b>ONLY</b> be used for fund recovery.\n      Transactions will execute but the transaction list may not immediately update. Transaction success can be verified\n      on the{' '}\n      <ExternalLink href={currentChain ? getExplorerLink(safeAddress, currentChain.blockExplorerUriTemplate).href : ''}>\n        {currentChain?.chainName} explorer\n      </ExternalLink>\n      .\n    </ErrorMessage>\n  )\n}\n\nexport default UnknownContractError\n","export const chains = {\n    [1]: {\n        name: \"mainnet\",\n        prefix: \"eth\",\n        subgraph: \"https://api.studio.thegraph.com/query/93263/zodiac-roles-mainnet/v2.3.2\",\n    },\n    [10]: {\n        name: \"optimism\",\n        prefix: \"oeth\",\n        subgraph: \"https://api.studio.thegraph.com/query/93263/zodiac-roles-optimism/v2.3.2\",\n    },\n    [100]: {\n        name: \"gnosis\",\n        prefix: \"gno\",\n        subgraph: \"https://api.studio.thegraph.com/query/93263/zodiac-roles-gnosis/v2.3.2\",\n    },\n    [137]: {\n        name: \"polygon\",\n        prefix: \"matic\",\n        subgraph: \"https://api.studio.thegraph.com/query/93263/zodiac-roles-polygon/v2.3.2\",\n    },\n    [1101]: {\n        name: \"zkevm\",\n        prefix: \"zkevm\",\n        subgraph: \"https://api.studio.thegraph.com/query/93263/zodiac-roles-zkevm/v2.3.2\",\n    },\n    [42161]: {\n        name: \"arbitrumOne\",\n        prefix: \"arb1\",\n        subgraph: \"https://api.studio.thegraph.com/query/93263/zodiac-roles-arbitrum-one/v2.3.2\",\n    },\n    [43114]: {\n        name: \"avalanche\",\n        prefix: \"avax\",\n        subgraph: \"https://api.studio.thegraph.com/query/93263/zodiac-roles-avalanche/v2.3.2\",\n    },\n    [56]: {\n        name: \"bsc\",\n        prefix: \"bnb\",\n        subgraph: \"https://api.studio.thegraph.com/query/93263/zodiac-roles-bsc/v2.3.2\",\n    },\n    [8453]: {\n        name: \"base\",\n        prefix: \"base\",\n        subgraph: \"https://api.studio.thegraph.com/query/93263/zodiac-roles-base/v2.3.2\",\n    },\n    [84532]: {\n        name: \"baseSepolia\",\n        prefix: \"basesep\",\n        subgraph: \"https://api.studio.thegraph.com/query/93263/zodiac-roles-base-sepolia/v2.3.2\",\n    },\n    [11155111]: {\n        name: \"sepolia\",\n        prefix: \"sep\",\n        subgraph: \"https://api.studio.thegraph.com/query/93263/zodiac-roles-sepolia/v2.3.2\",\n    },\n};\n","export var ExecutionOptions;\n(function (ExecutionOptions) {\n    ExecutionOptions[ExecutionOptions[\"None\"] = 0] = \"None\";\n    ExecutionOptions[ExecutionOptions[\"Send\"] = 1] = \"Send\";\n    ExecutionOptions[ExecutionOptions[\"DelegateCall\"] = 2] = \"DelegateCall\";\n    ExecutionOptions[ExecutionOptions[\"Both\"] = 3] = \"Both\";\n})(ExecutionOptions || (ExecutionOptions = {}));\nexport var Clearance;\n(function (Clearance) {\n    Clearance[Clearance[\"None\"] = 0] = \"None\";\n    Clearance[Clearance[\"Target\"] = 1] = \"Target\";\n    Clearance[Clearance[\"Function\"] = 2] = \"Function\";\n})(Clearance || (Clearance = {}));\nexport var ParameterType;\n(function (ParameterType) {\n    ParameterType[ParameterType[\"None\"] = 0] = \"None\";\n    ParameterType[ParameterType[\"Static\"] = 1] = \"Static\";\n    ParameterType[ParameterType[\"Dynamic\"] = 2] = \"Dynamic\";\n    ParameterType[ParameterType[\"Tuple\"] = 3] = \"Tuple\";\n    ParameterType[ParameterType[\"Array\"] = 4] = \"Array\";\n    ParameterType[ParameterType[\"Calldata\"] = 5] = \"Calldata\";\n    ParameterType[ParameterType[\"AbiEncoded\"] = 6] = \"AbiEncoded\";\n})(ParameterType || (ParameterType = {}));\nexport var Operator;\n(function (Operator) {\n    // 00:    EMPTY EXPRESSION (default, always passes)\n    //          paramType: Static / Dynamic / Tuple / Array\n    //          ❓ children (only for paramType: Tuple / Array to describe their structure)\n    //          🚫 compValue\n    Operator[Operator[\"Pass\"] = 0] = \"Pass\";\n    // ------------------------------------------------------------\n    // 01-04: LOGICAL EXPRESSIONS\n    //          paramType: None\n    //          ✅ children\n    //          🚫 compValue\n    Operator[Operator[\"And\"] = 1] = \"And\";\n    Operator[Operator[\"Or\"] = 2] = \"Or\";\n    Operator[Operator[\"Nor\"] = 3] = \"Nor\";\n    // ------------------------------------------------------------\n    // 05-14: COMPLEX EXPRESSIONS\n    //          paramType: Calldata / AbiEncoded / Tuple / Array,\n    //          ✅ children\n    //          🚫 compValue\n    Operator[Operator[\"Matches\"] = 5] = \"Matches\";\n    Operator[Operator[\"ArraySome\"] = 6] = \"ArraySome\";\n    Operator[Operator[\"ArrayEvery\"] = 7] = \"ArrayEvery\";\n    Operator[Operator[\"ArraySubset\"] = 8] = \"ArraySubset\";\n    // ------------------------------------------------------------\n    // 15:    SPECIAL COMPARISON (without compValue)\n    //          paramType: Static\n    //          🚫 children\n    //          🚫 compValue\n    Operator[Operator[\"EqualToAvatar\"] = 15] = \"EqualToAvatar\";\n    // ------------------------------------------------------------\n    // 16-31: COMPARISON EXPRESSIONS\n    //          paramType: Static / Dynamic / Tuple / Array\n    //          🚫 children\n    //          ✅ compValue\n    Operator[Operator[\"EqualTo\"] = 16] = \"EqualTo\";\n    Operator[Operator[\"GreaterThan\"] = 17] = \"GreaterThan\";\n    Operator[Operator[\"LessThan\"] = 18] = \"LessThan\";\n    Operator[Operator[\"SignedIntGreaterThan\"] = 19] = \"SignedIntGreaterThan\";\n    Operator[Operator[\"SignedIntLessThan\"] = 20] = \"SignedIntLessThan\";\n    Operator[Operator[\"Bitmask\"] = 21] = \"Bitmask\";\n    Operator[Operator[\"Custom\"] = 22] = \"Custom\";\n    Operator[Operator[\"WithinAllowance\"] = 28] = \"WithinAllowance\";\n    Operator[Operator[\"EtherWithinAllowance\"] = 29] = \"EtherWithinAllowance\";\n    Operator[Operator[\"CallWithinAllowance\"] = 30] = \"CallWithinAllowance\";\n})(Operator || (Operator = {}));\nexport var Status;\n(function (Status) {\n    Status[Status[\"Ok\"] = 0] = \"Ok\";\n    /** Role not allowed to delegate call to target address */\n    Status[Status[\"DelegateCallNotAllowed\"] = 1] = \"DelegateCallNotAllowed\";\n    /** Role not allowed to call target address */\n    Status[Status[\"TargetAddressNotAllowed\"] = 2] = \"TargetAddressNotAllowed\";\n    /** Role not allowed to call this function on target address */\n    Status[Status[\"FunctionNotAllowed\"] = 3] = \"FunctionNotAllowed\";\n    /** Role not allowed to send to target address */\n    Status[Status[\"SendNotAllowed\"] = 4] = \"SendNotAllowed\";\n    /** Or condition not met */\n    Status[Status[\"OrViolation\"] = 5] = \"OrViolation\";\n    /** Nor condition not met */\n    Status[Status[\"NorViolation\"] = 6] = \"NorViolation\";\n    /** Parameter value is not equal to allowed */\n    Status[Status[\"ParameterNotAllowed\"] = 7] = \"ParameterNotAllowed\";\n    /** Parameter value less than allowed */\n    Status[Status[\"ParameterLessThanAllowed\"] = 8] = \"ParameterLessThanAllowed\";\n    /** Parameter value greater than maximum allowed by role */\n    Status[Status[\"ParameterGreaterThanAllowed\"] = 9] = \"ParameterGreaterThanAllowed\";\n    /** Parameter value does not match */\n    Status[Status[\"ParameterNotAMatch\"] = 10] = \"ParameterNotAMatch\";\n    /** Array elements do not meet allowed criteria for every element */\n    Status[Status[\"NotEveryArrayElementPasses\"] = 11] = \"NotEveryArrayElementPasses\";\n    /** Array elements do not meet allowed criteria for at least one element */\n    Status[Status[\"NoArrayElementPasses\"] = 12] = \"NoArrayElementPasses\";\n    /** Parameter value not a subset of allowed */\n    Status[Status[\"ParameterNotSubsetOfAllowed\"] = 13] = \"ParameterNotSubsetOfAllowed\";\n    /** Bitmask exceeded value length */\n    Status[Status[\"BitmaskOverflow\"] = 14] = \"BitmaskOverflow\";\n    /** Bitmask not an allowed value */\n    Status[Status[\"BitmaskNotAllowed\"] = 15] = \"BitmaskNotAllowed\";\n    Status[Status[\"CustomConditionViolation\"] = 16] = \"CustomConditionViolation\";\n    Status[Status[\"AllowanceExceeded\"] = 17] = \"AllowanceExceeded\";\n    Status[Status[\"CallAllowanceExceeded\"] = 18] = \"CallAllowanceExceeded\";\n    Status[Status[\"EtherAllowanceExceeded\"] = 19] = \"EtherAllowanceExceeded\";\n})(Status || (Status = {}));\n","import { chains } from \"./chains\";\nimport { Clearance, ExecutionOptions } from \"./types\";\nconst QUERY = `\n  query RolesMod($id: String) {\n    rolesModifier(id: $id) {\n      address\n      owner\n      avatar\n      target \n      roles(first: 1000) {\n        key\n        members(first: 1000) {\n          member {\n            address\n          }\n        }\n        targets(first: 1000) {\n          address\n          clearance\n          executionOptions\n          functions(first: 1000) {\n            selector\n            wildcarded\n            executionOptions\n          }\n        }\n        lastUpdate\n      }\n      unwrapAdapters(where: {selector: \"0x8d80ff0a\", adapterAddress: \"0x93b7fcbc63ed8a3a24b59e1c3e6649d50b7427c0\"}) {\n        targetAddress\n      }\n    }\n  }\n`;\nexport const fetchRolesMod = async ({ address, ...rest }, options) => {\n    const endpoint = \"subgraph\" in rest ? rest.subgraph : chains[rest.chainId].subgraph;\n    const res = await fetch(endpoint, {\n        ...options,\n        method: \"POST\",\n        headers: {\n            ...options?.headers,\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            query: QUERY,\n            variables: { id: address.toLowerCase() },\n            operationName: \"RolesMod\",\n        }),\n    });\n    const { data, error, errors } = await res.json();\n    if (error || (errors && errors[0])) {\n        throw new Error(error || errors[0]);\n    }\n    if (!data || !data.rolesModifier) {\n        return null;\n    }\n    assertNoPagination(data.rolesModifier.roles);\n    for (const role of data.rolesModifier.roles) {\n        assertNoPagination(role.members);\n        assertNoPagination(role.targets);\n    }\n    return mapGraphQl(data.rolesModifier);\n};\nconst mapGraphQl = (rolesModifier) => ({\n    ...rolesModifier,\n    roles: rolesModifier.roles.map(mapGraphQlRole),\n    multiSendAddresses: rolesModifier.unwrapAdapters.map((adapter) => adapter.targetAddress),\n});\nconst mapGraphQlRole = (role) => ({\n    key: role.key,\n    members: role.members.map((assignment) => assignment.member.address),\n    targets: role.targets\n        .filter((t) => t.clearance !== \"None\" &&\n        !(t.clearance === \"Function\" && t.functions.length === 0))\n        .map((target) => ({\n        address: target.address,\n        clearance: Clearance[target.clearance],\n        executionOptions: ExecutionOptions[target.executionOptions],\n        functions: target.functions.map((func) => ({\n            selector: func.selector,\n            executionOptions: ExecutionOptions[func.executionOptions],\n            wildcarded: func.wildcarded,\n        })),\n    })),\n});\nconst assertNoPagination = (data) => {\n    if (data.length === 1000) {\n        throw new Error(\"Pagination not supported\");\n    }\n};\n","import { chains } from \"./chains\";\nimport { Clearance, ExecutionOptions, } from \"./types\";\nconst ROLE_QUERY = `\nquery Role($id: String) {\n  role(id: $id) {\n    key\n    members(first: 1000) {\n      member {\n        address\n      }\n    }\n    targets(first: 1000) {\n      address\n      clearance\n      executionOptions\n      functions(first: 1000) {\n        selector\n        executionOptions\n        wildcarded\n        condition {\n          id\n          json\n        }\n      }\n    }\n    annotations(first: 1000) {\n      uri\n      schema\n    }\n    lastUpdate\n  }\n}\n`.trim();\nconst ROLE_AT_BLOCK_QUERY = `\nquery Role($id: String, $block: Int) {\n  role(id: $id, block: { number: $block }) {\n    key\n    members(first: 1000) {\n      member {\n        address\n      }\n    }\n    targets(first: 1000) {\n      address\n      clearance\n      executionOptions\n      functions(first: 1000) {\n        selector\n        executionOptions\n        wildcarded\n        condition {\n          id\n          json\n        }\n      }\n    }\n    annotations(first: 1000) {\n      uri\n      schema\n    }\n    lastUpdate\n  }\n}\n`.trim();\nconst getRoleId = (address, roleKey) => `${address.toLowerCase()}-ROLE-${roleKey}`;\nexport const fetchRole = async ({ address, roleKey, blockNumber, ...rest }, options) => {\n    const endpoint = \"subgraph\" in rest ? rest.subgraph : chains[rest.chainId].subgraph;\n    const res = await fetch(endpoint, {\n        ...options,\n        method: \"POST\",\n        headers: {\n            ...options?.headers,\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            query: blockNumber ? ROLE_AT_BLOCK_QUERY : ROLE_QUERY,\n            variables: { id: getRoleId(address, roleKey), block: blockNumber },\n            operationName: \"Role\",\n        }),\n    });\n    const { data, error, errors } = await res.json();\n    if (error || (errors && errors[0])) {\n        throw new Error(error || errors[0]);\n    }\n    if (!data || !data.role) {\n        return null;\n    }\n    assertNoPagination(data.role.members);\n    assertNoPagination(data.role.targets);\n    assertNoPagination(data.role.annotations);\n    return mapGraphQl(data.role);\n};\nconst mapGraphQl = (role) => ({\n    ...role,\n    members: role.members.map((assignment) => assignment.member.address),\n    targets: role.targets.map((target) => ({\n        address: target.address,\n        clearance: Clearance[target.clearance],\n        executionOptions: ExecutionOptions[target.executionOptions],\n        functions: target.functions.map((func) => ({\n            selector: func.selector,\n            executionOptions: ExecutionOptions[func.executionOptions],\n            wildcarded: func.wildcarded,\n            condition: func.condition && JSON.parse(func.condition.json),\n        })),\n    })),\n});\nconst assertNoPagination = (data) => {\n    if (data.length === 1000) {\n        throw new Error(\"Pagination not supported\");\n    }\n};\n","export * from \"./chains\";\nexport * from \"./fetchRolesMod\";\nexport * from \"./fetchRole\";\nexport * from \"./types\";\n","import useAsync from '@/hooks/useAsync'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { useWeb3ReadOnly } from '@/hooks/wallets/web3'\nimport { Errors, logError } from '@/services/exceptions'\nimport { getModuleTransactionId } from '@/services/transactions'\nimport { backOff } from 'exponential-backoff'\nimport { useEffect, useMemo } from 'react'\nimport {\n  type ChainId,\n  chains,\n  fetchRolesMod,\n  Clearance,\n  type RoleSummary,\n  ExecutionOptions,\n  Status,\n} from 'zodiac-roles-deployments'\nimport {\n  OperationType,\n  type Transaction,\n  type MetaTransactionData,\n  type SafeTransaction,\n} from '@safe-global/safe-core-sdk-types'\nimport { type JsonRpcProvider } from 'ethers'\nimport { KnownContracts, getModuleInstance } from '@gnosis.pm/zodiac'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { useHasFeature } from '@/hooks/useChains'\nimport { FEATURES } from '@/utils/chains'\nimport { encodeMultiSendData } from '@safe-global/protocol-kit'\nimport { Multi_send__factory } from '@/types/contracts'\nimport { decodeMultiSendData } from '@safe-global/protocol-kit/dist/src/utils'\n\nconst ROLES_V2_SUPPORTED_CHAINS = Object.keys(chains)\nconst multiSendInterface = Multi_send__factory.createInterface()\n\n/**\n * Turns a Safe Transaction into a set of meta transactions, unbundling multisend calls\n */\nexport const useMetaTransactions = (safeTx?: SafeTransaction): MetaTransactionData[] => {\n  const safeTxData = safeTx?.data\n  return useMemo(() => {\n    if (!safeTxData) return []\n\n    const metaTx: MetaTransactionData = {\n      to: safeTxData.to,\n      value: safeTxData.value,\n      data: safeTxData.data,\n      operation: safeTxData.operation,\n    }\n\n    if (metaTx.operation === OperationType.DelegateCall) {\n      // try decoding as multisend\n      try {\n        const baseTransactions = decodeMultiSendData(metaTx.data)\n        if (baseTransactions.length > 0) {\n          return baseTransactions.map((tx) => ({ ...tx, operation: OperationType.Call }))\n        }\n      } catch (e) {}\n    }\n\n    return [metaTx]\n  }, [safeTxData])\n}\n\n/**\n * Returns all Zodiac Roles Modifiers v2 instances that are enabled and correctly configured on this Safe\n */\nexport const useRolesMods = () => {\n  const { safe } = useSafeInfo()\n  const isFeatureEnabled = useHasFeature(FEATURES.ZODIAC_ROLES)\n\n  const [data] = useAsync(async () => {\n    if (!ROLES_V2_SUPPORTED_CHAINS.includes(safe.chainId) || !isFeatureEnabled) return []\n\n    const safeModules = safe.modules || []\n    const rolesMods = await Promise.all(\n      safeModules.map((address) =>\n        fetchRolesMod({ address: address.value as `0x${string}`, chainId: parseInt(safe.chainId) as ChainId }),\n      ),\n    )\n\n    return rolesMods.filter(\n      (mod): mod is Exclude<typeof mod, null> =>\n        mod !== null &&\n        mod.target === safe.address.value.toLowerCase() &&\n        mod.avatar === safe.address.value.toLowerCase() &&\n        mod.roles.length > 0,\n    )\n  }, [safe, isFeatureEnabled])\n\n  return data\n}\n\nconst KNOWN_MULTISEND_ADDRESSES = [\n  '0x38869bf66a61cf6bdb996a6ae40d5853fd43b526', // MultiSend 1.4.1\n  '0xa238cbeb142c10ef7ad8442c6d1f9e89e07e7761', // MultiSend 1.3.0\n  '0x998739bfdaadde7c933b942a68053933098f9eda', // MultiSend 1.3.0 alternative\n  '0x8d29be29923b68abfdd21e541b9374737b49cdad', // MultiSend 1.1.1\n]\nconst KNOWN_MULTISEND_CALL_ONLY_ADDRESSES = [\n  '0x9641d764fc13c8b624c04430c7356c1c7c8102e2', // MultiSendCallOnly 1.4.1\n  '0x40a2accbd92bca938b02010e17a5b8929b49130d', // MultiSendCallOnly 1.3.0\n  '0xa1dabef33b3b82c7814b6d82a79e50f4ac44102b', // MultiSendCallOnly 1.3.0 alternative\n]\n\nexport interface Role {\n  modAddress: `0x${string}`\n  roleKey: `0x${string}`\n  multiSend?: `0x${string}`\n  status: Status | null\n}\n\n/**\n * Returns a list of roles mod address + role key assigned to the connected wallet.\n * For each role, checks if the role allows the given meta transaction and returns the status.\n */\nexport const useRoles = (safeTx?: SafeTransaction) => {\n  const metaTransactions = useMetaTransactions(safeTx)\n  const rolesMods = useRolesMods()\n  const wallet = useWallet()\n  const walletAddress = wallet?.address.toLowerCase() as undefined | `0x${string}`\n\n  // find all roles assigned to the connected wallet, statically check if they allow the given meta transaction\n  const potentialRoles = useMemo(() => {\n    const result: Role[] = []\n    if (metaTransactions.length === 0) return result\n\n    if (walletAddress && rolesMods) {\n      for (const rolesMod of rolesMods) {\n        const multiSend = rolesMod.multiSendAddresses.find((addr) => KNOWN_MULTISEND_ADDRESSES.includes(addr))\n        const multiSendCallOnly = rolesMod.multiSendAddresses.find((addr) =>\n          KNOWN_MULTISEND_CALL_ONLY_ADDRESSES.includes(addr),\n        )\n\n        for (const role of rolesMod.roles) {\n          if (role.members.includes(walletAddress)) {\n            const statuses = metaTransactions.map((metaTx) => checkPermissions(role, metaTx))\n            result.push({\n              modAddress: rolesMod.address,\n              roleKey: role.key,\n              multiSend: metaTransactions.some((metaTx) => metaTx.operation === OperationType.DelegateCall)\n                ? multiSend\n                : multiSendCallOnly,\n              status:\n                statuses.find((status) => status !== Status.Ok && status !== null) ||\n                statuses.find((status) => status !== Status.Ok) ||\n                Status.Ok,\n            })\n          }\n        }\n      }\n    }\n\n    return result\n  }, [rolesMods, walletAddress, metaTransactions])\n  const web3ReadOnly = useWeb3ReadOnly()\n\n  // if the static check is inconclusive (status: null), evaluate the condition through a test call\n  const [dynamicallyCheckedPotentialRoles] = useAsync(\n    () =>\n      Promise.all(\n        potentialRoles.map(async (role: Role) => {\n          if (role.status === null && walletAddress && web3ReadOnly) {\n            role.status = await checkCondition(role, metaTransactions, walletAddress, web3ReadOnly)\n          }\n          return role\n        }),\n      ),\n    [potentialRoles, metaTransactions, walletAddress, web3ReadOnly],\n  )\n\n  // Return the statically checked roles while the dynamic checks are still pending\n  return dynamicallyCheckedPotentialRoles || potentialRoles\n}\n\nexport const findAllowingRole = (roles: Role[]): Role | undefined => roles.find((role) => role.status === Status.Ok)\n\nexport const findMostLikelyRole = (roles: Role[]): Role | undefined =>\n  findAllowingRole(roles) ||\n  roles.find((role) => role.status !== Status.TargetAddressNotAllowed && role.status !== Status.FunctionNotAllowed) ||\n  roles.find((role) => role.status !== Status.TargetAddressNotAllowed) ||\n  roles[0]\n\n/**\n * Returns the status of the permission check, `null` if it depends on the condition evaluation.\n */\nconst checkPermissions = (role: RoleSummary, metaTx: MetaTransactionData): Status | null => {\n  const target = role.targets.find((t) => t.address === metaTx.to.toLowerCase())\n  if (!target) return Status.TargetAddressNotAllowed\n\n  if (target.clearance === Clearance.Target) {\n    // all calls to the target are allowed\n    return checkExecutionOptions(target.executionOptions, metaTx)\n  }\n\n  if (target.clearance === Clearance.Function) {\n    // check if the function is allowed\n    const selector = metaTx.data.slice(0, 10) as `0x${string}`\n    const func = target.functions.find((f) => f.selector === selector)\n\n    if (func) {\n      const execOptionsStatus = checkExecutionOptions(func.executionOptions, metaTx)\n      if (execOptionsStatus !== Status.Ok) return execOptionsStatus\n      return func.wildcarded ? Status.Ok : null // wildcarded means there's no condition set\n    }\n  }\n\n  return Status.FunctionNotAllowed\n}\n\nconst checkExecutionOptions = (execOptions: ExecutionOptions, metaTx: MetaTransactionData): Status => {\n  const isSend = BigInt(metaTx.value || '0') > 0n\n  const isDelegateCall = metaTx.operation === OperationType.DelegateCall\n\n  if (isSend && execOptions !== ExecutionOptions.Send && execOptions !== ExecutionOptions.Both) {\n    return Status.SendNotAllowed\n  }\n  if (isDelegateCall && execOptions !== ExecutionOptions.DelegateCall && execOptions !== ExecutionOptions.Both) {\n    return Status.DelegateCallNotAllowed\n  }\n\n  return Status.Ok\n}\n\nexport const useExecuteThroughRole = ({\n  role,\n  metaTransactions,\n}: {\n  role?: Role\n  metaTransactions: MetaTransactionData[]\n}) => {\n  const web3ReadOnly = useWeb3ReadOnly()\n  const wallet = useWallet()\n  const walletAddress = wallet?.address.toLowerCase() as undefined | `0x${string}`\n\n  return useMemo(\n    () =>\n      role && walletAddress && web3ReadOnly\n        ? encodeExecuteThroughRole(role, metaTransactions, walletAddress, web3ReadOnly)\n        : undefined,\n    [role, metaTransactions, walletAddress, web3ReadOnly],\n  )\n}\n\nconst encodeMetaTransactions = (role: Role, metaTransactions: MetaTransactionData[]): MetaTransactionData => {\n  if (metaTransactions.length === 0) {\n    throw new Error('No meta transactions to encode')\n  }\n  if (metaTransactions.length === 1) {\n    return metaTransactions[0]\n  } else {\n    const to = role.multiSend || KNOWN_MULTISEND_ADDRESSES[0]\n\n    return {\n      to,\n      value: '0',\n      data: multiSendInterface.encodeFunctionData('multiSend', [encodeMultiSendData(metaTransactions)]),\n      operation: OperationType.DelegateCall,\n    }\n  }\n}\n\nconst encodeExecuteThroughRole = (\n  role: Role,\n  metaTransactions: MetaTransactionData[],\n  from: `0x${string}`,\n  provider: JsonRpcProvider,\n): Transaction => {\n  const combinedMetaTx = encodeMetaTransactions(role, metaTransactions)\n\n  const rolesModifier = getModuleInstance(KnownContracts.ROLES_V2, role.modAddress, provider)\n  const data = rolesModifier.interface.encodeFunctionData('execTransactionWithRole', [\n    combinedMetaTx.to,\n    BigInt(combinedMetaTx.value),\n    combinedMetaTx.data,\n    combinedMetaTx.operation || 0,\n    role.roleKey,\n    true,\n  ])\n\n  return {\n    to: role.modAddress,\n    data,\n    value: '0',\n    from,\n  }\n}\n\nconst checkCondition = async (\n  role: Role,\n  metaTransactions: MetaTransactionData[],\n  from: `0x${string}`,\n  provider: JsonRpcProvider,\n) => {\n  const combinedMetaTx = encodeMetaTransactions(role, metaTransactions)\n\n  const rolesModifier = getModuleInstance(KnownContracts.ROLES_V2, role.modAddress, provider)\n  try {\n    await rolesModifier.execTransactionWithRole.estimateGas(\n      combinedMetaTx.to,\n      BigInt(combinedMetaTx.value),\n      combinedMetaTx.data,\n      combinedMetaTx.operation || 0,\n      role.roleKey,\n      false,\n      { from },\n    )\n\n    return Status.Ok\n  } catch (e: any) {\n    const error = rolesModifier.interface.getError(e.data.slice(0, 10))\n    if (error === null || error.name !== 'ConditionViolation') {\n      console.error('Unexpected error in condition check', error, e.data, e)\n      return null\n    }\n\n    // status is a BigInt, convert it to enum\n    const { status } = rolesModifier.interface.decodeErrorResult(error, e.data)\n    return Number(status) as Status\n  }\n}\n\nexport const useGasLimit = (\n  tx?: Transaction,\n): {\n  gasLimit?: bigint\n  gasLimitError?: Error\n  gasLimitLoading: boolean\n} => {\n  const web3ReadOnly = useWeb3ReadOnly()\n\n  const [gasLimit, gasLimitError, gasLimitLoading] = useAsync<bigint | undefined>(async () => {\n    if (!web3ReadOnly || !tx) return\n\n    return web3ReadOnly.estimateGas(tx)\n  }, [web3ReadOnly, tx])\n\n  useEffect(() => {\n    if (gasLimitError) {\n      logError(Errors._612, gasLimitError.message)\n    }\n  }, [gasLimitError])\n\n  return { gasLimit, gasLimitError, gasLimitLoading }\n}\n\nexport const pollModuleTransactionId = async (\n  chainId: string,\n  safeAddress: string,\n  txHash: string,\n): Promise<string> => {\n  // exponential delay between attempts for around 4 min\n  return backOff(() => getModuleTransactionId(chainId, safeAddress, txHash), {\n    startingDelay: 750,\n    maxDelay: 20000,\n    numOfAttempts: 19,\n    retry: (e: any) => {\n      console.info('waiting for transaction-service to index the module transaction', e)\n      return true\n    },\n  })\n}\n","/**\n *  About bytes32 strings...\n *\n *  @_docloc: api/utils:Bytes32 Strings\n */\nimport { getBytes, toUtf8Bytes, toUtf8String, zeroPadBytes } from \"../utils/index.js\";\n/**\n *  Encodes %%text%% as a Bytes32 string.\n */\nexport function encodeBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return zeroPadBytes(bytes, 32);\n}\n/**\n *  Encodes the Bytes32-encoded %%bytes%% into a string.\n */\nexport function decodeBytes32String(_bytes) {\n    const data = getBytes(_bytes, \"bytes\");\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","import useWalletCanPay from '@/hooks/useWalletCanPay'\nimport madProps from '@/utils/mad-props'\nimport { type ReactElement, type SyntheticEvent, useContext, useState } from 'react'\nimport { CircularProgress, Box, Button, CardActions, Divider, Typography } from '@mui/material'\n\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport { trackError, Errors } from '@/services/exceptions'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { getTxOptions } from '@/utils/transactions'\nimport CheckWallet from '@/components/common/CheckWallet'\n\nimport type { SignOrExecuteProps } from '../SignOrExecuteForm'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport { TxModalContext } from '@/components/tx-flow'\nimport { SuccessScreenFlow } from '@/components/tx-flow/flows'\nimport AdvancedParams, { useAdvancedParams } from '../../AdvancedParams'\nimport { asError } from '@/services/exceptions/utils'\nimport { isWalletRejection } from '@/utils/wallets'\n\nimport css from '../styles.module.css'\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport { TxSecurityContext } from '../../security/shared/TxSecurityContext'\n\nimport WalletRejectionError from '@/components/tx/SignOrExecuteForm/WalletRejectionError'\nimport { pollModuleTransactionId, useExecuteThroughRole, useGasLimit, useMetaTransactions, type Role } from './hooks'\nimport { decodeBytes32String } from 'ethers'\nimport useOnboard from '@/hooks/wallets/useOnboard'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { assertOnboard, assertWallet } from '@/utils/helpers'\nimport { dispatchModuleTxExecution } from '@/services/tx/tx-sender'\nimport { Status } from 'zodiac-roles-deployments'\n\nconst Role = ({ children }: { children: string }) => {\n  let humanReadableRoleKey = children\n  try {\n    humanReadableRoleKey = decodeBytes32String(children)\n  } catch (e) {}\n\n  return <span className={css.roleChip}>{humanReadableRoleKey}</span>\n}\n\nexport const ExecuteThroughRoleForm = ({\n  safeTx,\n  role,\n  onSubmit,\n  disableSubmit = false,\n  txSecurity,\n}: SignOrExecuteProps & {\n  safeTx?: SafeTransaction\n  safeTxError?: Error\n  role: Role\n  txSecurity: ReturnType<typeof useTxSecurityContext>\n}): ReactElement => {\n  const currentChain = useCurrentChain()\n  const onboard = useOnboard()\n  const wallet = useWallet()\n  const { safe } = useSafeInfo()\n\n  const chainId = currentChain?.chainId || '1'\n\n  const [isPending, setIsPending] = useState<boolean>(false)\n  const [isRejectedByUser, setIsRejectedByUser] = useState<boolean>(false)\n  const [submitError, setSubmitError] = useState<Error | undefined>()\n\n  const { setTxFlow } = useContext(TxModalContext)\n  const { needsRiskConfirmation, isRiskConfirmed, setIsRiskIgnored } = txSecurity\n\n  const permissionsError = role.status !== null ? PermissionsErrorMessage[role.status] : null\n  const metaTransactions = useMetaTransactions(safeTx)\n  const multiSendImpossible = metaTransactions.length > 1 && !role.multiSend\n\n  // Wrap call, routing it through the Roles mod with the allowing role\n  const txThroughRole = useExecuteThroughRole({\n    role: role.status === Status.Ok && !multiSendImpossible ? role : undefined,\n    metaTransactions,\n  })\n\n  // Estimate gas limit\n  const { gasLimit, gasLimitError } = useGasLimit(txThroughRole)\n  const [advancedParams, setAdvancedParams] = useAdvancedParams(gasLimit)\n\n  // On form submit\n  const handleSubmit = async (e: SyntheticEvent) => {\n    e.preventDefault()\n\n    if (needsRiskConfirmation && !isRiskConfirmed) {\n      setIsRiskIgnored(true)\n      return\n    }\n\n    assertWallet(wallet)\n    assertOnboard(onboard)\n\n    setIsRejectedByUser(false)\n    setIsPending(true)\n    setSubmitError(undefined)\n    setIsRejectedByUser(false)\n\n    if (!txThroughRole) {\n      throw new Error('Execution through role is not possible')\n    }\n\n    const txOptions = getTxOptions(advancedParams, currentChain)\n\n    let txHash: string\n    try {\n      txHash = await dispatchModuleTxExecution({ ...txThroughRole, ...txOptions }, wallet.provider, safe.address.value)\n    } catch (_err) {\n      const err = asError(_err)\n      if (isWalletRejection(err)) {\n        setIsRejectedByUser(true)\n      } else {\n        trackError(Errors._815, err)\n        setSubmitError(err)\n      }\n      setIsPending(false)\n      return\n    }\n\n    // On success, forward to the success screen, initially without a txId\n    setTxFlow(<SuccessScreenFlow txHash={txHash} />, undefined, false)\n\n    // Wait for module tx to be indexed\n    const transactionService = currentChain?.transactionService\n    if (!transactionService) {\n      throw new Error('Transaction service not found')\n    }\n    const txId = await pollModuleTransactionId(chainId, safe.address.value, txHash)\n    onSubmit?.(txId, true)\n\n    // Update the success screen so it shows a link to the transaction\n    setTxFlow(<SuccessScreenFlow txId={txId} />, undefined, false)\n  }\n\n  const walletCanPay = useWalletCanPay({\n    gasLimit,\n    maxFeePerGas: advancedParams.maxFeePerGas,\n  })\n\n  const submitDisabled = !txThroughRole || isPending || disableSubmit || (needsRiskConfirmation && !isRiskConfirmed)\n\n  return (\n    <>\n      <Divider className={commonCss.nestedDivider} sx={{ pt: 1 }} />\n\n      <form onSubmit={handleSubmit}>\n        {!permissionsError && (\n          <>\n            <Typography sx={{ mb: 2 }}>\n              Your <Role>{role.roleKey}</Role> role allows you to execute this transaction without the confirmations of\n              other owners.\n            </Typography>\n\n            <div className={css.params}>\n              <AdvancedParams\n                willExecute\n                params={advancedParams}\n                recommendedGasLimit={gasLimit}\n                onFormSubmit={setAdvancedParams}\n                gasLimitError={gasLimitError}\n              />\n            </div>\n          </>\n        )}\n\n        {permissionsError && (\n          <Box mb={2}>\n            <Typography sx={{ mb: 2 }}>\n              You are a member of the <Role>{role.roleKey}</Role> role but it does not allow this transaction.\n            </Typography>\n\n            <ErrorMessage>{permissionsError}</ErrorMessage>\n          </Box>\n        )}\n\n        <Typography variant=\"caption\" display=\"flex\" gap=\"2px\" color=\"text.secondary\" sx={{ mb: 2 }}>\n          Powered by\n          <img src=\"/images/transactions/zodiac-roles.svg\" width={16} height={16} alt=\"Zodiac Roles\" />\n          <span className={css.zodiac}>Zodiac</span>\n        </Typography>\n\n        {multiSendImpossible && (\n          <Box mt={1}>\n            <ErrorMessage>\n              The current configuration of the Zodiac Roles module does not allow executing multiple transactions in\n              batch.\n            </ErrorMessage>\n          </Box>\n        )}\n\n        {!walletCanPay ? (\n          <Box mt={1}>\n            <ErrorMessage level=\"info\">\n              Your connected wallet doesn&apos;t have enough funds to execute this transaction.\n            </ErrorMessage>\n          </Box>\n        ) : (\n          gasLimitError && (\n            <Box mt={1}>\n              <ErrorMessage error={gasLimitError}>\n                This transaction will most likely fail. To save gas costs, avoid creating this transaction.\n              </ErrorMessage>\n            </Box>\n          )\n        )}\n\n        {submitError && (\n          <Box mt={1}>\n            <ErrorMessage error={submitError}>Error submitting the transaction. Please try again.</ErrorMessage>\n          </Box>\n        )}\n\n        {isRejectedByUser && (\n          <Box mt={1}>\n            <WalletRejectionError />\n          </Box>\n        )}\n\n        <Box mt={3}>\n          <Divider className={commonCss.nestedDivider} />\n        </Box>\n\n        <CardActions>\n          {/* Submit button, also available to non-owner role members */}\n          <CheckWallet allowNonOwner checkNetwork={!submitDisabled}>\n            {(isOk) => (\n              <Button\n                data-testid=\"execute-through-role-form-btn\"\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={!isOk || submitDisabled}\n                sx={{ minWidth: '112px' }}\n              >\n                {isPending ? <CircularProgress size={20} /> : 'Execute'}\n              </Button>\n            )}\n          </CheckWallet>\n        </CardActions>\n      </form>\n    </>\n  )\n}\n\nconst useTxSecurityContext = () => useContext(TxSecurityContext)\n\nexport default madProps(ExecuteThroughRoleForm, {\n  txSecurity: useTxSecurityContext,\n})\n\nconst PermissionsErrorMessage: Record<Status, string | null> = {\n  [Status.Ok]: null,\n\n  [Status.DelegateCallNotAllowed]: 'Role is not allowed to delegate call to target address',\n  [Status.TargetAddressNotAllowed]: 'Role is not allowed to call target address',\n  [Status.FunctionNotAllowed]: 'Role is not allowed to call this function on the target address',\n  [Status.SendNotAllowed]: 'Role is not allowed to send to target address',\n  [Status.OrViolation]: 'Condition violation: None of the Or branch conditions are met',\n  [Status.NorViolation]: 'Condition violation: At least one Nor branch condition is met',\n  [Status.ParameterNotAllowed]: 'Condition violation: Parameter value is not allowed',\n  [Status.ParameterLessThanAllowed]: 'Condition violation: Parameter value is less than allowed',\n  [Status.ParameterGreaterThanAllowed]: 'Condition violation: Parameter value is greater than allowed',\n  [Status.ParameterNotAMatch]: 'Condition violation: Parameter value does not match',\n  [Status.NotEveryArrayElementPasses]: 'Condition violation: Not every array element meets the criteria',\n  [Status.NoArrayElementPasses]: 'Condition violation: None of the array elements meet the criteria',\n  [Status.ParameterNotSubsetOfAllowed]: 'Condition violation: Parameter value is not a subset of allowed values',\n  [Status.BitmaskOverflow]: 'Condition violation: Bitmask exceeded value length',\n  [Status.BitmaskNotAllowed]: 'Condition violation: Bitmask does not allow the value',\n  [Status.CustomConditionViolation]: 'Condition violation: Custom condition is not met',\n  [Status.AllowanceExceeded]: 'Condition violation: Allowance is exceeded',\n  [Status.CallAllowanceExceeded]: 'Condition violation: Call allowance is exceeded',\n  [Status.EtherAllowanceExceeded]: 'Condition violation: Ether allowance is exceeded',\n}\n","import { Paper, Typography, Box, Divider, SvgIcon } from '@mui/material'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport type { NarrowConfirmationViewProps } from '../types'\nimport { OwnerList } from '@/components/tx-flow/common/OwnerList'\nimport MinusIcon from '@/public/images/common/minus.svg'\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { SettingsInfoType, type SettingsChange } from '@safe-global/safe-gateway-typescript-sdk'\nimport { ChangeSignerSetupWarning } from '@/features/multichain/components/SignerSetupWarning/ChangeSignerSetupWarning'\nimport { useContext } from 'react'\nimport { SettingsChangeContext } from '@/components/tx-flow/flows/AddOwner/context'\nimport { maybePlural } from '@/utils/formatters'\nimport { UntrustedFallbackHandlerTxAlert } from '@/components/tx/confirmation-views/SettingsChange/UntrustedFallbackHandlerTxAlert'\n\nexport interface SettingsChangeProps extends NarrowConfirmationViewProps {\n  txInfo: SettingsChange\n}\n\nconst SettingsChange: React.FC<SettingsChangeProps> = ({ txInfo: { settingsInfo } }) => {\n  const { safe } = useSafeInfo()\n  const params = useContext(SettingsChangeContext)\n\n  if (!settingsInfo || settingsInfo.type === SettingsInfoType.REMOVE_OWNER) return null\n\n  const shouldShowChangeSigner = 'owner' in settingsInfo || 'newOwner' in params\n  const hasNewOwner = 'newOwner' in params\n  const newSignersLength = safe.owners.length + ('removedOwner' in settingsInfo ? 0 : 1)\n  const setsFallbackHandler = settingsInfo.type === SettingsInfoType.SET_FALLBACK_HANDLER\n\n  return (\n    <>\n      {setsFallbackHandler && <UntrustedFallbackHandlerTxAlert fallbackHandler={settingsInfo.handler.value} />}\n\n      {'oldOwner' in settingsInfo && (\n        <Paper sx={{ backgroundColor: ({ palette }) => palette.warning.background, p: 2 }}>\n          <Typography color=\"text.secondary\" mb={2} display=\"flex\" alignItems=\"center\">\n            <SvgIcon component={MinusIcon} inheritViewBox fontSize=\"small\" sx={{ mr: 1 }} />\n            Previous signer\n          </Typography>\n          <EthHashInfo\n            name={settingsInfo.oldOwner.name}\n            address={settingsInfo.oldOwner.value}\n            shortAddress={false}\n            showCopyButton\n            hasExplorer\n          />\n        </Paper>\n      )}\n\n      {'owner' in settingsInfo && !hasNewOwner && <OwnerList owners={[settingsInfo.owner]} />}\n      {hasNewOwner && <OwnerList owners={[{ name: params.newOwner.name, value: params.newOwner.address }]} />}\n\n      {shouldShowChangeSigner && <ChangeSignerSetupWarning />}\n\n      {'threshold' in settingsInfo && (\n        <>\n          <Divider className={commonCss.nestedDivider} />\n\n          <Box>\n            <Typography variant=\"body2\">Any transaction requires the confirmation of:</Typography>\n            <Typography>\n              <b>{settingsInfo.threshold}</b> out of{' '}\n              <b>\n                {newSignersLength} signer{maybePlural(newSignersLength)}\n              </b>\n            </Typography>\n          </Box>\n        </>\n      )}\n      <Divider className={commonCss.nestedDivider} />\n    </>\n  )\n}\n\nexport default SettingsChange\n","import type { ChangeThreshold, SettingsChange, TransactionInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport { SettingsInfoType, TransactionInfoType } from '@safe-global/safe-gateway-typescript-sdk'\nimport { ConfirmBatchFlow } from '@/components/tx-flow/flows'\nimport { type ReactElement } from 'react'\n\nexport const isSettingsChangeView = (txInfo: TransactionInfo) => txInfo.type === TransactionInfoType.SETTINGS_CHANGE\n\nexport const isConfirmBatchView = (txFlow?: ReactElement) => txFlow?.type === ConfirmBatchFlow\n\nexport const isChangeThresholdView = (\n  txInfo: TransactionInfo,\n): txInfo is SettingsChange & { settingsInfo: ChangeThreshold } =>\n  txInfo.type === TransactionInfoType.SETTINGS_CHANGE && txInfo.settingsInfo?.type === SettingsInfoType.CHANGE_THRESHOLD\n","import { Box, Divider, Typography } from '@mui/material'\nimport React, { useContext } from 'react'\n\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { ChangeThresholdReviewContext } from '@/components/tx-flow/flows/ChangeThreshold/context'\nimport { ChangeSignerSetupWarning } from '@/features/multichain/components/SignerSetupWarning/ChangeSignerSetupWarning'\nimport { type TransactionDetails } from '@safe-global/safe-gateway-typescript-sdk'\nimport { isChangeThresholdView } from '../utils'\nimport { maybePlural } from '@/utils/formatters'\n\ninterface ChangeThresholdProps {\n  txInfo?: TransactionDetails['txInfo']\n}\n\nfunction ChangeThreshold({ txInfo }: ChangeThresholdProps) {\n  const { safe } = useSafeInfo()\n  const { newThreshold } = useContext(ChangeThresholdReviewContext)\n  const threshold = txInfo && isChangeThresholdView(txInfo) && txInfo.settingsInfo?.threshold\n\n  return (\n    <>\n      <ChangeSignerSetupWarning />\n\n      <div>\n        <Typography variant=\"body2\" color=\"text.secondary\" mb={0.5}>\n          Any transaction will require the confirmation of:\n        </Typography>\n\n        <Typography aria-label=\"threshold\">\n          <b>{newThreshold || threshold}</b> out of{' '}\n          <b>\n            {safe.owners.length} signer{maybePlural(safe.owners)}\n          </b>\n        </Typography>\n      </div>\n      <Box\n        sx={{\n          my: 1,\n        }}\n      >\n        <Divider className={commonCss.nestedDivider} />\n      </Box>\n    </>\n  )\n}\n\nexport default ChangeThreshold\n","import BatchTxList from '@/components/batch/BatchSidebar/BatchTxList'\nimport { useDraftBatch } from '@/hooks/useDraftBatch'\n\nfunction BatchTransactions() {\n  const batchTxs = useDraftBatch()\n\n  return <BatchTxList txItems={batchTxs} />\n}\n\nexport default BatchTransactions\n","import ConfirmationOrderHeader, { type InfoBlock } from '@/components/tx/ConfirmationOrder/ConfirmationOrderHeader'\n\nconst SwapTokens = ({ first, second }: { first: InfoBlock; second: InfoBlock }) => {\n  return <ConfirmationOrderHeader blocks={[first, second]} showArrow />\n}\n\nexport default SwapTokens\n","import type { SwapOrderConfirmationView, TwapOrderConfirmationView } from '@safe-global/safe-gateway-typescript-sdk'\nimport { getOrderFeeBps } from '@/features/swap/helpers/utils'\nimport { DataRow } from '@/components/common/Table/DataRow'\nimport { BRAND_NAME, HelpCenterArticle } from '@/config/constants'\nimport { HelpIconTooltip } from '@/features/swap/components/HelpIconTooltip'\nimport MUILink from '@mui/material/Link'\n\nexport const OrderFeeConfirmationView = ({\n  order,\n}: {\n  order: Pick<SwapOrderConfirmationView | TwapOrderConfirmationView, 'fullAppData'>\n}) => {\n  const bps = getOrderFeeBps(order)\n\n  if (Number(bps) === 0) {\n    return null\n  }\n\n  const title = (\n    <>\n      Widget fee{' '}\n      <HelpIconTooltip\n        title={\n          <>\n            The tiered widget fee incurred here is charged by CoW Protocol for the operation of this widget. The fee is\n            automatically calculated into this quote. Part of the fee will contribute to a license fee that supports the\n            Safe Community. Neither the Safe Ecosystem Foundation nor {`${BRAND_NAME}`} operate the CoW Swap Widget\n            and/or CoW Swap.\n            <MUILink href={HelpCenterArticle.SWAP_WIDGET_FEES} target=\"_blank\" rel=\"noopener noreferrer\">\n              Learn more\n            </MUILink>\n          </>\n        }\n      />\n    </>\n  )\n\n  return (\n    <DataRow datatestid=\"widget-fee\" title={title} key=\"widget_fee\">\n      {Number(bps) / 100} %\n    </DataRow>\n  )\n}\n","import { Alert, SvgIcon } from '@mui/material'\nimport InfoOutlinedIcon from '@/public/images/notifications/info.svg'\n\nexport const TwapFallbackHandlerWarning = () => {\n  return (\n    <Alert\n      severity=\"warning\"\n      icon={<SvgIcon component={InfoOutlinedIcon} inheritViewBox color=\"error\" />}\n      sx={{ mb: 1 }}\n    >\n      <b>Enable TWAPs and submit order.</b>\n      {` `}\n      To enable TWAP orders you need to set a custom fallback handler. This software is developed by CoW Swap and Safe\n      will not be responsible for any possible issues with it.\n    </Alert>\n  )\n}\n","import OrderId from '@/features/swap/components/OrderId'\nimport { formatDateTime, formatTimeInWords, getPeriod } from '@/utils/date'\nimport { Fragment, type ReactElement } from 'react'\nimport { DataRow } from '@/components/common/Table/DataRow'\nimport { DataTable } from '@/components/common/Table/DataTable'\nimport { compareAsc } from 'date-fns'\nimport { Alert, Typography } from '@mui/material'\nimport { formatAmount } from '@/utils/formatNumber'\nimport { getLimitPrice, getOrderClass, getSlippageInPercent } from '@/features/swap/helpers/utils'\nimport type { DataDecoded, SwapOrder, SwapTransferOrder, TwapOrder } from '@safe-global/safe-gateway-typescript-sdk'\nimport { StartTimeValue, TransactionInfoType } from '@safe-global/safe-gateway-typescript-sdk'\nimport SwapTokens from '@/features/swap/components/SwapTokens'\nimport AlertIcon from '@/public/images/common/alert.svg'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport css from './styles.module.css'\nimport NamedAddress from '@/components/common/NamedAddressInfo'\nimport { PartDuration } from '@/features/swap/components/SwapOrder/rows/PartDuration'\nimport { PartSellAmount } from '@/features/swap/components/SwapOrder/rows/PartSellAmount'\nimport { PartBuyAmount } from '@/features/swap/components/SwapOrder/rows/PartBuyAmount'\nimport { OrderFeeConfirmationView } from '@/features/swap/components/SwapOrderConfirmationView/OrderFeeConfirmationView'\nimport { isSettingTwapFallbackHandler } from '@/features/swap/helpers/utils'\nimport { TwapFallbackHandlerWarning } from '@/features/swap/components/TwapFallbackHandlerWarning'\n\ntype SwapOrderProps = {\n  order: SwapOrder | SwapTransferOrder | TwapOrder\n  settlementContract: string\n  decodedData?: DataDecoded\n}\n\nexport const SwapOrderConfirmation = ({ order, decodedData, settlementContract }: SwapOrderProps): ReactElement => {\n  const { owner, kind, validUntil, sellToken, buyToken, sellAmount, buyAmount, explorerUrl, receiver } = order\n\n  const isTwapOrder = order.type === TransactionInfoType.TWAP_ORDER\n\n  const limitPrice = getLimitPrice(order)\n  const orderClass = getOrderClass(order)\n  const expires = new Date(validUntil * 1000)\n  const now = new Date()\n\n  const slippage = getSlippageInPercent(order)\n  const isSellOrder = kind === 'sell'\n  const isChangingFallbackHandler = decodedData && isSettingTwapFallbackHandler(decodedData)\n\n  return (\n    <>\n      {isChangingFallbackHandler && <TwapFallbackHandlerWarning />}\n\n      <DataTable\n        header=\"Order details\"\n        rows={[\n          <div key=\"amount\" className={css.amount}>\n            <SwapTokens\n              first={{\n                value: sellAmount,\n                label: isSellOrder ? 'Sell' : 'For at most',\n                tokenInfo: sellToken,\n              }}\n              second={{\n                value: buyAmount,\n                label: isSellOrder ? 'For at least' : 'Buy exactly',\n                tokenInfo: buyToken,\n              }}\n            />\n          </div>,\n\n          <DataRow datatestid=\"limit-price\" key=\"Limit price\" title=\"Limit price\">\n            1 {buyToken.symbol} = {formatAmount(limitPrice)} {sellToken.symbol}\n          </DataRow>,\n\n          compareAsc(now, expires) !== 1 ? (\n            <DataRow datatestid=\"expiry\" key=\"Expiry\" title=\"Expiry\">\n              <Typography>\n                <Typography fontWeight={700} component=\"span\">\n                  {formatTimeInWords(validUntil * 1000)}\n                </Typography>{' '}\n                ({formatDateTime(validUntil * 1000)})\n              </Typography>\n            </DataRow>\n          ) : (\n            <DataRow key=\"Expiry\" title=\"Expiry\">\n              {formatDateTime(validUntil * 1000)}\n            </DataRow>\n          ),\n          orderClass !== 'limit' ? (\n            <DataRow datatestid=\"slippage\" key=\"Slippage\" title=\"Slippage\">\n              {slippage}%\n            </DataRow>\n          ) : (\n            <Fragment key=\"none\" />\n          ),\n          !isTwapOrder ? (\n            <DataRow datatestid=\"order-id\" key=\"Order ID\" title=\"Order ID\">\n              <OrderId orderId={order.uid} href={explorerUrl} />\n            </DataRow>\n          ) : (\n            <></>\n          ),\n          <OrderFeeConfirmationView key=\"SurplusFee\" order={order} />,\n          <DataRow datatestid=\"interact-wth\" key=\"Interact with\" title=\"Interact with\">\n            <NamedAddress address={settlementContract} onlyName hasExplorer shortAddress={false} avatarSize={24} />\n          </DataRow>,\n          receiver && owner !== receiver ? (\n            <>\n              <DataRow datatestid=\"recipient\" key=\"recipient-address\" title=\"Recipient\">\n                <EthHashInfo address={receiver} hasExplorer={true} avatarSize={24} />\n              </DataRow>\n              <div key=\"recipient\">\n                <Alert data-testid=\"recipient-alert\" severity=\"warning\" icon={AlertIcon}>\n                  <Typography variant=\"body2\">\n                    <Typography component=\"span\" sx={{ fontWeight: 'bold' }}>\n                      Order recipient address differs from order owner.\n                    </Typography>{' '}\n                    Double check the address to prevent fund loss.\n                  </Typography>\n                </Alert>\n              </div>\n            </>\n          ) : (\n            <></>\n          ),\n        ]}\n      />\n\n      {isTwapOrder && (\n        <div className={css.partsBlock}>\n          <DataTable\n            rows={[\n              <Typography key=\"title\" variant=\"body1\" className={css.partsBlockTitle}>\n                <strong>\n                  Order will be split in{' '}\n                  <span className={css.numberOfPartsLabel}>{order.numberOfParts} equal parts</span>\n                </strong>\n              </Typography>,\n              <PartSellAmount order={order} addonText=\"per part\" key=\"sell_part\" />,\n              <PartBuyAmount order={order} addonText=\"per part\" key=\"buy_part\" />,\n              <DataRow title=\"Start time\" key=\"Start time\">\n                {order.startTime.startType === StartTimeValue.AT_MINING_TIME && 'Now'}\n                {order.startTime.startType === StartTimeValue.AT_EPOCH && `At block number: ${order.startTime.epoch}`}\n              </DataRow>,\n              <PartDuration order={order} key=\"part_duration\" />,\n              <DataRow title=\"Total duration\" key=\"total_duration\">\n                {getPeriod(+order.timeBetweenParts * +order.numberOfParts)}\n              </DataRow>,\n            ]}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default SwapOrderConfirmation\n","import SwapOrderConfirmation from '@/features/swap/components/SwapOrderConfirmationView'\nimport type { Order } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { NarrowConfirmationViewProps } from '../types'\n\ninterface SwapOrderProps extends NarrowConfirmationViewProps {\n  txInfo: Order\n}\n\nfunction SwapOrder({ txInfo, txData }: SwapOrderProps) {\n  return (\n    <SwapOrderConfirmation\n      order={txInfo}\n      decodedData={txData?.dataDecoded}\n      settlementContract={txData?.to?.value ?? ''}\n    />\n  )\n}\n\nexport default SwapOrder\n","import { Alert, Stack, Typography } from '@mui/material'\nimport FieldsGrid from '@/components/tx/FieldsGrid'\nimport { formatDurationFromMilliseconds } from '@/utils/formatters'\nimport ConfirmationOrderHeader from '@/components/tx/ConfirmationOrder/ConfirmationOrderHeader'\nimport { InfoTooltip } from '@/features/stake/components/InfoTooltip'\nimport type { StakingTxExitInfo } from '@safe-global/safe-gateway-typescript-sdk'\n\ntype StakingOrderConfirmationViewProps = {\n  order: StakingTxExitInfo\n}\n\nconst StakingConfirmationTxExit = ({ order }: StakingOrderConfirmationViewProps) => {\n  const withdrawIn = formatDurationFromMilliseconds(order.estimatedExitTime + order.estimatedWithdrawalTime, [\n    'days',\n    'hours',\n  ])\n\n  return (\n    <Stack\n      sx={{\n        gap: 2,\n      }}\n    >\n      <ConfirmationOrderHeader\n        blocks={[\n          {\n            value: `${order.numValidators} Validators`,\n            label: 'Exit',\n          },\n          {\n            value: order.value,\n            tokenInfo: order.tokenInfo,\n            label: 'Receive',\n          },\n        ]}\n      />\n      <FieldsGrid\n        title={\n          <>\n            Withdraw in\n            <InfoTooltip\n              title={\n                <>\n                  Withdrawal time is the sum of:\n                  <ul>\n                    <li>Time until your validator is successfully exited after the withdraw request</li>\n                    <li>Time for a stake to receive Consensus rewards on the execution layer</li>\n                  </ul>\n                </>\n              }\n            />\n          </>\n        }\n      >\n        Up to {withdrawIn}\n      </FieldsGrid>\n      <Typography\n        variant=\"body2\"\n        sx={{\n          color: 'text.secondary',\n          mt: 2,\n        }}\n      >\n        The selected amount and any rewards will be withdrawn from Dedicated Staking for ETH after the validator exit.\n      </Typography>\n      <Alert severity=\"warning\" sx={{ mb: 1 }}>\n        This transaction is a withdrawal request. After it&apos;s executed, you&apos;ll need to complete a separate\n        withdrawal transaction.\n      </Alert>\n    </Stack>\n  )\n}\n\nexport default StakingConfirmationTxExit\n","import type { StakingTxInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport StakingConfirmationTxDeposit from '@/features/stake/components/StakingConfirmationTx/Deposit'\nimport StakingConfirmationTxExit from '@/features/stake/components/StakingConfirmationTx/Exit'\nimport StakingConfirmationTxWithdraw from '@/features/stake/components/StakingConfirmationTx/Withdraw'\nimport { isStakingTxDepositInfo, isStakingTxExitInfo, isStakingTxWithdrawInfo } from '@/utils/transaction-guards'\n\ntype StakingOrderConfirmationViewProps = {\n  order: StakingTxInfo\n}\n\nconst StrakingConfirmationTx = ({ order }: StakingOrderConfirmationViewProps) => {\n  if (isStakingTxDepositInfo(order)) {\n    return <StakingConfirmationTxDeposit order={order} />\n  }\n\n  if (isStakingTxExitInfo(order)) {\n    return <StakingConfirmationTxExit order={order} />\n  }\n\n  if (isStakingTxWithdrawInfo(order)) {\n    return <StakingConfirmationTxWithdraw order={order} />\n  }\n\n  return null\n}\n\nexport default StrakingConfirmationTx\n","import StrakingConfirmationTx from '@/features/stake/components/StakingConfirmationTx'\nimport type { StakingTxInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { NarrowConfirmationViewProps } from '../types'\n\nexport interface StakingTxProps extends NarrowConfirmationViewProps {\n  txInfo: StakingTxInfo\n}\n\nfunction StakingTx({ txInfo }: StakingTxProps) {\n  return <StrakingConfirmationTx order={txInfo} />\n}\n\nexport default StakingTx\n","import type { ReactNode } from 'react'\nimport { Alert, AlertTitle, Box, Divider, Stack, Typography } from '@mui/material'\nimport semverSatisfies from 'semver/functions/satisfies'\nimport { LATEST_SAFE_VERSION } from '@/config/constants'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { useQueuedTxsLength } from '@/hooks/useTxQueue'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport { maybePlural } from '@/utils/formatters'\nimport madProps from '@/utils/mad-props'\n\nconst QUEUE_WARNING_VERSION = '<1.3.0'\n\nfunction BgBox({ children, light }: { children: ReactNode; light?: boolean }) {\n  return (\n    <Box\n      flex={1}\n      bgcolor={light ? 'background.light' : 'border.background'}\n      p={2}\n      textAlign=\"center\"\n      fontWeight={700}\n      fontSize={18}\n      borderRadius={1}\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport function _UpdateSafe({\n  safeVersion,\n  queueSize,\n  chain,\n}: {\n  safeVersion: string\n  queueSize: string\n  chain: ReturnType<typeof useCurrentChain>\n}) {\n  const showQueueWarning = queueSize && semverSatisfies(safeVersion, QUEUE_WARNING_VERSION)\n  const latestSafeVersion = chain?.recommendedMasterCopyVersion || LATEST_SAFE_VERSION\n\n  return (\n    <>\n      <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n        <BgBox>Current version: {safeVersion}</BgBox>\n        <Box fontSize={28}>→</Box>\n        <BgBox light>New version: {latestSafeVersion}</BgBox>\n      </Stack>\n\n      <Typography>\n        Read about the updates in the new Safe contracts version in the{' '}\n        <ExternalLink href={`https://github.com/safe-global/safe-contracts/releases/tag/v${latestSafeVersion}`}>\n          version {latestSafeVersion} changelog\n        </ExternalLink>\n      </Typography>\n\n      {showQueueWarning && (\n        <Alert severity=\"warning\">\n          <AlertTitle sx={{ fontWeight: 700 }}>This upgrade will invalidate all queued transactions!</AlertTitle>\n          You have {queueSize} unexecuted transaction{maybePlural(parseInt(queueSize))}. Please make sure to execute or\n          delete them before upgrading, otherwise you&apos;ll have to reject or replace them after the upgrade.\n        </Alert>\n      )}\n\n      <Divider sx={{ my: 1, mx: -3 }} />\n    </>\n  )\n}\n\nfunction useSafeVersion() {\n  const { safe } = useSafeInfo()\n  return safe?.version || ''\n}\n\nconst UpdateSafe = madProps(_UpdateSafe, {\n  chain: useCurrentChain,\n  safeVersion: useSafeVersion,\n  queueSize: useQueuedTxsLength,\n})\n\nexport default UpdateSafe\n","import type { TransactionPreview } from '@safe-global/safe-gateway-typescript-sdk'\nimport { type TransactionDetails } from '@safe-global/safe-gateway-typescript-sdk'\nimport DecodedTx from '../DecodedTx'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport {\n  isAnyStakingTxInfo,\n  isCustomTxInfo,\n  isExecTxData,\n  isOnChainConfirmationTxData,\n  isOrderTxInfo,\n  isSafeToL2MigrationTxData,\n  isSafeUpdateTxData,\n  isSwapOrderTxInfo,\n  isTwapOrderTxInfo,\n} from '@/utils/transaction-guards'\nimport { type ReactNode, useContext, useMemo } from 'react'\nimport TxData from '@/components/transactions/TxDetails/TxData'\nimport type { NarrowConfirmationViewProps } from './types'\nimport SettingsChange from './SettingsChange'\nimport ChangeThreshold from './ChangeThreshold'\nimport BatchTransactions from './BatchTransactions'\nimport { TxModalContext } from '@/components/tx-flow'\nimport { isSettingsChangeView, isChangeThresholdView, isConfirmBatchView } from './utils'\nimport { OnChainConfirmation } from '@/components/transactions/TxDetails/TxData/NestedTransaction/OnChainConfirmation'\nimport { ExecTransaction } from '@/components/transactions/TxDetails/TxData/NestedTransaction/ExecTransaction'\nimport { type ReactElement } from 'react'\nimport SwapOrder from './SwapOrder'\nimport StakingTx from './StakingTx'\nimport UpdateSafe from './UpdateSafe'\nimport { MigrateToL2Information } from './MigrateToL2Information'\n\ntype ConfirmationViewProps = {\n  txDetails?: TransactionDetails\n  txPreview?: TransactionPreview\n  safeTx?: SafeTransaction\n  txId?: string\n  isBatch?: boolean\n  isApproval?: boolean\n  isCreation?: boolean\n  showMethodCall?: boolean // @TODO: remove this prop when we migrate all tx types\n  children?: ReactNode\n}\n\nconst getConfirmationViewComponent = ({\n  txInfo,\n  txData,\n  txFlow,\n}: NarrowConfirmationViewProps & { txFlow?: ReactElement }) => {\n  if (isChangeThresholdView(txInfo)) return <ChangeThreshold txInfo={txInfo} />\n\n  if (isConfirmBatchView(txFlow)) return <BatchTransactions />\n\n  if (isSettingsChangeView(txInfo)) return <SettingsChange txInfo={txInfo as SettingsChange} />\n\n  if (isOnChainConfirmationTxData(txData)) return <OnChainConfirmation data={txData} isConfirmationView />\n\n  if (isExecTxData(txData)) return <ExecTransaction data={txData} isConfirmationView />\n\n  if (isSwapOrderTxInfo(txInfo) || isTwapOrderTxInfo(txInfo)) return <SwapOrder txInfo={txInfo} txData={txData} />\n\n  if (isAnyStakingTxInfo(txInfo)) return <StakingTx txInfo={txInfo} />\n\n  if (isCustomTxInfo(txInfo) && isSafeUpdateTxData(txData)) return <UpdateSafe />\n\n  if (isCustomTxInfo(txInfo) && isSafeToL2MigrationTxData(txData)) {\n    return <MigrateToL2Information variant=\"queue\" txData={txData} />\n  }\n\n  return null\n}\n\nconst ConfirmationView = ({ safeTx, txPreview, txDetails, ...props }: ConfirmationViewProps) => {\n  const { txId } = props\n  const { txFlow } = useContext(TxModalContext)\n  const details = txDetails ?? txPreview\n\n  const ConfirmationViewComponent = useMemo(() => {\n    return details\n      ? getConfirmationViewComponent({\n          txInfo: details.txInfo,\n          txData: details.txData,\n          txFlow,\n        })\n      : undefined\n  }, [details, txFlow])\n\n  const showTxDetails =\n    txId &&\n    !props.isCreation &&\n    txDetails &&\n    !isCustomTxInfo(txDetails.txInfo) &&\n    !isAnyStakingTxInfo(txDetails.txInfo) &&\n    !isOrderTxInfo(txDetails.txInfo)\n\n  return (\n    <>\n      {ConfirmationViewComponent ||\n        (showTxDetails && details && (\n          <TxData txData={details?.txData} txInfo={details?.txInfo} txDetails={txDetails} imitation={false} trusted />\n        ))}\n\n      {props.children}\n\n      <DecodedTx\n        tx={safeTx}\n        txDetails={txDetails}\n        txData={details?.txData}\n        txInfo={details?.txInfo}\n        showMultisend={!props.isBatch}\n        showMethodCall={props.showMethodCall && !ConfirmationViewComponent && !showTxDetails && !props.isApproval}\n      />\n    </>\n  )\n}\n\nexport default ConfirmationView\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgSignature = function SvgSignature(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 17,\n    viewBox: \"0 0 16 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.85378 11.9828C3.46711 12.4528 3.09378 12.9162 2.70711 13.3728C2.55378 13.5562 2.37711 13.7195 2.20711 13.8895C2.00711 14.0895 1.79378 14.1062 1.63044 13.9428C1.47044 13.7828 1.49044 13.5595 1.68711 13.3662C2.31378 12.7562 2.86044 12.0862 3.33711 11.3528C3.40378 11.2495 3.40044 11.1762 3.34378 11.0728C2.72711 9.92618 2.11711 8.77951 1.64044 7.56618C1.34044 6.79951 1.07044 6.01951 1.01711 5.18951C0.997109 4.85284 1.01044 4.49618 1.08711 4.16951C1.23378 3.53618 1.62711 3.09618 2.28378 2.97618C2.97378 2.84951 3.56044 3.07951 3.96711 3.65618C4.62378 4.59284 5.01378 5.63951 5.15378 6.77618C5.34711 8.31951 5.06044 9.76951 4.32378 11.1362C4.29711 11.1862 4.30711 11.2728 4.33044 11.3295C4.38711 11.4528 4.46044 11.5662 4.53044 11.6828C4.76044 12.0662 5.18378 12.1262 5.50378 11.8062C5.88378 11.4228 6.27044 11.0395 6.62378 10.6295C7.32044 9.81951 8.43044 10.0495 8.89378 10.8962C9.10044 11.2728 9.50044 11.3428 9.82711 11.0628C10.0138 10.9028 10.1938 10.7395 10.3804 10.5795C11.1271 9.93284 12.1904 10.2028 12.5371 11.1262C12.6571 11.4428 12.8304 11.5662 13.1771 11.5662C13.6504 11.5662 14.1238 11.5662 14.6004 11.5662C14.9004 11.5662 15.0804 11.8362 14.9638 12.0895C14.9004 12.2228 14.7871 12.3028 14.6438 12.3028C14.0904 12.3062 13.5371 12.3262 12.9871 12.2895C12.4171 12.2528 12.0438 11.9195 11.8504 11.3828C11.7371 11.0728 11.5071 10.9162 11.2038 10.9695C11.0938 10.9895 10.9771 11.0495 10.8871 11.1228C10.6971 11.2695 10.5204 11.4328 10.3438 11.5962C9.61044 12.2695 8.63378 11.9662 8.22044 11.2295C8.12044 11.0528 7.99378 10.9162 7.78711 10.8795C7.55711 10.8395 7.37044 10.9162 7.21378 11.0862C6.84044 11.4862 6.45378 11.8728 6.08378 12.2762C5.40378 13.0162 4.31378 12.8362 3.88044 12.0295C3.87044 12.0128 3.85711 11.9962 3.85044 11.9862L3.85378 11.9828ZM3.81711 10.4295C3.84044 10.4095 3.85044 10.4028 3.85378 10.3962C3.86378 10.3795 3.87378 10.3595 3.88044 10.3395C4.81044 8.17284 4.64711 6.09284 3.38378 4.10618C3.16711 3.76618 2.83044 3.63284 2.43711 3.69951C2.04378 3.76284 1.86378 4.05618 1.78044 4.40951C1.66711 4.88951 1.74378 5.36284 1.86044 5.82951C2.26711 7.46284 3.05044 8.93951 3.81711 10.4328V10.4295Z\",\n    fill: \"currentColor\"\n  })));\n};\nexport default SvgSignature;","import {\n  Box,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  type SelectChangeEvent,\n} from '@mui/material'\nimport { useNestedSafeOwners } from '@/hooks/useNestedSafeOwners'\nimport { useWalletContext } from '@/hooks/wallets/useWallet'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { useCallback, useContext, useMemo } from 'react'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport TxCard from '@/components/tx-flow/common/TxCard'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport SignatureIcon from '@/public/images/transactions/signature.svg'\n\nimport css from './styles.module.css'\nimport { sameAddress } from '@/utils/addresses'\nimport { SafeTxContext } from '@/components/tx-flow/SafeTxProvider'\nimport { MODALS_EVENTS, trackEvent } from '@/services/analytics'\nimport { useIsNestedSafeOwner } from '@/hooks/useIsNestedSafeOwner'\n\nexport const SignerForm = ({ willExecute }: { willExecute?: boolean }) => {\n  const { signer, setSignerAddress, connectedWallet: wallet } = useWalletContext() ?? {}\n  const nestedSafeOwners = useNestedSafeOwners()\n  const signerAddress = signer?.address\n  const { safe } = useSafeInfo()\n  const { safeTx } = useContext(SafeTxContext)\n  const isNestedOwner = useIsNestedSafeOwner()\n\n  const onChange = (event: SelectChangeEvent<string>) => {\n    trackEvent(MODALS_EVENTS.CHANGE_SIGNER)\n    setSignerAddress?.(event.target.value)\n  }\n\n  const isOptionEnabled = useCallback(\n    (address: string) => {\n      if (!safeTx) {\n        return true\n      }\n\n      if (safeTx.signatures.size < safe.threshold) {\n        const signers = Array.from(safeTx.signatures.keys())\n        return !signers.some((key) => sameAddress(key, address))\n      }\n\n      return true\n    },\n    [safeTx, safe.threshold],\n  )\n\n  const options = useMemo(() => {\n    if (!wallet) {\n      return []\n    }\n    const owners = new Set(nestedSafeOwners ?? [])\n    const isFullySigned = safeTx ? safeTx.signatures.size >= safe.threshold : false\n\n    if ((willExecute && isFullySigned) || safe.owners.some((owner) => sameAddress(owner.value, wallet.address))) {\n      owners.add(wallet.address)\n    }\n\n    return Array.from(owners)\n  }, [nestedSafeOwners, safe.owners, safe.threshold, safeTx, wallet, willExecute])\n\n  if (!wallet || !isNestedOwner) {\n    return null\n  }\n\n  return (\n    <TxCard>\n      <Typography variant=\"h5\" display=\"flex\" gap={1} alignItems=\"center\">\n        <SvgIcon component={SignatureIcon} inheritViewBox fontSize=\"small\" />\n        {willExecute ? 'Execute' : 'Sign'} with\n        <Tooltip\n          title={`Your connected wallet controls other Safe Accounts, which can sign this transaction. You can select which Account to ${\n            willExecute ? 'execute' : 'sign'\n          } with.`}\n          arrow\n          placement=\"top\"\n        >\n          <SvgIcon component={InfoIcon} inheritViewBox color=\"border\" fontSize=\"small\" />\n        </Tooltip>\n      </Typography>\n\n      <Box display=\"flex\" alignItems=\"center\" gap={1}>\n        <FormControl fullWidth size=\"medium\">\n          <InputLabel id=\"signer-label\">Signer Account</InputLabel>\n          <Select\n            className={css.signerForm}\n            labelId=\"signer-label\"\n            label=\"Signer account\"\n            fullWidth\n            onChange={onChange}\n            value={signerAddress ?? options.filter(isOptionEnabled)[0]}\n          >\n            {options?.map((owner) => (\n              <MenuItem key={owner} value={owner} disabled={!isOptionEnabled(owner)}>\n                <EthHashInfo address={owner} avatarSize={32} onlyName copyAddress={false} />\n                {!isOptionEnabled(owner) && (\n                  <Typography variant=\"caption\" component=\"span\" className={css.disabledPill}>\n                    Already signed\n                  </Typography>\n                )}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Box>\n    </TxCard>\n  )\n}\n","import { trackEvent } from '@/services/analytics'\nimport { TX_EVENTS } from '@/services/analytics/events/transactions'\nimport { getTransactionTrackingType } from '@/services/analytics/tx-tracking'\nimport { isNestedConfirmationTxInfo } from '@/utils/transaction-guards'\nimport type { TransactionDetails } from '@safe-global/safe-gateway-typescript-sdk'\n\nfunction getCreationEvent(args: { isParentSigner: boolean; isRoleExecution: boolean; isProposerCreation: boolean }) {\n  if (args.isParentSigner) {\n    return TX_EVENTS.CREATE_VIA_PARENT\n  }\n  if (args.isRoleExecution) {\n    return TX_EVENTS.CREATE_VIA_ROLE\n  }\n  if (args.isProposerCreation) {\n    return TX_EVENTS.CREATE_VIA_PROPOSER\n  }\n  return TX_EVENTS.CREATE\n}\n\nfunction getConfirmationEvent(args: { isParentSigner: boolean; isNestedConfirmation: boolean }) {\n  if (args.isParentSigner) {\n    return TX_EVENTS.CONFIRM_VIA_PARENT\n  }\n  if (args.isNestedConfirmation) {\n    return TX_EVENTS.CONFIRM_IN_PARENT\n  }\n  return TX_EVENTS.CONFIRM\n}\n\nfunction getExecutionEvent(args: { isParentSigner: boolean; isNestedConfirmation: boolean; isRoleExecution: boolean }) {\n  if (args.isParentSigner) {\n    return TX_EVENTS.EXECUTE_VIA_PARENT\n  }\n  if (args.isNestedConfirmation) {\n    return TX_EVENTS.EXECUTE_IN_PARENT\n  }\n  if (args.isRoleExecution) {\n    return TX_EVENTS.EXECUTE_VIA_ROLE\n  }\n  return TX_EVENTS.EXECUTE\n}\n\nexport function trackTxEvents(\n  details: TransactionDetails | undefined,\n  isCreation: boolean,\n  isExecuted: boolean,\n  isRoleExecution: boolean,\n  isProposerCreation: boolean,\n  isParentSigner: boolean,\n  origin?: string,\n) {\n  const isNestedConfirmation = !!details && isNestedConfirmationTxInfo(details.txInfo)\n\n  const creationEvent = getCreationEvent({ isParentSigner, isRoleExecution, isProposerCreation })\n  const confirmationEvent = getConfirmationEvent({ isParentSigner, isNestedConfirmation })\n  const executionEvent = getExecutionEvent({ isParentSigner, isNestedConfirmation, isRoleExecution })\n\n  const event = (() => {\n    if (isCreation) {\n      return creationEvent\n    }\n    if (isExecuted) {\n      return executionEvent\n    }\n    return confirmationEvent\n  })()\n\n  const txType = getTransactionTrackingType(details, origin)\n  trackEvent({ ...event, label: txType })\n\n  // Immediate execution on creation\n  if (isCreation && isExecuted) {\n    trackEvent({ ...executionEvent, label: txType })\n  }\n}\n","import ProposerForm from '@/components/tx/SignOrExecuteForm/ProposerForm'\nimport CounterfactualForm from '@/features/counterfactual/CounterfactualForm'\nimport { useIsWalletProposer } from '@/hooks/useProposers'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { type ReactElement, type ReactNode, useState, useContext, useCallback } from 'react'\nimport madProps from '@/utils/mad-props'\nimport ExecuteCheckbox from '../ExecuteCheckbox'\nimport { useImmediatelyExecutable, useValidateNonce } from './hooks'\nimport ExecuteForm from './ExecuteForm'\nimport SignForm from './SignForm'\nimport { SafeTxContext } from '@/components/tx-flow/SafeTxProvider'\nimport ErrorMessage from '../ErrorMessage'\nimport TxChecks from './TxChecks'\nimport TxCard from '@/components/tx-flow/common/TxCard'\nimport ConfirmationTitle, { ConfirmationTitleTypes } from '@/components/tx/SignOrExecuteForm/ConfirmationTitle'\nimport { useAppSelector } from '@/store'\nimport { selectSettings } from '@/store/settingsSlice'\nimport UnknownContractError from './UnknownContractError'\nimport { ErrorBoundary } from '@sentry/react'\nimport ApprovalEditor from '../ApprovalEditor'\nimport { isDelegateCall } from '@/services/tx/tx-sender/sdk'\nimport useChainId from '@/hooks/useChainId'\nimport ExecuteThroughRoleForm from './ExecuteThroughRoleForm'\nimport { findAllowingRole, findMostLikelyRole, useRoles } from './ExecuteThroughRoleForm/hooks'\nimport useIsSafeOwner from '@/hooks/useIsSafeOwner'\nimport { BlockaidBalanceChanges } from '../security/blockaid/BlockaidBalanceChange'\nimport { Blockaid } from '../security/blockaid'\nimport { useLazyGetTransactionDetailsQuery } from '@/store/api/gateway'\nimport { useApprovalInfos } from '../ApprovalEditor/hooks/useApprovalInfos'\nimport type { TransactionDetails, TransactionPreview } from '@safe-global/safe-gateway-typescript-sdk'\nimport NetworkWarning from '@/components/new-safe/create/NetworkWarning'\nimport ConfirmationView from '../confirmation-views'\nimport { SignerForm } from './SignerForm'\nimport { useSigner } from '@/hooks/wallets/useWallet'\nimport { trackTxEvents } from './tracking'\nimport { TxNoteForm, encodeTxNote, trackAddNote } from '@/features/tx-notes'\n\nexport type SubmitCallback = (txId: string, isExecuted?: boolean) => void\n\nexport type SignOrExecuteProps = {\n  txId?: string\n  onSubmit?: SubmitCallback\n  children?: ReactNode\n  isExecutable?: boolean\n  isRejection?: boolean\n  isBatch?: boolean\n  isBatchable?: boolean\n  onlyExecute?: boolean\n  disableSubmit?: boolean\n  origin?: string\n  showMethodCall?: boolean\n}\n\nexport const SignOrExecuteForm = ({\n  chainId,\n  safeTx,\n  safeTxError,\n  onSubmit,\n  isCreation,\n  ...props\n}: SignOrExecuteProps & {\n  chainId: ReturnType<typeof useChainId>\n  safeTx: ReturnType<typeof useSafeTx>\n  safeTxError: ReturnType<typeof useSafeTxError>\n  isCreation?: boolean\n  txDetails?: TransactionDetails\n  txPreview?: TransactionPreview\n}): ReactElement => {\n  const [customOrigin, setCustomOrigin] = useState<string | undefined>(props.origin)\n  const { transactionExecution } = useAppSelector(selectSettings)\n  const [shouldExecute, setShouldExecute] = useState<boolean>(transactionExecution)\n  const isNewExecutableTx = useImmediatelyExecutable() && isCreation\n  const isCorrectNonce = useValidateNonce(safeTx)\n  const isBatchable = props.isBatchable !== false && safeTx && !isDelegateCall(safeTx)\n\n  const [trigger] = useLazyGetTransactionDetailsQuery()\n  const [readableApprovals] = useApprovalInfos({ safeTransaction: safeTx })\n  const isApproval = readableApprovals && readableApprovals.length > 0\n  const { safe } = useSafeInfo()\n  const isSafeOwner = useIsSafeOwner()\n  const signer = useSigner()\n  const isProposer = useIsWalletProposer()\n  const isProposing = isProposer && !isSafeOwner && isCreation\n  const isCounterfactualSafe = !safe.deployed\n\n  // Check if a Zodiac Roles mod is enabled and if the user is a member of any role that allows the transaction\n  const roles = useRoles(\n    !isCounterfactualSafe && isCreation && !(isNewExecutableTx && isSafeOwner) ? safeTx : undefined,\n  )\n  const allowingRole = findAllowingRole(roles)\n  const mostLikelyRole = findMostLikelyRole(roles)\n  const canExecuteThroughRole = !!allowingRole || (!!mostLikelyRole && !isSafeOwner)\n  const preferThroughRole = canExecuteThroughRole && !isSafeOwner // execute through role if a non-owner role member wallet is connected\n\n  // If checkbox is checked and the transaction is executable, execute it, otherwise sign it\n  const canExecute = isCorrectNonce && (props.isExecutable || isNewExecutableTx)\n  const willExecute = (props.onlyExecute || shouldExecute) && canExecute && !preferThroughRole\n  const willExecuteThroughRole =\n    (props.onlyExecute || shouldExecute) && canExecuteThroughRole && (!canExecute || preferThroughRole)\n\n  const onFormSubmit = useCallback(\n    async (txId: string, isExecuted = false, isRoleExecution = false, isProposerCreation = false) => {\n      onSubmit?.(txId, isExecuted)\n\n      const { data: details } = await trigger({ chainId, txId })\n      // Track tx event\n      trackTxEvents(\n        details,\n        !!isCreation,\n        isExecuted,\n        isRoleExecution,\n        isProposerCreation,\n        !!signer?.isSafe,\n        customOrigin,\n      )\n\n      if (customOrigin !== props.origin) {\n        trackAddNote()\n      }\n    },\n    [chainId, isCreation, onSubmit, trigger, signer?.isSafe, customOrigin, props.origin],\n  )\n\n  const onRoleExecutionSubmit = useCallback<typeof onFormSubmit>(\n    (txId, isExecuted) => onFormSubmit(txId, isExecuted, true),\n    [onFormSubmit],\n  )\n\n  const onProposerFormSubmit = useCallback<typeof onFormSubmit>(\n    (txId, isExecuted) => onFormSubmit(txId, isExecuted, false, true),\n    [onFormSubmit],\n  )\n\n  const onNoteChange = useCallback(\n    (note: string) => {\n      setCustomOrigin(encodeTxNote(note, props.origin))\n    },\n    [setCustomOrigin, props.origin],\n  )\n\n  const getForm = () => {\n    const commonProps = {\n      ...props,\n      safeTx,\n      isCreation,\n      origin: customOrigin,\n      onSubmit: onFormSubmit,\n    }\n    if (isCounterfactualSafe && !isProposing) {\n      return <CounterfactualForm {...commonProps} onlyExecute />\n    }\n\n    if (!isCounterfactualSafe && willExecute && !isProposing) {\n      return <ExecuteForm {...commonProps} />\n    }\n\n    if (!isCounterfactualSafe && willExecuteThroughRole) {\n      return (\n        <ExecuteThroughRoleForm\n          {...commonProps}\n          role={(allowingRole || mostLikelyRole)!}\n          safeTxError={safeTxError}\n          onSubmit={onRoleExecutionSubmit}\n        />\n      )\n    }\n\n    if (!isCounterfactualSafe && !willExecute && !willExecuteThroughRole && !isProposing) {\n      return <SignForm {...commonProps} isBatchable={isBatchable} />\n    }\n\n    if (isProposing) {\n      return <ProposerForm {...commonProps} onSubmit={onProposerFormSubmit} />\n    }\n  }\n\n  return (\n    <>\n      <TxCard>\n        {props.children}\n\n        <ConfirmationView\n          txId={props.txId}\n          isCreation={isCreation}\n          txDetails={props.txDetails}\n          txPreview={props.txPreview}\n          safeTx={safeTx}\n          isBatch={props.isBatch}\n          showMethodCall={props.showMethodCall}\n          isApproval={isApproval}\n        >\n          {!props.isRejection && (\n            <ErrorBoundary fallback={<div>Error parsing data</div>}>\n              {isApproval && <ApprovalEditor safeTransaction={safeTx} />}\n            </ErrorBoundary>\n          )}\n        </ConfirmationView>\n\n        {!isCounterfactualSafe && !props.isRejection && <BlockaidBalanceChanges />}\n      </TxCard>\n\n      {!isCounterfactualSafe && !props.isRejection && <TxChecks />}\n\n      <TxNoteForm isCreation={isCreation ?? false} onChange={onNoteChange} txDetails={props.txDetails} />\n\n      <SignerForm willExecute={willExecute} />\n\n      <TxCard>\n        <ConfirmationTitle\n          variant={\n            isProposing\n              ? ConfirmationTitleTypes.propose\n              : willExecute\n                ? ConfirmationTitleTypes.execute\n                : ConfirmationTitleTypes.sign\n          }\n          isCreation={isCreation}\n        />\n\n        {safeTxError && (\n          <ErrorMessage error={safeTxError}>\n            This transaction will most likely fail. To save gas costs, avoid confirming the transaction.\n          </ErrorMessage>\n        )}\n\n        {(canExecute || canExecuteThroughRole) && !props.onlyExecute && !isCounterfactualSafe && !isProposing && (\n          <ExecuteCheckbox onChange={setShouldExecute} />\n        )}\n\n        <NetworkWarning />\n\n        <UnknownContractError txData={props.txDetails?.txData ?? props.txPreview?.txData} />\n\n        <Blockaid />\n\n        {getForm()}\n      </TxCard>\n    </>\n  )\n}\n\nconst useSafeTx = () => useContext(SafeTxContext).safeTx\nconst useSafeTxError = () => useContext(SafeTxContext).safeTxError\n\nexport default madProps(SignOrExecuteForm, {\n  chainId: useChainId,\n  safeTx: useSafeTx,\n  safeTxError: useSafeTxError,\n})\n","import LoadingSpinner, { SpinnerStatus } from '@/components/new-safe/create/steps/StatusStep/LoadingSpinner'\nimport TxCard from '@/components/tx-flow/common/TxCard'\nimport { Box } from '@mui/material'\n\nconst SignOrExecuteSkeleton = () => (\n  <TxCard>\n    <Box minHeight=\"38svh\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\" mb={5}>\n      <LoadingSpinner status={SpinnerStatus.PROCESSING} />\n    </Box>\n  </TxCard>\n)\n\nexport default SignOrExecuteSkeleton\n","import { useContext } from 'react'\nimport { SafeTxContext } from '@/components/tx-flow/SafeTxProvider'\nimport SignOrExecuteForm from './SignOrExecuteForm'\nimport type { SignOrExecuteProps, SubmitCallback } from './SignOrExecuteForm'\nimport SignOrExecuteSkeleton from './SignOrExecuteSkeleton'\nimport useTxDetails from '@/hooks/useTxDetails'\nimport useTxPreview from '../confirmation-views/useTxPreview'\n\ntype SignOrExecuteExtendedProps = SignOrExecuteProps & {\n  onSubmit?: SubmitCallback\n  txId?: string\n  children?: React.ReactNode\n  isExecutable?: boolean\n  isRejection?: boolean\n  isBatch?: boolean\n  isBatchable?: boolean\n  onlyExecute?: boolean\n  disableSubmit?: boolean\n  origin?: string\n  isCreation?: boolean\n  showMethodCall?: boolean\n}\n\nconst SignOrExecute = (props: SignOrExecuteExtendedProps) => {\n  const { safeTx, safeTxError } = useContext(SafeTxContext)\n  const [txDetails, , txDetailsLoading] = useTxDetails(props.txId)\n  const [txPreview, , txPreviewLoading] = useTxPreview(safeTx?.data, undefined, props.txId)\n\n  if ((!safeTx && !safeTxError) || txDetailsLoading || txPreviewLoading) {\n    return <SignOrExecuteSkeleton />\n  }\n\n  return (\n    <SignOrExecuteForm\n      {...props}\n      isCreation={!props.txId}\n      txId={props.txId}\n      txDetails={txDetails}\n      txPreview={txPreview}\n    >\n      {props.children}\n    </SignOrExecuteForm>\n  )\n}\n\nexport default SignOrExecute\n","import { Alert } from '@mui/material'\nimport { useIsMultichainSafe } from '../../hooks/useIsMultichainSafe'\nimport { useCurrentChain } from '@/hooks/useChains'\n\nexport const ChangeSignerSetupWarning = () => {\n  const isMultichainSafe = useIsMultichainSafe()\n  const currentChain = useCurrentChain()\n\n  if (!isMultichainSafe) return\n\n  return (\n    <Alert severity=\"info\" sx={{ border: 'none', mt: 0, mb: 0 }}>\n      {`Signers are not consistent across networks on this account. Changing signers will only affect the account on ${currentChain?.chainName}`}\n    </Alert>\n  )\n}\n","import { useAllSafesGrouped } from '@/features/myAccounts/hooks/useAllSafesGrouped'\nimport useSafeAddress from '@/hooks/useSafeAddress'\nimport { sameAddress } from '@/utils/addresses'\nimport { useMemo } from 'react'\n\nexport const useIsMultichainSafe = () => {\n  const safeAddress = useSafeAddress()\n  const { allMultiChainSafes } = useAllSafesGrouped()\n\n  return useMemo(\n    () => allMultiChainSafes?.some((account) => sameAddress(safeAddress, account.safes[0].address)),\n    [allMultiChainSafes, safeAddress],\n  )\n}\n","import useAsync from '@/hooks/useAsync'\nimport useSafeInfo from './useSafeInfo'\nimport { FEATURES, hasFeature } from '@/utils/chains'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { getRelayCount } from '@safe-global/safe-gateway-typescript-sdk'\n\nexport const MAX_DAY_RELAYS = 5\n\nexport const useRelaysBySafe = () => {\n  const chain = useCurrentChain()\n  const { safe, safeAddress } = useSafeInfo()\n\n  return useAsync(() => {\n    if (!safeAddress || !chain) return\n    if (hasFeature(chain, FEATURES.RELAYING)) {\n      return getRelayCount(chain.chainId, safeAddress)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chain, safeAddress, safe.txHistoryTag])\n}\n\nexport const useLeastRemainingRelays = (ownerAddresses: string[]) => {\n  const chain = useCurrentChain()\n  const { safe } = useSafeInfo()\n\n  return useAsync(() => {\n    if (!chain || !hasFeature(chain, FEATURES.RELAYING)) return\n\n    return Promise.all(ownerAddresses.map((address) => getRelayCount(chain.chainId, address)))\n      .then((result) => {\n        const min = Math.min(...result.map((r) => r.remaining))\n        return result.find((r) => r.remaining === min)\n      })\n      .catch(() => {\n        return { remaining: 0, limit: MAX_DAY_RELAYS }\n      })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chain, ownerAddresses, safe.txHistoryTag])\n}\n","import { getTransactionDetails } from '@safe-global/safe-gateway-typescript-sdk'\nimport useAsync from '@/hooks/useAsync'\nimport useChainId from './useChainId'\n\nfunction useTxDetails(txId?: string) {\n  const chainId = useChainId()\n\n  return useAsync(() => {\n    if (!txId) return\n    return getTransactionDetails(chainId, txId)\n  }, [chainId, txId])\n}\n\nexport default useTxDetails\n","import { getTotalFee } from '@/hooks/useGasPrice'\nimport useWalletBalance from '@/hooks/wallets/useWalletBalance'\n\nconst useWalletCanPay = ({ gasLimit, maxFeePerGas }: { gasLimit?: bigint; maxFeePerGas?: bigint | null }) => {\n  const [walletBalance] = useWalletBalance()\n\n  // Take an optimistic approach and assume the wallet can pay\n  // if gasLimit, maxFeePerGas or their walletBalance are missing\n  if (gasLimit === undefined || maxFeePerGas === undefined || maxFeePerGas === null || walletBalance === undefined)\n    return true\n\n  const totalFee = getTotalFee(maxFeePerGas, gasLimit)\n\n  return walletBalance >= totalFee\n}\n\nexport default useWalletCanPay\n","import useAsync, { type AsyncResult } from '../useAsync'\nimport useWallet from './useWallet'\nimport { useWeb3ReadOnly } from '@/hooks/wallets/web3'\n\nconst useWalletBalance = (): AsyncResult<bigint | undefined> => {\n  const web3ReadOnly = useWeb3ReadOnly()\n  const wallet = useWallet()\n\n  return useAsync<bigint | undefined>(async () => {\n    if (!wallet || !web3ReadOnly) {\n      return undefined\n    }\n\n    const balance = await web3ReadOnly.getBalance(wallet.address, 'latest')\n    return balance\n  }, [wallet, web3ReadOnly])\n}\n\nexport default useWalletBalance\n","import type { RelayCountResponse } from '@safe-global/safe-gateway-typescript-sdk'\n\nexport const hasRemainingRelays = (relays?: RelayCountResponse): boolean => {\n  return !!relays && relays.remaining > 0\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"styles_box__jXwC_\",\"rectError\":\"styles_rectError__cTAjH\",\"rect\":\"styles_rect__DgHvj\",\"rectSuccess\":\"styles_rectSuccess__szLsJ\",\"rectCenter\":\"styles_rectCenter__fgw7o\",\"rectTl\":\"styles_rectTl__KI1Iv\",\"rect-anim-tl\":\"styles_rect-anim-tl__3Weaw\",\"rectTr\":\"styles_rectTr__s1DON\",\"rect-anim-tr\":\"styles_rect-anim-tr__ctmQw\",\"rectBl\":\"styles_rectBl__0UK4u\",\"rect-anim-bl\":\"styles_rect-anim-bl__xXbUw\",\"rectBr\":\"styles_rectBr__SV_dM\",\"rect-anim-br\":\"styles_rect-anim-br__2Tai5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__89vKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"styles_group__fddoC\",\"radio\":\"styles_radio__1OmLt\",\"select\":\"styles_select__VIfzg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__uq_oY\",\"method\":\"styles_method__e_FVs\",\"label\":\"styles_label__DK6kD\",\"radioLabel\":\"styles_radioLabel__LApjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signerForm\":\"styles_signerForm__kfRxt\",\"disabledPill\":\"styles_disabledPill__fzH46\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sponsoredBy\":\"styles_sponsoredBy__0eMhp\",\"icon\":\"styles_icon__MhBil\",\"logo\":\"styles_logo___DNjH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"amount\":\"styles_amount__3yewX\",\"partsBlock\":\"styles_partsBlock__jqAj5\",\"partsBlockTitle\":\"styles_partsBlockTitle__H77xj\",\"numberOfPartsLabel\":\"styles_numberOfPartsLabel__vclFI\"};","var _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgMinus = function SvgMinus(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2.5,\n    y: 7,\n    width: 12,\n    height: 2,\n    rx: 1,\n    fill: \"currentColor\"\n  })));\n};\nexport default SvgMinus;"],"names":["moveToEnd","transformEnd","element","getAnimations","forEach","animationName","pause","transformStart","window","getComputedStyle","transform","cancel","animate","duration","easing","fill","SpinnerStatus","status","isSuccess","LoadingSpinner","rectTl","useRef","rectTr","rectBl","rectBr","rectCenter","onFinish","useCallback","rectTlEndTransform","current","rectTrEndTransform","rectBlEndTransform","rectBrEndTransform","useEffect","Box","className","classnames","css","isError","div","ref","svg","xmlns","version","defs","filter","id","feGaussianBlur","in","stdDeviation","result","feColorMatrix","mode","values","feComposite","in2","operator","SettingsChangeContext","createContext","ChangeThresholdReviewContext","AdvancedField","recommendedGasLimit","safe","useSafeInfo","GasLimitInput","register","watch","setValue","trigger","formState","errors","useFormContext","currentGasLimit","gasLimit","error","errorMessage","type","message","undefined","FormControl","fullWidth","NumberField","label","InputProps","endAdornment","toString","Tooltip","title","IconButton","onClick","onResetGasLimit","size","color","RotateLeftIcon","InputLabelProps","shrink","disabled","deployed","required","min","BASE_TX_GAS","params","props","AdvancedParamsForm","formMethods","useForm","defaultValues","userNonce","maxFeePerGas","safeFormatUnits","maxPriorityFeePerGas","handleSubmit","onSubmit","safeParseUnits","data","BigInt","ModalDialog","open","dialogTitle","hideChainIndicator","FormProvider","form","onFormSubmit","e","preventDefault","stopPropagation","DialogContent","Grid","container","spacing","item","xs","Typography","variant","fontWeight","willRelay","isEIP1559","pattern","FLOAT_REGEX","mt","ExternalLink","href","HelpCenterArticle","ADVANCED_PARAMS","DialogActions","Button","onBack","useAdvancedParams","manualParams","setManualParams","useState","gasPrice","useGasPrice","useUserNonce","useMemo","AdvancedParams","willExecute","gasLimitError","isEditing","setIsEditing","useHasFeature","FEATURES","EIP1559","isExecution","onAdvancedSubmit","GasParams","onEdit","onEditOpen","trackEvent","MODALS_EVENTS","EDIT_ADVANCED_PARAMS","wallet","useWallet","useAsync","getUserNonce","address","RELAY_SPONSORS","chains","gno","name","logo","default","SponsoredBy","sponsor","chainId","img","src","alt","relays","RemainingRelays","tooltip","limit","MAX_DAY_RELAYS","maybePlural","display","alignItems","gap","b","remaining","placement","arrow","span","style","lineHeight","SvgIcon","component","InfoIcon","inheritViewBox","fontSize","sx","balance","useWalletBalance","BalanceInfo","WalletBalance","ExecutionMethod","ExecutionMethodSelector","madProps","chain","executionMethod","setExecutionMethod","noLabel","shouldRelay","borderRadius","shape","RadioGroup","row","value","onChange","onChooseExecutionMethod","newExecutionMethod","FormControlLabel","data-testid","flex","whiteSpace","control","Radio","WalletIcon","provider","width","height","icon","useCurrentChain","ProposerForm","safeTx","origin","disableSubmit","txActions","txSecurity","isSubmittable","setIsSubmittable","isRejectedByUser","setIsRejectedByUser","signProposerTx","setTxFlow","useContext","TxModalContext","needsRiskConfirmation","isRiskConfirmed","setIsRiskIgnored","txId","_err","err","asError","isWalletRejection","trackError","Errors","_805","submitDisabled","strong","WalletRejectionError","Divider","commonCss","pt","CardActions","Stack","direction","lg","md","CheckWallet","checkNetwork","isOk","minWidth","order","CircularProgress","useTxActions","useTxSecurityContext","TxSecurityContext","estimateBatchDeploymentTransaction","safeTransaction","sdk","customContracts","getContractManager","contractNetworks","safeVersion","getContractVersion","safeProvider","getSafeProvider","fallbackHandlerContract","getCompatibilityFallbackHandlerContract","simulateTxAccessorContract","getSimulateTxAccessorContract","safeDeploymentTransaction","createSafeDeploymentTransaction","safeDeploymentBatchTransaction","to","operation","OperationType","Call","transactionDataToEstimate","encode","safeFunctionToEstimate","getAddress","simulateBatchTransaction","safeDeploymentBatch","createTransactionBatch","signerAddress","getSignerAddress","estimateGas","from","ZERO_ADDRESS","onboard","useOnboard","useDeployGasLimit","useChainId","gasLimitLoading","getSafeSDKWithSigner","baseGas","batchTxGas","safeDeploymentGas","Promise","all","estimateTxBaseGas","estimateSafeDeploymentGas","totalGas","safeTxGas","ErrorMessage","NonOwnerError","onlyExecute","isCreation","isOwner","isExecutionLoop","safeAddress","submitError","setSubmitError","currentChain","advancedParams","setAdvancedParams","Math","random","txOptions","getTxOptions","OVERVIEW_EVENTS","PROCEED_WITH_TX","TX_TYPES","activate_with_tx","deploySafeAndExecuteTx","TX_EVENTS","CREATE","EXECUTE","WALLET_EVENTS","ONCHAIN_INTERACTION","_804","walletCanPay","useWalletCanPay","cannotPropose","Alert","severity","mb","border","br","ul","margin","padding","li","getTotalFeeFormatted","nativeCurrency","symbol","classNames","allowNonOwner","useIsSafeOwner","useIsExecutionLoop","ExecuteCheckbox","settings","useAppSelector","selectSettings","dispatch","useAppDispatch","String","transactionExecution","_","checked","TOGGLE_EXECUTE_TX","setTransactionExecution","tx","useWalletCanRelay","hasEnoughSignatures","signatures","threshold","isSmartContractWallet","then","isSCWallet","catch","logError","_106","getEncodedSafeTx","safeSDK","needsSignature","safeContract","EXEC_TX_METHOD","gasToken","refundReceiver","encodeSignatures","GasMultipliers","zksync","incrementByGasMultiplier","multiplier","getGasLimitForZkSync","web3","SafeProvider","_getConnection","url","gas","fakeEOAFromAddress","useSafeSDK","useGasLimit","web3ReadOnly","useWeb3ReadOnly","useSigner","walletAddress","currentChainId","hasSafeTxGas","encodedSafeTx","getCode","_612","useValidateTxData","SafeTxContext","computedSafeTxHash","getTransactionHash","slice","signature","isContractSignature","sig","staticPart","v","parseInt","ethers","signer","ErrorCodes","_818","modifiedSig","validationResult","validationLoading","validationError","executeTx","RELAY","walletCanRelay","useRelaysBySafe","canRelay","hasRemainingRelays","executionValidationError","useIsValidExecution","executedTxId","SuccessScreenFlow","level","BatchButton","Track","BATCH_EVENTS","BATCH_APPEND","PlusIcon","mr","flexDirection","justifyContent","SignForm","isBatch","isBatchable","signTx","addToBatch","hasSigned","useAlreadySigned","resultTxId","isAddingToBatch","isSafe","NestedTxSuccessScreenFlow","onBatchClick","txData","UnknownContractError","newMasterCopy","extractMigrationL2MasterCopyAddress","isValidMasterCopy","implementationVersionState","getExplorerLink","blockExplorerUriTemplate","chainName","ROLES_V2_SUPPORTED_CHAINS","Object","keys","multiSendInterface","Multi_send__factory","useMetaTransactions","safeTxData","metaTx","DelegateCall","baseTransactions","decodeMultiSendData","length","map","isFeatureEnabled","ZODIAC_ROLES","includes","safeModules","modules","rolesMods","fetchRolesMod","mod","target","toLowerCase","avatar","roles","KNOWN_MULTISEND_CALL_ONLY_ADDRESSES","useRoles","metaTransactions","useRolesMods","potentialRoles","rolesMod","multiSend","multiSendAddresses","find","KNOWN_MULTISEND_ADDRESSES","addr","multiSendCallOnly","role","members","statuses","checkPermissions","push","modAddress","roleKey","key","some","Status","Ok","dynamicallyCheckedPotentialRoles","checkCondition","findMostLikelyRole","findAllowingRole","TargetAddressNotAllowed","FunctionNotAllowed","targets","t","clearance","Clearance","Target","checkExecutionOptions","executionOptions","Function","selector","func","functions","f","execOptionsStatus","wildcarded","execOptions","isSend","isDelegateCall","ExecutionOptions","Send","Both","SendNotAllowed","DelegateCallNotAllowed","encodeExecuteThroughRole","encodeFunctionData","encodeMultiSendData","combinedMetaTx","encodeMetaTransactions","getModuleInstance","KnownContracts","ROLES_V2","interface","rolesModifier","execTransactionWithRole","getError","console","decodeErrorResult","Number","txHash","backOff","getModuleTransactionId","startingDelay","maxDelay","numOfAttempts","retry","info","Role","children","humanReadableRoleKey","isPending","setIsPending","permissionsError","PermissionsErrorMessage","multiSendImpossible","txThroughRole","useExecuteThroughRole","assertWallet","assertOnboard","dispatchModuleTxExecution","_815","transactionService","pollModuleTransactionId","OrViolation","NorViolation","ParameterNotAllowed","ParameterLessThanAllowed","ParameterGreaterThanAllowed","ParameterNotAMatch","NotEveryArrayElementPasses","NoArrayElementPasses","ParameterNotSubsetOfAllowed","BitmaskOverflow","BitmaskNotAllowed","CustomConditionViolation","AllowanceExceeded","CallAllowanceExceeded","EtherAllowanceExceeded","txInfo","settingsInfo","SettingsChange","SettingsInfoType","REMOVE_OWNER","shouldShowChangeSigner","hasNewOwner","newSignersLength","owners","setsFallbackHandler","SET_FALLBACK_HANDLER","UntrustedFallbackHandlerTxAlert","fallbackHandler","handler","Paper","backgroundColor","palette","warning","background","p","MinusIcon","EthHashInfo","oldOwner","shortAddress","showCopyButton","hasExplorer","OwnerList","owner","newOwner","ChangeSignerSetupWarning","isSettingsChangeView","TransactionInfoType","SETTINGS_CHANGE","isConfirmBatchView","txFlow","ConfirmBatchFlow","CHANGE_THRESHOLD","ChangeThreshold","newThreshold","isChangeThresholdView","aria-label","my","BatchTransactions","batchTxs","useDraftBatch","BatchTxList","txItems","first","SwapTokens","second","ConfirmationOrderHeader","blocks","showArrow","OrderFeeConfirmationView","bps","getOrderFeeBps","HelpIconTooltip","BRAND_NAME","MUILink","SWAP_WIDGET_FEES","rel","DataRow","datatestid","TwapFallbackHandlerWarning","InfoOutlinedIcon","SwapOrderConfirmation","decodedData","settlementContract","kind","validUntil","sellToken","buyToken","sellAmount","buyAmount","explorerUrl","receiver","isTwapOrder","TWAP_ORDER","limitPrice","getLimitPrice","orderClass","getOrderClass","expires","Date","now","slippage","getSlippageInPercent","isSellOrder","isChangingFallbackHandler","isSettingTwapFallbackHandler","DataTable","header","rows","tokenInfo","formatAmount","compareAsc","formatTimeInWords","formatDateTime","Fragment","OrderId","orderId","uid","NamedAddress","onlyName","avatarSize","AlertIcon","numberOfParts","PartSellAmount","addonText","PartBuyAmount","startTime","startType","StartTimeValue","AT_MINING_TIME","AT_EPOCH","epoch","PartDuration","getPeriod","timeBetweenParts","SwapOrder","dataDecoded","StakingConfirmationTxExit","withdrawIn","formatDurationFromMilliseconds","estimatedExitTime","estimatedWithdrawalTime","numValidators","FieldsGrid","InfoTooltip","StrakingConfirmationTx","isStakingTxDepositInfo","StakingConfirmationTxDeposit","isStakingTxExitInfo","isStakingTxWithdrawInfo","StakingConfirmationTxWithdraw","StakingTx","BgBox","light","bgcolor","textAlign","UpdateSafe","_UpdateSafe","queueSize","showQueueWarning","semverSatisfies","latestSafeVersion","QUEUE_WARNING_VERSION","recommendedMasterCopyVersion","LATEST_SAFE_VERSION","AlertTitle","mx","useSafeVersion","useQueuedTxsLength","getConfirmationViewComponent","isOnChainConfirmationTxData","OnChainConfirmation","isConfirmationView","isExecTxData","ExecTransaction","isSwapOrderTxInfo","isTwapOrderTxInfo","isAnyStakingTxInfo","isCustomTxInfo","isSafeUpdateTxData","isSafeToL2MigrationTxData","MigrateToL2Information","ConfirmationView","txPreview","txDetails","details","ConfirmationViewComponent","showTxDetails","isOrderTxInfo","TxData","imitation","trusted","DecodedTx","showMultisend","showMethodCall","isApproval","SignerForm","useWalletContext","setSignerAddress","connectedWallet","nestedSafeOwners","useNestedSafeOwners","isNestedOwner","useIsNestedSafeOwner","isOptionEnabled","Array","sameAddress","options","Set","isFullySigned","add","TxCard","SignatureIcon","InputLabel","Select","labelId","CHANGE_SIGNER","event","MenuItem","copyAddress","SignOrExecuteForm","safeTxError","customOrigin","setCustomOrigin","shouldExecute","setShouldExecute","isNewExecutableTx","useImmediatelyExecutable","isCorrectNonce","useValidateNonce","useLazyGetTransactionDetailsQuery","readableApprovals","useApprovalInfos","isSafeOwner","isProposing","useIsWalletProposer","isCounterfactualSafe","allowingRole","mostLikelyRole","canExecuteThroughRole","preferThroughRole","canExecute","isExecutable","willExecuteThroughRole","isExecuted","isRoleExecution","isProposerCreation","trackTxEvents","isParentSigner","isNestedConfirmation","isNestedConfirmationTxInfo","creationEvent","args","getCreationEvent","CREATE_VIA_PARENT","CREATE_VIA_ROLE","CREATE_VIA_PROPOSER","confirmationEvent","getConfirmationEvent","CONFIRM_VIA_PARENT","CONFIRM_IN_PARENT","CONFIRM","executionEvent","getExecutionEvent","EXECUTE_VIA_PARENT","EXECUTE_IN_PARENT","EXECUTE_VIA_ROLE","txType","getTransactionTrackingType","trackAddNote","onRoleExecutionSubmit","onProposerFormSubmit","onNoteChange","encodeTxNote","note","isRejection","ErrorBoundary","fallback","ApprovalEditor","BlockaidBalanceChanges","TxChecks","TxNoteForm","ConfirmationTitle","ConfirmationTitleTypes","propose","execute","sign","NetworkWarning","Blockaid","getForm","commonProps","CounterfactualForm","ExecuteThroughRoleForm","ExecuteForm","useSafeTx","useSafeTxError","SignOrExecuteSkeleton","minHeight","PROCESSING","SignOrExecute","txDetailsLoading","useTxDetails","txPreviewLoading","useTxPreview","isMultichainSafe","useIsMultichainSafe","useSafeAddress","allMultiChainSafes","useAllSafesGrouped","account","safes","hasFeature","RELAYING","getRelayCount","txHistoryTag","ownerAddresses","r","getTransactionDetails","walletBalance","getTotalFee","totalFee","getBalance"],"sourceRoot":"","ignoreList":[14,27,28,29,30,31,33]}