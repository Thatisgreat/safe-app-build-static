{"version":3,"file":"static/chunks/1124.f69b47c9d67f0755.js","mappings":"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","sources":["webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/AddressBookInput/index.tsx","webpack://_N_E/./src/components/new-safe/create/NetworkWarning/index.tsx","webpack://_N_E/./src/components/tx-flow/common/constants.ts","webpack://_N_E/./src/components/tx-flow/flows/RecoverAccount/RecoverAccountFlowReview.tsx","webpack://_N_E/./src/components/tx-flow/flows/RecoverAccount/RecoverAccountFlowSetup.tsx","webpack://_N_E/./src/components/tx-flow/flows/RecoverAccount/index.tsx","webpack://_N_E/./src/components/tx-flow/useTxStepper.tsx","webpack://_N_E/./src/features/recovery/hooks/useIsRecoverer.ts","webpack://_N_E/./src/features/recovery/hooks/useIsValidRecoveryExecution.ts","webpack://_N_E/./src/hooks/useClock.ts","webpack://_N_E/./src/features/recovery/hooks/useRecoveryTxState.ts","webpack://_N_E/./src/features/recovery/services/recovery-sender.ts","webpack://_N_E/./src/features/recovery/services/recoveryEvents.ts","webpack://_N_E/./src/features/recovery/services/transaction.ts","webpack://_N_E/./src/services/analytics/events/recovery.ts","webpack://_N_E/./src/utils/tx-list.ts","webpack://_N_E/./src/components/common/AddressBookInput/styles.module.css","webpack://_N_E/./src/components/tx/security/blockaid/styles.module.css","webpack://_N_E/./public/images/common/close.svg"],"sourcesContent":["export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import { type ReactElement, useState, useMemo } from 'react'\nimport { Controller, useFormContext, useWatch } from 'react-hook-form'\nimport { SvgIcon, Typography } from '@mui/material'\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete'\nimport useAddressBook from '@/hooks/useAddressBook'\nimport AddressInput, { type AddressInputProps } from '../AddressInput'\nimport EthHashInfo from '../EthHashInfo'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport EntryDialog from '@/components/address-book/EntryDialog'\nimport css from './styles.module.css'\nimport inputCss from '@/styles/inputs.module.css'\nimport { isValidAddress } from '@/utils/validation'\nimport { sameAddress } from '@/utils/addresses'\n\nconst abFilterOptions = createFilterOptions({\n  stringify: (option: { label: string; name: string }) => option.name + ' ' + option.label,\n})\n\n/**\n *  Temporary component until revamped safe components are done\n */\nconst AddressBookInput = ({ name, canAdd, ...props }: AddressInputProps & { canAdd?: boolean }): ReactElement => {\n  const addressBook = useAddressBook()\n  const { setValue, control } = useFormContext()\n  const addressValue = useWatch({ name, control })\n  const [open, setOpen] = useState(false)\n  const [openAddressBook, setOpenAddressBook] = useState<boolean>(false)\n\n  const addressBookEntries = Object.entries(addressBook).map(([address, name]) => ({\n    label: address,\n    name,\n  }))\n\n  const hasVisibleOptions = useMemo(\n    () => !!addressBookEntries.filter((entry) => entry.label.includes(addressValue)).length,\n    [addressBookEntries, addressValue],\n  )\n\n  const isInAddressBook = useMemo(\n    () => addressBookEntries.some((entry) => sameAddress(entry.label, addressValue)),\n    [addressBookEntries, addressValue],\n  )\n\n  const customFilterOptions = (options: any, state: any) => {\n    // Don't show suggestions from the address book once a valid address has been entered.\n    if (isValidAddress(addressValue)) return []\n    return abFilterOptions(options, state)\n  }\n\n  const handleOpenAutocomplete = () => {\n    setOpen((value) => !value)\n  }\n\n  const onAddressBookClick = canAdd\n    ? () => {\n        setOpenAddressBook(true)\n      }\n    : undefined\n\n  return (\n    <>\n      <Controller\n        name={name}\n        control={control}\n        // eslint-disable-next-line\n        render={({ field: { ref, ...field } }) => (\n          <Autocomplete\n            {...field}\n            className={inputCss.input}\n            disableClearable\n            disabled={props.disabled}\n            readOnly={props.InputProps?.readOnly}\n            freeSolo\n            options={addressBookEntries}\n            onChange={(_, value) => (typeof value === 'string' ? field.onChange(value) : field.onChange(value.label))}\n            onInputChange={(_, value) => setValue(name, value)}\n            filterOptions={customFilterOptions}\n            componentsProps={{\n              paper: {\n                elevation: 2,\n              },\n            }}\n            renderOption={(props, option) => {\n              const { key, ...rest } = props\n              return (\n                <Typography data-testid=\"address-item\" component=\"li\" variant=\"body2\" {...rest} key={key}>\n                  <EthHashInfo address={option.label} name={option.name} shortAddress={false} copyAddress={false} />\n                </Typography>\n              )\n            }}\n            renderInput={(params) => (\n              <AddressInput\n                data-testid=\"address-item\"\n                {...params}\n                {...props}\n                focused={props.focused || !addressValue}\n                name={name}\n                onOpenListClick={hasVisibleOptions ? handleOpenAutocomplete : undefined}\n                isAutocompleteOpen={open}\n                onAddressBookClick={canAdd && !isInAddressBook ? onAddressBookClick : undefined}\n              />\n            )}\n          />\n        )}\n      />\n\n      {canAdd && !isInAddressBook ? (\n        <Typography variant=\"body2\" className={css.unknownAddress}>\n          <SvgIcon component={InfoIcon} fontSize=\"small\" />\n          <span>\n            This is an unknown address. You can{' '}\n            <a role=\"button\" onClick={onAddressBookClick}>\n              add it to your address book\n            </a>\n            .\n          </span>\n        </Typography>\n      ) : null}\n\n      {openAddressBook && (\n        <EntryDialog\n          handleClose={() => setOpenAddressBook(false)}\n          defaultValues={{ name: '', address: addressValue }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default AddressBookInput\n","import { Alert, AlertTitle, Box } from '@mui/material'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport ChainSwitcher from '@/components/common/ChainSwitcher'\nimport useIsWrongChain from '@/hooks/useIsWrongChain'\n\nconst NetworkWarning = ({ action }: { action?: string }) => {\n  const chain = useCurrentChain()\n  const isWrongChain = useIsWrongChain()\n\n  if (!chain || !isWrongChain) return null\n\n  return (\n    <Alert severity=\"warning\">\n      <AlertTitle sx={{ fontWeight: 700 }}>Change your wallet network</AlertTitle>You are trying to{' '}\n      {action || 'sign or execute a transaction'} on {chain.chainName}. Make sure that your wallet is set to the same\n      network.\n      <Box\n        sx={{\n          mt: 2,\n        }}\n      >\n        <ChainSwitcher />\n      </Box>\n    </Alert>\n  )\n}\n\nexport default NetworkWarning\n","export const TOOLTIP_TITLES = {\n  THRESHOLD:\n    'The threshold of a Safe Account specifies how many signers need to confirm a Safe Account transaction before it can be executed.',\n  REVIEW_WINDOW:\n    'A period that begins after a recovery is submitted on-chain, during which the Safe Account signers can review the proposal and cancel it before it is executable.',\n  PROPOSAL_EXPIRY: 'A period after which the recovery proposal will expire and can no longer be executed.',\n} as const\n","import { trackEvent } from '@/services/analytics'\nimport { RECOVERY_EVENTS } from '@/services/analytics/events/recovery'\nimport { CardActions, Button, Typography, Divider, Box, CircularProgress } from '@mui/material'\nimport { useContext, useEffect, useState } from 'react'\nimport type { ReactElement } from 'react'\n\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { getRecoveryProposalTransactions } from '@/features/recovery/services/transaction'\nimport DecodedTx from '@/components/tx/DecodedTx'\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport ConfirmationTitle, { ConfirmationTitleTypes } from '@/components/tx/SignOrExecuteForm/ConfirmationTitle'\nimport TxChecks from '@/components/tx/SignOrExecuteForm/TxChecks'\nimport TxCard from '../../common/TxCard'\nimport { SafeTxContext } from '../../SafeTxProvider'\nimport CheckWallet from '@/components/common/CheckWallet'\nimport { dispatchRecoveryProposal } from '@/features/recovery/services/recovery-sender'\nimport { createMultiSendCallOnlyTx, createTx } from '@/services/tx/tx-sender'\nimport { RecoverAccountFlowFields } from '.'\nimport { OwnerList } from '../../common/OwnerList'\nimport { selectDelayModifierByRecoverer } from '@/features/recovery/services/selectors'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport useOnboard from '@/hooks/wallets/useOnboard'\nimport { TxModalContext } from '../..'\nimport { asError } from '@/services/exceptions/utils'\nimport { trackError, Errors } from '@/services/exceptions'\nimport { getPeriod } from '@/utils/date'\nimport useRecovery from '@/features/recovery/hooks/useRecovery'\nimport { useIsValidRecoveryExecTransactionFromModule } from '@/features/recovery/hooks/useIsValidRecoveryExecution'\nimport type { RecoverAccountFlowProps } from '.'\nimport { isWalletRejection } from '@/utils/wallets'\nimport WalletRejectionError from '@/components/tx/SignOrExecuteForm/WalletRejectionError'\n\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport { BlockaidBalanceChanges } from '@/components/tx/security/blockaid/BlockaidBalanceChange'\nimport NetworkWarning from '@/components/new-safe/create/NetworkWarning'\nimport { useGetTransactionDetailsQuery } from '@/store/api/gateway'\nimport { skipToken } from '@reduxjs/toolkit/query'\nimport useTxPreview from '@/components/tx/confirmation-views/useTxPreview'\n\nexport function RecoverAccountFlowReview({ params }: { params: RecoverAccountFlowProps }): ReactElement | null {\n  // Form state\n  const [isSubmittable, setIsSubmittable] = useState<boolean>(true)\n  const [submitError, setSubmitError] = useState<Error | undefined>()\n  const [isRejectedByUser, setIsRejectedByUser] = useState<Boolean>(false)\n\n  // Hooks\n  const { setTxFlow } = useContext(TxModalContext)\n  const { safeTx, safeTxError, setSafeTx, setSafeTxError } = useContext(SafeTxContext)\n  const { safe } = useSafeInfo()\n  const wallet = useWallet()\n  const onboard = useOnboard()\n  const [data] = useRecovery()\n  const recovery = data && selectDelayModifierByRecoverer(data, wallet?.address ?? '')\n  const [, executionValidationError] = useIsValidRecoveryExecTransactionFromModule(recovery?.address, safeTx)\n\n  const { data: txDetails } = useGetTransactionDetailsQuery(skipToken)\n  const [txPreview] = useTxPreview(safeTx?.data, undefined, txDetails?.txId)\n\n  // Proposal\n  const newThreshold = Number(params[RecoverAccountFlowFields.threshold])\n  const newOwners = params[RecoverAccountFlowFields.owners]\n\n  useEffect(() => {\n    const transactions = getRecoveryProposalTransactions({\n      safe,\n      newThreshold,\n      newOwners,\n    })\n\n    const promise = transactions.length > 1 ? createMultiSendCallOnlyTx(transactions) : createTx(transactions[0])\n\n    promise.then(setSafeTx).catch(setSafeTxError)\n  }, [newThreshold, newOwners, safe, setSafeTx, setSafeTxError])\n\n  // On modal submit\n  const onSubmit = async () => {\n    if (!recovery || !onboard || !wallet || !safeTx) {\n      return\n    }\n\n    setIsSubmittable(false)\n    setSubmitError(undefined)\n    setIsRejectedByUser(false)\n\n    try {\n      await dispatchRecoveryProposal({\n        provider: wallet.provider,\n        safe,\n        safeTx,\n        delayModifierAddress: recovery.address,\n        signerAddress: wallet.address,\n      })\n      trackEvent({ ...RECOVERY_EVENTS.SUBMIT_RECOVERY_ATTEMPT })\n    } catch (_err) {\n      const err = asError(_err)\n      if (isWalletRejection(err)) {\n        setIsRejectedByUser(true)\n      } else {\n        trackError(Errors._804, err)\n        setSubmitError(err)\n      }\n      setIsSubmittable(true)\n      return\n    }\n\n    setTxFlow(undefined)\n  }\n\n  const submitDisabled = !safeTx || !isSubmittable || !recovery\n\n  return (\n    <>\n      <TxCard>\n        <Typography mb={1}>\n          This transaction will reset the Account setup, changing the signers\n          {newThreshold !== safe.threshold ? ' and threshold' : ''}.\n        </Typography>\n\n        <OwnerList owners={newOwners} />\n\n        <Divider className={commonCss.nestedDivider} sx={{ mt: 'var(--space-2) !important' }} />\n\n        <Box my={1}>\n          <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n            After recovery, Safe Account transactions will require:\n          </Typography>\n          <Typography>\n            <b>{params.threshold}</b> out of <b>{params[RecoverAccountFlowFields.owners].length} signers.</b>\n          </Typography>\n        </Box>\n\n        <Divider className={commonCss.nestedDivider} />\n\n        <DecodedTx txDetails={txDetails} tx={safeTx} {...txPreview} />\n\n        <BlockaidBalanceChanges />\n      </TxCard>\n\n      <TxChecks executionOwner={safe.owners[0].value} />\n\n      <TxCard>\n        <>\n          <ConfirmationTitle variant={ConfirmationTitleTypes.execute} />\n\n          {safeTxError && (\n            <ErrorMessage error={safeTxError}>\n              This recovery will most likely fail. To save gas costs, avoid executing the transaction.\n            </ErrorMessage>\n          )}\n\n          {executionValidationError && (\n            <ErrorMessage error={executionValidationError}>\n              This transaction will most likely fail. To save gas costs, avoid executing the transaction.\n            </ErrorMessage>\n          )}\n\n          {submitError && (\n            <ErrorMessage error={submitError}>Error submitting the transaction. Please try again.</ErrorMessage>\n          )}\n\n          <NetworkWarning />\n\n          {recovery?.delay !== undefined && (\n            <ErrorMessage level=\"info\">\n              Recovery will be{' '}\n              {recovery.delay === 0n ? 'immediately possible' : `possible in ${getPeriod(Number(recovery.delay))}`}{' '}\n              after this transaction is executed.\n            </ErrorMessage>\n          )}\n\n          {isRejectedByUser && <WalletRejectionError />}\n\n          <Divider className={commonCss.nestedDivider} />\n\n          <CardActions sx={{ mt: 'var(--space-1) !important' }}>\n            <CheckWallet allowNonOwner checkNetwork>\n              {(isOk) => (\n                <Button\n                  data-testid=\"execute-btn\"\n                  variant=\"contained\"\n                  disabled={!isOk || submitDisabled}\n                  onClick={onSubmit}\n                >\n                  {!isSubmittable ? <CircularProgress size={20} /> : 'Execute'}\n                </Button>\n              )}\n            </CheckWallet>\n          </CardActions>\n        </>\n      </TxCard>\n    </>\n  )\n}\n","import {\n  Typography,\n  Divider,\n  CardActions,\n  Button,\n  SvgIcon,\n  Grid,\n  MenuItem,\n  TextField,\n  IconButton,\n  Tooltip,\n  Alert,\n} from '@mui/material'\nimport { useForm, FormProvider, useFieldArray, Controller } from 'react-hook-form'\nimport { Fragment } from 'react'\nimport type { ReactElement } from 'react'\n\nimport TxCard from '../../common/TxCard'\nimport AddIcon from '@/public/images/common/add.svg'\nimport DeleteIcon from '@/public/images/common/delete.svg'\nimport { RecoverAccountFlowFields } from '.'\nimport AddressBookInput from '@/components/common/AddressBookInput'\nimport { TOOLTIP_TITLES } from '../../common/constants'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { sameAddress } from '@/utils/addresses'\nimport type { RecoverAccountFlowProps } from '.'\nimport type { AddressEx } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport { maybePlural } from '@/utils/formatters'\n\nexport function _isSameSetup({\n  oldOwners,\n  oldThreshold,\n  newOwners,\n  newThreshold,\n}: {\n  oldOwners: Array<AddressEx>\n  oldThreshold: number\n  newOwners: Array<AddressEx>\n  newThreshold: number\n}): boolean {\n  if (oldThreshold !== newThreshold) {\n    return false\n  }\n\n  if (oldOwners.length !== newOwners.length) {\n    return false\n  }\n\n  return oldOwners.every((oldOwner) => {\n    return newOwners.some((newOwner) => sameAddress(oldOwner.value, newOwner.value))\n  })\n}\n\nexport function RecoverAccountFlowSetup({\n  params,\n  onSubmit,\n}: {\n  params: RecoverAccountFlowProps\n  onSubmit: (formData: RecoverAccountFlowProps) => void\n}): ReactElement {\n  const { safeAddress, safe } = useSafeInfo()\n\n  const formMethods = useForm<RecoverAccountFlowProps>({\n    defaultValues: params,\n    mode: 'onChange',\n  })\n\n  const newOwners = formMethods.watch(RecoverAccountFlowFields.owners)\n  const newThreshold = formMethods.watch(RecoverAccountFlowFields.threshold)\n\n  const { fields, append, remove } = useFieldArray({\n    control: formMethods.control,\n    name: RecoverAccountFlowFields.owners,\n  })\n\n  const isSameSetup = _isSameSetup({\n    oldOwners: safe.owners,\n    oldThreshold: safe.threshold,\n    newOwners,\n    newThreshold: Number(newThreshold),\n  })\n\n  return (\n    <FormProvider {...formMethods}>\n      <form onSubmit={formMethods.handleSubmit(onSubmit)} className={commonCss.form}>\n        <TxCard>\n          <div>\n            <Typography\n              variant=\"h6\"\n              gutterBottom\n              sx={{\n                fontWeight: 700,\n              }}\n            >\n              Add signer(s)\n            </Typography>\n\n            <Typography\n              variant=\"body2\"\n              sx={{\n                mb: 1,\n              }}\n            >\n              Set the new signer wallet(s) of this Safe Account and how many need to confirm a transaction before it can\n              be executed.\n            </Typography>\n          </div>\n\n          <Grid container spacing={3} direction=\"row\">\n            {fields.map((field, index) => (\n              <Fragment key={index}>\n                <Grid item xs={11}>\n                  <AddressBookInput\n                    label={`Signer ${index + 1}`}\n                    name={`${RecoverAccountFlowFields.owners}.${index}.value`}\n                    required\n                    fullWidth\n                    key={field.id}\n                    validate={(value) => {\n                      if (sameAddress(value, safeAddress)) {\n                        return 'The Safe Account cannot own itself'\n                      }\n\n                      const isDuplicate = newOwners.filter((owner) => owner.value === value).length > 1\n                      if (isDuplicate) {\n                        return 'Already designated to be a signer'\n                      }\n                    }}\n                  />\n                </Grid>\n\n                <Grid\n                  item\n                  xs={1}\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  {index > 0 && (\n                    <IconButton onClick={() => remove(index)}>\n                      <SvgIcon component={DeleteIcon} inheritViewBox />\n                    </IconButton>\n                  )}\n                </Grid>\n              </Fragment>\n            ))}\n          </Grid>\n\n          <Button\n            onClick={() => append({ value: '' })}\n            variant=\"text\"\n            startIcon={<SvgIcon component={AddIcon} inheritViewBox fontSize=\"small\" />}\n            sx={{ alignSelf: 'flex-start', my: 1 }}\n          >\n            Add new signer\n          </Button>\n\n          <Divider className={commonCss.nestedDivider} />\n\n          <div>\n            <Typography\n              variant=\"h6\"\n              gutterBottom\n              sx={{\n                fontWeight: 700,\n              }}\n            >\n              Threshold\n              <Tooltip title={TOOLTIP_TITLES.THRESHOLD} arrow placement=\"top\">\n                <span>\n                  <SvgIcon\n                    component={InfoIcon}\n                    inheritViewBox\n                    color=\"border\"\n                    fontSize=\"small\"\n                    sx={{\n                      verticalAlign: 'middle',\n                      ml: 0.5,\n                    }}\n                  />\n                </span>\n              </Tooltip>\n            </Typography>\n\n            <Typography\n              variant=\"body2\"\n              sx={{\n                mb: 1,\n              }}\n            >\n              After recovery, Safe Account transactions will require:\n            </Typography>\n          </div>\n\n          <Grid\n            container\n            direction=\"row\"\n            sx={{\n              alignItems: 'center',\n              gap: 2,\n              mb: 1,\n            }}\n          >\n            <Grid item>\n              <Controller\n                control={formMethods.control}\n                name={RecoverAccountFlowFields.threshold}\n                render={({ field }) => (\n                  <TextField select {...field}>\n                    {fields.map((_, index) => {\n                      const value = index + 1\n                      return (\n                        <MenuItem key={index} value={value}>\n                          {value}\n                        </MenuItem>\n                      )\n                    })}\n                  </TextField>\n                )}\n              />\n            </Grid>\n\n            <Grid item>\n              <Typography>\n                out of {fields.length} signer{maybePlural(fields)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          {isSameSetup && (\n            <Alert severity=\"error\" sx={{ border: 'unset' }}>\n              The proposed Account setup is the same as the current one.\n            </Alert>\n          )}\n\n          <Divider className={commonCss.nestedDivider} />\n\n          <CardActions sx={{ mt: '0 !important' }}>\n            <Button data-testid=\"next-btn\" variant=\"contained\" type=\"submit\" sx={{ mt: 1 }} disabled={isSameSetup}>\n              Next\n            </Button>\n          </CardActions>\n        </TxCard>\n      </form>\n    </FormProvider>\n  )\n}\n","import { START_RECOVERY_CATEGORY } from '@/services/analytics/events/recovery'\nimport type { ReactElement } from 'react'\nimport type { AddressEx } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport TxLayout from '@/components/tx-flow/common/TxLayout'\nimport SaveAddressIcon from '@/public/images/common/save-address.svg'\nimport useTxStepper from '../../useTxStepper'\nimport { RecoverAccountFlowReview } from './RecoverAccountFlowReview'\nimport { RecoverAccountFlowSetup } from './RecoverAccountFlowSetup'\n\nexport enum RecoverAccountFlowFields {\n  owners = 'owners',\n  threshold = 'threshold',\n}\n\nexport type RecoverAccountFlowProps = {\n  // RHF accept primitive field arrays\n  [RecoverAccountFlowFields.owners]: Array<AddressEx>\n  [RecoverAccountFlowFields.threshold]: string\n}\n\nfunction RecoverAccountFlow(): ReactElement {\n  const { data, step, nextStep, prevStep } = useTxStepper<RecoverAccountFlowProps>(\n    {\n      [RecoverAccountFlowFields.owners]: [{ value: '' }],\n      [RecoverAccountFlowFields.threshold]: '1',\n    },\n    START_RECOVERY_CATEGORY,\n  )\n\n  const steps = [\n    <RecoverAccountFlowSetup key={0} params={data} onSubmit={(formData) => nextStep({ ...data, ...formData })} />,\n    <RecoverAccountFlowReview key={1} params={data} />,\n  ]\n\n  return (\n    <TxLayout\n      title={step === 0 ? 'Start Account recovery' : 'Confirm transaction'}\n      subtitle=\"Change Account settings\"\n      icon={SaveAddressIcon}\n      step={step}\n      onBack={prevStep}\n      hideNonce\n    >\n      {steps}\n    </TxLayout>\n  )\n}\n\nexport default RecoverAccountFlow\n","import { MODAL_NAVIGATION, trackEvent } from '@/services/analytics'\nimport { useCallback, useState } from 'react'\n\nconst useTxStepper = <T extends unknown>(initialData: T, eventCategory?: string) => {\n  const [step, setStep] = useState(0)\n  const [data, setData] = useState<T>(initialData)\n\n  const nextStep = useCallback(\n    (entireData: T) => {\n      setData(entireData)\n      setStep((prevStep) => {\n        if (eventCategory) {\n          trackEvent({ action: MODAL_NAVIGATION.Next, category: eventCategory, label: prevStep })\n        }\n\n        return prevStep + 1\n      })\n    },\n    [eventCategory],\n  )\n\n  const prevStep = useCallback(() => {\n    setStep((prevStep) => {\n      if (eventCategory) {\n        trackEvent({ action: MODAL_NAVIGATION.Back, category: eventCategory, label: prevStep })\n      }\n      return prevStep - 1\n    })\n  }, [eventCategory])\n\n  return { step, data, nextStep, prevStep }\n}\n\nexport default useTxStepper\n","import { selectDelayModifierByRecoverer } from '@/features/recovery/services/selectors'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport useRecovery from '@/features/recovery/hooks/useRecovery'\n\nexport function useIsRecoverer() {\n  const [recovery] = useRecovery()\n  const wallet = useWallet()\n  return Boolean(wallet?.address && recovery && selectDelayModifierByRecoverer(recovery, wallet.address))\n}\n","import { getModuleInstance, KnownContracts } from '@gnosis.pm/zodiac'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\n\nimport useWallet from '../../../hooks/wallets/useWallet'\nimport { useWeb3ReadOnly } from '../../../hooks/wallets/web3'\nimport useAsync from '../../../hooks/useAsync'\nimport useSafeInfo from '../../../hooks/useSafeInfo'\nimport { getPatchedSignerProvider } from '../../../hooks/useIsValidExecution'\nimport { useRecoveryTxState } from './useRecoveryTxState'\nimport { useIsRecoverer } from './useIsRecoverer'\nimport type { AsyncResult } from '../../../hooks/useAsync'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\n\nexport function useIsValidRecoveryExecTransactionFromModule(\n  delayModifierAddress?: string,\n  safeTx?: SafeTransaction,\n): AsyncResult<boolean> {\n  const wallet = useWallet()\n  const { safe } = useSafeInfo()\n  const web3ReadOnly = useWeb3ReadOnly()\n  const isRecoverer = useIsRecoverer()\n\n  return useAsync(async () => {\n    if (!isRecoverer || !safeTx || !wallet || !web3ReadOnly || !delayModifierAddress) {\n      return\n    }\n\n    const provider = getPatchedSignerProvider(wallet, safe.chainId, web3ReadOnly)\n    const delayModifier = getModuleInstance(KnownContracts.DELAY, delayModifierAddress, provider)\n\n    const signer = await provider.getSigner()\n    const contract = delayModifier.connect(signer)\n\n    return contract.execTransactionFromModule.staticCall(\n      safeTx.data.to,\n      safeTx.data.value,\n      safeTx.data.data,\n      safeTx.data.operation,\n    )\n  }, [isRecoverer, safeTx, wallet, web3ReadOnly, safe.chainId, delayModifierAddress])\n}\n\nexport function useIsValidRecoveryExecuteNextTx(recovery: RecoveryQueueItem): AsyncResult<boolean> {\n  const wallet = useWallet()\n  const { safe } = useSafeInfo()\n  const web3ReadOnly = useWeb3ReadOnly()\n  const { isExecutable } = useRecoveryTxState(recovery)\n\n  return useAsync(async () => {\n    if (!isExecutable || !wallet?.address || !web3ReadOnly) {\n      return\n    }\n\n    const provider = getPatchedSignerProvider(wallet, safe.chainId, web3ReadOnly)\n    const delayModifier = getModuleInstance(KnownContracts.DELAY, recovery.address, provider)\n\n    const signer = await provider.getSigner()\n    const contract = delayModifier.connect(signer)\n\n    const { to, value, data, operation } = recovery.args\n\n    await contract.executeNextTx.staticCall(to, value, data, operation)\n\n    return true\n  }, [isExecutable, recovery.address, recovery.args, safe.chainId, wallet, web3ReadOnly])\n}\n\nexport function useIsValidRecoverySkipExpired(recovery: RecoveryQueueItem): AsyncResult<boolean> {\n  const wallet = useWallet()\n  const { safe } = useSafeInfo()\n  const web3ReadOnly = useWeb3ReadOnly()\n  const { isExpired } = useRecoveryTxState(recovery)\n\n  return useAsync(async () => {\n    if (!isExpired || !wallet?.address || !web3ReadOnly) {\n      return\n    }\n\n    const provider = getPatchedSignerProvider(wallet, safe.chainId, web3ReadOnly)\n    const delayModifier = getModuleInstance(KnownContracts.DELAY, recovery.address, provider)\n\n    const signer = await provider.getSigner()\n    const contract = delayModifier.connect(signer)\n\n    await contract.skipExpired.staticCall()\n\n    return true\n  }, [isExpired, recovery.address, safe.chainId, wallet, web3ReadOnly])\n}\n","import { useState, useEffect } from 'react'\n\nexport function useClock(interval = 1_000): number {\n  const [timestamp, setTimestamp] = useState(Date.now())\n\n  useEffect(() => {\n    const timeout = setInterval(() => {\n      setTimestamp((prev) => prev + interval)\n    }, interval)\n\n    return () => {\n      clearInterval(timeout)\n    }\n  }, [interval])\n\n  return timestamp\n}\n","import { useClock } from '../../../hooks/useClock'\nimport { selectDelayModifierByTxHash } from '@/features/recovery/services/selectors'\nimport recoveryStore from '@/features/recovery/components/RecoveryContext'\nimport { sameAddress } from '@/utils/addresses'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\n\nexport function useRecoveryTxState({ validFrom, expiresAt, transactionHash, args, address }: RecoveryQueueItem): {\n  isNext: boolean\n  isExecutable: boolean\n  isExpired: boolean\n  isPending: boolean\n  remainingSeconds: number\n} {\n  const { state, pending } = recoveryStore.useStore() || {}\n  const recovery = state?.[0]\n  const delayModifier = recovery && selectDelayModifierByTxHash(recovery, transactionHash)\n\n  // We don't display seconds in the interface, so we can use a 60s interval\n  const timestamp = useClock(60_000)\n  const remainingMs = Number(validFrom) - timestamp\n\n  const isValid = remainingMs <= 0\n  const isExpired = expiresAt !== null ? Number(expiresAt) <= Date.now() : false\n\n  // Check module address in case multiple Delay Modifiers enabled\n  const isNext =\n    !delayModifier ||\n    (sameAddress(delayModifier.address, address) && BigInt(args.queueNonce) === BigInt(delayModifier.txNonce))\n  const isExecutable = isNext && isValid && !isExpired\n  const isPending = !!pending?.[args.txHash]\n\n  const remainingSeconds = isValid ? 0 : Math.ceil(remainingMs / 1_000)\n\n  return { isNext, isExecutable, isExpired, remainingSeconds, isPending }\n}\n","import { getModuleInstance, KnownContracts } from '@gnosis.pm/zodiac'\nimport type { SafeInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport type { TransactionAddedEvent } from '@gnosis.pm/zodiac/dist/cjs/types/Delay'\nimport type { Eip1193Provider, TransactionResponse } from 'ethers'\n\nimport { didReprice, didRevert } from '@/utils/ethers-utils'\nimport { recoveryDispatch, RecoveryEvent, RecoveryTxType } from './recoveryEvents'\nimport { asError } from '@/services/exceptions/utils'\nimport { getUncheckedSigner } from '../../../services/tx/tx-sender/sdk'\nimport { isSmartContractWallet } from '@/utils/wallets'\n\nasync function getDelayModifierContract({\n  provider,\n  chainId,\n  delayModifierAddress,\n  signerAddress,\n}: {\n  provider: Eip1193Provider\n  chainId: string\n  delayModifierAddress: string\n  signerAddress: string\n}) {\n  const isSmartContract = await isSmartContractWallet(chainId, signerAddress)\n\n  const signer = await getUncheckedSigner(provider)\n  const delayModifier = getModuleInstance(KnownContracts.DELAY, delayModifierAddress, signer).connect(signer)\n\n  return {\n    isUnchecked: isSmartContract,\n    delayModifier,\n  }\n}\n\nfunction waitForRecoveryTx({\n  tx,\n  ...payload\n}: {\n  moduleAddress: string\n  recoveryTxHash: string\n  tx: TransactionResponse\n  txType: RecoveryTxType\n}) {\n  const event = {\n    ...payload,\n    txHash: tx.hash,\n  }\n\n  recoveryDispatch(RecoveryEvent.PROCESSING, event)\n  tx.wait()\n    .then((receipt) => {\n      if (didRevert(receipt!)) {\n        recoveryDispatch(RecoveryEvent.REVERTED, {\n          ...event,\n          error: new Error('Transaction reverted by EVM'),\n        })\n      } else {\n        recoveryDispatch(RecoveryEvent.PROCESSED, event)\n      }\n    })\n    .catch((error) => {\n      if (didReprice(error)) {\n        recoveryDispatch(RecoveryEvent.PROCESSED, event)\n      } else {\n        recoveryDispatch(RecoveryEvent.FAILED, {\n          ...event,\n          error: asError(error),\n        })\n      }\n    })\n}\n\nexport async function dispatchRecoveryProposal({\n  provider,\n  safe,\n  safeTx,\n  delayModifierAddress,\n  signerAddress,\n}: {\n  provider: Eip1193Provider\n  safe: SafeInfo\n  safeTx: SafeTransaction\n  delayModifierAddress: string\n  signerAddress: string\n}) {\n  const { delayModifier, isUnchecked } = await getDelayModifierContract({\n    provider,\n    chainId: safe.chainId,\n    delayModifierAddress,\n    signerAddress,\n  })\n\n  const txType = RecoveryTxType.PROPOSAL\n  let recoveryTxHash: string | undefined\n\n  try {\n    // Get recovery tx hash as a form of ID for FAILED event in event bus\n    recoveryTxHash = await delayModifier.getTransactionHash(\n      safeTx.data.to,\n      safeTx.data.value,\n      safeTx.data.data,\n      safeTx.data.operation,\n    )\n\n    const tx = await delayModifier.execTransactionFromModule(\n      safeTx.data.to,\n      safeTx.data.value,\n      safeTx.data.data,\n      safeTx.data.operation,\n    )\n\n    if (isUnchecked) {\n      recoveryDispatch(RecoveryEvent.PROCESSING_BY_SMART_CONTRACT_WALLET, {\n        moduleAddress: delayModifierAddress,\n        recoveryTxHash,\n        txType,\n        txHash: tx.hash,\n      })\n    } else {\n      waitForRecoveryTx({\n        moduleAddress: delayModifierAddress,\n        recoveryTxHash,\n        txType,\n        tx,\n      })\n    }\n  } catch (error) {\n    recoveryDispatch(RecoveryEvent.FAILED, {\n      moduleAddress: delayModifierAddress,\n      recoveryTxHash,\n      txType,\n      error: asError(error),\n    })\n\n    throw error\n  }\n}\n\nexport async function dispatchRecoveryExecution({\n  provider,\n  chainId,\n  args,\n  delayModifierAddress,\n  signerAddress,\n}: {\n  provider: Eip1193Provider\n  chainId: string\n  args: TransactionAddedEvent.Log['args']\n  delayModifierAddress: string\n  signerAddress: string\n}) {\n  const { delayModifier, isUnchecked } = await getDelayModifierContract({\n    provider,\n    chainId,\n    delayModifierAddress,\n    signerAddress,\n  })\n\n  const txType = RecoveryTxType.EXECUTION\n\n  try {\n    const tx = await delayModifier.executeNextTx(args.to, args.value, args.data, args.operation)\n\n    if (isUnchecked) {\n      recoveryDispatch(RecoveryEvent.PROCESSING_BY_SMART_CONTRACT_WALLET, {\n        moduleAddress: delayModifierAddress,\n        recoveryTxHash: args.txHash,\n        txType,\n        txHash: tx.hash,\n      })\n    } else {\n      waitForRecoveryTx({\n        moduleAddress: delayModifierAddress,\n        recoveryTxHash: args.txHash,\n        txType,\n        tx,\n      })\n    }\n  } catch (error) {\n    recoveryDispatch(RecoveryEvent.FAILED, {\n      moduleAddress: delayModifierAddress,\n      recoveryTxHash: args.txHash,\n      txType,\n      error: asError(error),\n    })\n\n    throw error\n  }\n}\n\nexport async function dispatchRecoverySkipExpired({\n  provider,\n  chainId,\n  delayModifierAddress,\n  recoveryTxHash,\n  signerAddress,\n}: {\n  provider: Eip1193Provider\n  chainId: string\n  delayModifierAddress: string\n  recoveryTxHash: string\n  signerAddress: string\n}) {\n  const { delayModifier, isUnchecked } = await getDelayModifierContract({\n    provider,\n    chainId,\n    delayModifierAddress,\n    signerAddress,\n  })\n\n  const txType = RecoveryTxType.SKIP_EXPIRED\n\n  try {\n    const tx = await delayModifier.skipExpired()\n\n    if (isUnchecked) {\n      recoveryDispatch(RecoveryEvent.PROCESSING_BY_SMART_CONTRACT_WALLET, {\n        moduleAddress: delayModifierAddress,\n        recoveryTxHash,\n        txType,\n        txHash: tx.hash,\n      })\n    } else {\n      waitForRecoveryTx({\n        moduleAddress: delayModifierAddress,\n        recoveryTxHash,\n        txType,\n        tx,\n      })\n    }\n  } catch (error) {\n    recoveryDispatch(RecoveryEvent.FAILED, {\n      moduleAddress: delayModifierAddress,\n      recoveryTxHash,\n      txType,\n      error: asError(error),\n    })\n\n    throw error\n  }\n}\n","import EventBus from '../../../services/EventBus'\n\nexport enum RecoveryEvent {\n  PROCESSING_BY_SMART_CONTRACT_WALLET = 'PROCESSING_BY_SMART_CONTRACT_WALLET',\n  PROCESSING = 'PROCESSING', // Submitted to the blockchain\n  PROCESSED = 'PROCESSED', // Executed on the blockchain\n  SUCCESS = 'SUCCESS', // Loaded from the blockchain\n  FAILED = 'FAILED',\n  REVERTED = 'REVERTED',\n}\n\nexport enum RecoveryTxType {\n  PROPOSAL = 'PROPOSAL',\n  EXECUTION = 'EXECUTION',\n  SKIP_EXPIRED = 'SKIP_EXPIRED',\n}\n\nexport interface RecoveryEvents {\n  [RecoveryEvent.PROCESSING_BY_SMART_CONTRACT_WALLET]: {\n    moduleAddress: string\n    txHash: string\n    recoveryTxHash: string\n    txType: RecoveryTxType\n  }\n  [RecoveryEvent.PROCESSING]: {\n    moduleAddress: string\n    txHash: string\n    recoveryTxHash: string\n    txType: RecoveryTxType\n  }\n  [RecoveryEvent.REVERTED]: {\n    moduleAddress: string\n    txHash: string\n    recoveryTxHash: string\n    error: Error\n    txType: RecoveryTxType\n  }\n  [RecoveryEvent.PROCESSED]: {\n    moduleAddress: string\n    txHash: string\n    recoveryTxHash: string\n    txType: RecoveryTxType\n  }\n  [RecoveryEvent.FAILED]: {\n    moduleAddress: string\n    txHash?: string\n    recoveryTxHash?: string\n    error: Error\n    txType: RecoveryTxType\n  }\n  [RecoveryEvent.SUCCESS]: {\n    recoveryTxHash: string\n    txType: RecoveryTxType\n  }\n}\n\nconst recoveryEventBus = new EventBus<RecoveryEvents>()\n\nexport const recoveryDispatch = recoveryEventBus.dispatch.bind(recoveryEventBus)\n\nexport const recoverySubscribe = recoveryEventBus.subscribe.bind(recoveryEventBus)\n\n// Log all events\nObject.values(RecoveryEvent).forEach((event: RecoveryEvent) => {\n  recoverySubscribe<RecoveryEvent>(event, (detail) => {\n    console.info(`Recovery ${event} event received`, detail)\n  })\n})\n","import { Interface } from 'ethers'\nimport { getSafeSingletonDeployment } from '@safe-global/safe-deployments'\nimport { SENTINEL_ADDRESS } from '@safe-global/protocol-kit/dist/src/utils/constants'\nimport { OperationType } from '@safe-global/safe-core-sdk-types'\nimport { sameAddress } from '@/utils/addresses'\nimport { getModuleInstance, KnownContracts } from '@gnosis.pm/zodiac'\nimport type { MetaTransactionData } from '@safe-global/safe-core-sdk-types'\nimport type { AddressEx, SafeInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\nimport type { Provider } from 'ethers'\n\nexport function getRecoveryProposalTransactions({\n  safe,\n  newThreshold,\n  newOwners,\n}: {\n  safe: SafeInfo\n  newThreshold: number\n  newOwners: Array<AddressEx>\n}): Array<MetaTransactionData> {\n  const safeDeployment = getSafeSingletonDeployment({ network: safe.chainId, version: safe.version ?? undefined })\n\n  if (!safeDeployment) {\n    throw new Error('Safe deployment not found')\n  }\n\n  const safeInterface = new Interface(safeDeployment.abi)\n\n  // Cache owner changes to determine prevOwner\n  let _owners = safe.owners.map((owner) => owner.value)\n\n  // Don't add/remove same owners\n  const ownersToAdd = newOwners\n    .filter((newOwner) => !_owners.some((oldOwner) => sameAddress(oldOwner, newOwner.value)))\n    .map((owner) => owner.value)\n  const ownersToRemove = _owners.filter(\n    (oldOwner) => !newOwners.some((newOwner) => sameAddress(newOwner.value, oldOwner)),\n  )\n\n  // Check whether threshold should be changed after owner management\n  let changeThreshold = newThreshold !== safe.threshold\n\n  // Owner management transaction data\n  const txData: Array<string> = []\n\n  // Iterate of existing/new owners and swap, add, remove accordingly\n  for (let index = 0; index < Math.max(ownersToAdd.length, ownersToRemove.length); index++) {\n    const ownerToAdd = ownersToAdd[index]\n    const ownerToRemove = ownersToRemove[index]\n\n    const prevOwner = (() => {\n      const ownerIndex = _owners.findIndex((owner) => sameAddress(owner, ownerToRemove))\n      return ownerIndex === 0 ? SENTINEL_ADDRESS : _owners[ownerIndex - 1]\n    })()\n\n    // Swap existing owner with new one\n    if (ownerToRemove && ownerToAdd) {\n      const swapOwner = safeInterface.encodeFunctionData('swapOwner', [prevOwner, ownerToRemove, ownerToAdd])\n      txData.push(swapOwner)\n\n      // Swap owner in cache\n      _owners = _owners.map((owner) => (sameAddress(owner, ownerToRemove) ? ownersToAdd[index] : owner))\n    }\n    // Add new owner and set threshold\n    else if (ownerToAdd) {\n      const threshold = Math.min(newThreshold, _owners.length + 1)\n\n      const addOwnerWithThreshold = safeInterface.encodeFunctionData('addOwnerWithThreshold', [ownerToAdd, threshold])\n      txData.push(addOwnerWithThreshold)\n\n      changeThreshold = false\n\n      // Add owner to cache\n      _owners.push(ownerToAdd)\n    }\n    // Remove existing owner and set threshold\n    else if (ownerToRemove) {\n      const threshold = Math.min(newThreshold, _owners.length - 1)\n\n      const removeOwner = safeInterface.encodeFunctionData('removeOwner', [prevOwner, ownerToRemove, threshold])\n      txData.push(removeOwner)\n\n      changeThreshold = false\n\n      // Remove owner from cache\n      _owners = _owners.filter((owner) => !sameAddress(owner, ownerToRemove))\n    }\n  }\n\n  // Only swapOwner will be called\n  if (changeThreshold) {\n    txData.push(safeInterface.encodeFunctionData('changeThreshold', [newThreshold]))\n  }\n\n  return txData.map((data) => ({\n    to: safe.address.value,\n    value: '0',\n    operation: OperationType.Call,\n    data,\n  }))\n}\n\nexport async function getRecoverySkipTransaction(\n  recovery: RecoveryQueueItem,\n  provider: Provider,\n): Promise<MetaTransactionData> {\n  const delayModifier = getModuleInstance(KnownContracts.DELAY, recovery.address, provider)\n\n  const newTxNonce = recovery.args.queueNonce + 1n\n\n  return {\n    to: await delayModifier.getAddress(),\n    value: '0',\n    operation: OperationType.Call,\n    data: delayModifier.interface.encodeFunctionData('setTxNonce', [newTxNonce]),\n  }\n}\n","import { EventType } from '@/services/analytics'\n\n// These are used for the generic stepper flow events (Next, Back)\nexport const SETUP_RECOVERY_CATEGORY = 'setup-recovery'\nexport const START_RECOVERY_CATEGORY = 'propose-recovery'\nexport const REMOVE_RECOVERY_CATEGORY = 'remove-recovery'\nexport const CANCEL_RECOVERY_CATEGORY = 'cancel-recovery'\n\nconst RECOVERY_CATEGORY = 'recovery'\n\nexport const RECOVERY_EVENTS = {\n  SETUP_RECOVERY: {\n    action: 'Start recovery setup',\n    category: RECOVERY_CATEGORY,\n  },\n  SELECT_RECOVERY_METHOD: {\n    action: 'Select recovery method',\n    category: RECOVERY_CATEGORY,\n  },\n  CONTINUE_WITH_RECOVERY: {\n    action: 'Continue with recovery method',\n    category: RECOVERY_CATEGORY,\n  },\n  CONTINUE_TO_WAITLIST: {\n    action: 'Continue to waitlist',\n    category: RECOVERY_CATEGORY,\n  },\n  SYGNUM_APP: {\n    action: 'Go to Sygnum app',\n    category: RECOVERY_CATEGORY,\n  },\n  RECOVERY_SETTINGS: {\n    action: 'Recovery settings',\n    category: RECOVERY_CATEGORY,\n    event: EventType.META,\n  },\n  EDIT_RECOVERY: {\n    action: 'Start edit recovery',\n    category: RECOVERY_CATEGORY,\n  },\n  REMOVE_RECOVERY: {\n    action: 'Start recovery removal',\n    category: RECOVERY_CATEGORY,\n  },\n  START_RECOVERY: {\n    action: 'Start recovery proposal',\n    category: RECOVERY_CATEGORY,\n  },\n  CANCEL_RECOVERY: {\n    action: 'Start recovery cancellation',\n    category: RECOVERY_CATEGORY,\n  },\n  SHOW_ADVANCED: {\n    action: 'Show advanced recovery settings',\n    category: RECOVERY_CATEGORY,\n  },\n  DISMISS_PROPOSAL_CARD: {\n    action: 'Dismiss recovery proposal card',\n    category: RECOVERY_CATEGORY,\n  },\n  LEARN_MORE: {\n    action: 'Recovery info click',\n    category: RECOVERY_CATEGORY,\n  },\n  GO_BACK: {\n    action: 'Recovery cancellation back',\n    category: RECOVERY_CATEGORY,\n  },\n  GIVE_US_FEEDBACK: {\n    action: 'Recovery feedback click',\n    category: RECOVERY_CATEGORY,\n    event: EventType.CLICK,\n  },\n  CHECK_RECOVERY_PROPOSAL: {\n    action: 'Check recovery proposal',\n    category: RECOVERY_CATEGORY,\n  },\n  SUBMIT_RECOVERY_CREATE: {\n    action: 'Submit recovery setup',\n    category: RECOVERY_CATEGORY,\n    event: EventType.META,\n  },\n  SUBMIT_RECOVERY_EDIT: {\n    action: 'Submit recovery edit',\n    category: RECOVERY_CATEGORY,\n    event: EventType.META,\n  },\n  SUBMIT_RECOVERY_REMOVE: {\n    action: 'Submit recovery remove',\n    category: RECOVERY_CATEGORY,\n    event: EventType.META,\n  },\n  SUBMIT_RECOVERY_ATTEMPT: {\n    action: 'Submit recovery attempt',\n    category: RECOVERY_CATEGORY,\n    event: EventType.META,\n  },\n  SUBMIT_RECOVERY_CANCEL: {\n    action: 'Submit recovery cancel',\n    category: RECOVERY_CATEGORY,\n    event: EventType.META,\n  },\n}\n","import { TransactionInfoType } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { Transaction, TransactionListItem } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport { isConflictHeaderListItem, isNoneConflictType, isTransactionListItem } from '@/utils/transaction-guards'\nimport { sameAddress } from './addresses'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\n\ntype GroupedTxs = Array<TransactionListItem | Transaction[]>\n\nexport const groupTxs = (list: TransactionListItem[]) => {\n  const groupedByConflicts = groupConflictingTxs(list)\n  return groupBulkTxs(groupedByConflicts)\n}\n\n/**\n * Group txs by conflict header\n */\nexport const groupConflictingTxs = (list: TransactionListItem[]): GroupedTxs => {\n  return list\n    .reduce<GroupedTxs>((resultItems, item) => {\n      if (isConflictHeaderListItem(item)) {\n        return resultItems.concat([[]])\n      }\n\n      const prevItem = resultItems[resultItems.length - 1]\n      if (Array.isArray(prevItem) && isTransactionListItem(item) && !isNoneConflictType(item)) {\n        prevItem.push(item)\n        return resultItems\n      }\n\n      return resultItems.concat(item)\n    }, [])\n    .map((item) => {\n      if (Array.isArray(item)) {\n        return item.sort((a, b) => b.transaction.timestamp - a.transaction.timestamp)\n      }\n      return item\n    })\n}\n\n/**\n * Group txs by tx hash\n */\nconst groupBulkTxs = (list: GroupedTxs): GroupedTxs => {\n  return list\n    .reduce<GroupedTxs>((resultItems, item) => {\n      if (Array.isArray(item) || !isTransactionListItem(item)) {\n        return resultItems.concat([item])\n      }\n      const currentTxHash = item.transaction.txHash\n\n      const prevItem = resultItems[resultItems.length - 1]\n      if (!Array.isArray(prevItem)) return resultItems.concat([[item]])\n      const prevTxHash = prevItem[0].transaction.txHash\n\n      if (currentTxHash && currentTxHash === prevTxHash) {\n        prevItem.push(item)\n        return resultItems\n      }\n\n      return resultItems.concat([[item]])\n    }, [])\n    .map((item) => (Array.isArray(item) && item.length === 1 ? item[0] : item))\n}\n\nexport function _getRecoveryCancellations(moduleAddress: string, transactions: Array<Transaction>) {\n  const CANCELLATION_TX_METHOD_NAME = 'setTxNonce'\n\n  return transactions.filter(({ transaction }) => {\n    const { txInfo } = transaction\n    return (\n      txInfo.type === TransactionInfoType.CUSTOM &&\n      sameAddress(txInfo.to.value, moduleAddress) &&\n      txInfo.methodName === CANCELLATION_TX_METHOD_NAME\n    )\n  })\n}\n\ntype GroupedRecoveryQueueItem = Transaction | RecoveryQueueItem\n\nexport function groupRecoveryTransactions(queue: Array<TransactionListItem>, recoveryQueue: Array<RecoveryQueueItem>) {\n  const transactions = queue.filter(isTransactionListItem)\n\n  return recoveryQueue.reduce<Array<RecoveryQueueItem | Array<GroupedRecoveryQueueItem>>>((acc, item) => {\n    const cancellations = _getRecoveryCancellations(item.address, transactions)\n\n    if (cancellations.length === 0) {\n      acc.push(item)\n    } else {\n      acc.push([item, ...cancellations])\n    }\n\n    return acc\n  }, [])\n}\n\nexport const getLatestTransactions = (list: TransactionListItem[] = []): Transaction[] => {\n  return (\n    groupConflictingTxs(list)\n      // Get latest transaction if there are conflicting ones\n      .map((group) => (Array.isArray(group) ? group[0] : group))\n      .filter(isTransactionListItem)\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unknownAddress\":\"styles_unknownAddress__BH1i2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hint\":\"styles_hint__v_t63\",\"wrapperBox\":\"styles_wrapperBox__ppVp9\",\"loader\":\"styles_loader__bgS9a\",\"balanceChanges\":\"styles_balanceChanges__QlyzE\",\"balanceChange\":\"styles_balanceChange__cDx7u\",\"nftId\":\"styles_nftId__Scv4B\",\"categoryChip\":\"styles_categoryChip__Tnz31\",\"box\":\"styles_box__5vEUs\",\"checkboxError\":\"styles_checkboxError__UNbLi\",\"popup\":\"styles_popup__QJ_CT\",\"redefine\":\"styles_redefine__ZKgPE\",\"resultAccordion\":\"styles_resultAccordion__TqIPG\",\"customAlert\":\"styles_customAlert__GQIZM\",\"riskConfirmationBlock\":\"styles_riskConfirmationBlock__y38Ew\"};","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgClose = function SvgClose(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 15,\n    viewBox: \"0 0 15 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8.47717 7.69172L13.7585 12.832C14.1467 13.2098 14.1467 13.8275 13.7585 14.2052C13.3694 14.583 12.7358 14.583 12.3476 14.2052L7.06626 9.06494L1.7849 14.2052C1.39575 14.583 0.76214 14.583 0.373991 14.2052C-0.0151556 13.8275 -0.0151556 13.2098 0.373991 12.832L5.65536 7.69172L0.373891 2.55133C-0.0152554 2.17354 -0.0152554 1.55589 0.373891 1.17811C0.76204 0.799355 1.39565 0.799355 1.7848 1.17811L7.06626 6.3185L12.3477 1.17811C12.7359 0.799355 13.3695 0.799355 13.7586 1.17811C14.1468 1.55589 14.1468 2.17354 13.7586 2.55133L8.47717 7.69172Z\",\n    fill: \"currentColor\"\n  })));\n};\nexport default SvgClose;"],"names":["abFilterOptions","createFilterOptions","stringify","option","name","label","canAdd","props","AddressBookInput","addressBook","useAddressBook","setValue","control","useFormContext","addressValue","useWatch","open","setOpen","useState","openAddressBook","setOpenAddressBook","addressBookEntries","Object","entries","map","address","hasVisibleOptions","useMemo","filter","entry","includes","length","isInAddressBook","some","sameAddress","customFilterOptions","options","state","isValidAddress","handleOpenAutocomplete","value","onAddressBookClick","undefined","Controller","render","field","ref","Autocomplete","className","inputCss","disabled","readOnly","InputProps","freeSolo","onChange","_","onInputChange","filterOptions","componentsProps","paper","elevation","renderOption","key","rest","Typography","data-testid","component","variant","EthHashInfo","shortAddress","copyAddress","renderInput","AddressInput","params","focused","onOpenListClick","isAutocompleteOpen","css","SvgIcon","InfoIcon","fontSize","span","a","role","onClick","EntryDialog","handleClose","defaultValues","action","chain","useCurrentChain","NetworkWarning","isWrongChain","useIsWrongChain","Alert","severity","AlertTitle","sx","fontWeight","chainName","Box","mt","ChainSwitcher","TOOLTIP_TITLES","THRESHOLD","REVIEW_WINDOW","PROPOSAL_EXPIRY","RecoverAccountFlowReview","wallet","isSubmittable","setIsSubmittable","submitError","setSubmitError","isRejectedByUser","setIsRejectedByUser","setTxFlow","useContext","TxModalContext","safeTx","safeTxError","setSafeTx","setSafeTxError","SafeTxContext","safe","useSafeInfo","useWallet","onboard","useOnboard","data","useRecovery","recovery","selectDelayModifierByRecoverer","executionValidationError","useIsValidRecoveryExecTransactionFromModule","txDetails","useGetTransactionDetailsQuery","skipToken","txPreview","useTxPreview","txId","newThreshold","RecoverAccountFlowFields","threshold","newOwners","owners","useEffect","transactions","getRecoveryProposalTransactions","promise","createMultiSendCallOnlyTx","createTx","then","catch","onSubmit","dispatchRecoveryProposal","provider","delayModifierAddress","signerAddress","trackEvent","RECOVERY_EVENTS","SUBMIT_RECOVERY_ATTEMPT","_err","err","asError","isWalletRejection","trackError","Errors","_804","submitDisabled","TxCard","mb","OwnerList","Divider","commonCss","my","color","gutterBottom","b","DecodedTx","tx","BlockaidBalanceChanges","TxChecks","executionOwner","ConfirmationTitle","ConfirmationTitleTypes","execute","ErrorMessage","error","delay","level","getPeriod","Number","WalletRejectionError","CardActions","CheckWallet","allowNonOwner","checkNetwork","Button","isOk","CircularProgress","size","RecoverAccountFlowSetup","safeAddress","formMethods","useForm","mode","watch","fields","append","remove","useFieldArray","isSameSetup","_isSameSetup","oldOwners","oldThreshold","every","oldOwner","newOwner","FormProvider","form","handleSubmit","div","Grid","container","spacing","direction","index","Fragment","item","xs","required","fullWidth","validate","owner","id","display","alignItems","justifyContent","IconButton","DeleteIcon","inheritViewBox","startIcon","AddIcon","alignSelf","Tooltip","title","arrow","placement","verticalAlign","ml","gap","TextField","select","MenuItem","maybePlural","border","type","RecoverAccountFlow","step","nextStep","prevStep","useTxStepper","START_RECOVERY_CATEGORY","steps","formData","TxLayout","subtitle","icon","SaveAddressIcon","onBack","hideNonce","initialData","eventCategory","setStep","setData","useCallback","entireData","MODAL_NAVIGATION","Next","category","Back","useIsRecoverer","Boolean","web3ReadOnly","useWeb3ReadOnly","isRecoverer","useAsync","getPatchedSignerProvider","chainId","delayModifier","getModuleInstance","KnownContracts","DELAY","signer","getSigner","connect","execTransactionFromModule","staticCall","to","operation","useIsValidRecoveryExecuteNextTx","isExecutable","useRecoveryTxState","contract","args","executeNextTx","useIsValidRecoverySkipExpired","isExpired","skipExpired","validFrom","expiresAt","transactionHash","pending","recoveryStore","useStore","selectDelayModifierByTxHash","timestamp","useClock","interval","setTimestamp","Date","now","timeout","setInterval","prev","clearInterval","remainingMs","isValid","isNext","BigInt","queueNonce","txNonce","isPending","txHash","remainingSeconds","Math","ceil","getDelayModifierContract","isSmartContract","isSmartContractWallet","getUncheckedSigner","isUnchecked","waitForRecoveryTx","payload","event","hash","recoveryDispatch","RecoveryEvent","PROCESSING","wait","receipt","didRevert","REVERTED","PROCESSED","didReprice","FAILED","recoveryTxHash","txType","RecoveryTxType","PROPOSAL","getTransactionHash","PROCESSING_BY_SMART_CONTRACT_WALLET","moduleAddress","dispatchRecoveryExecution","EXECUTION","dispatchRecoverySkipExpired","SKIP_EXPIRED","recoveryEventBus","EventBus","dispatch","bind","recoverySubscribe","subscribe","values","forEach","console","info","detail","safeDeployment","getSafeSingletonDeployment","network","version","safeInterface","Interface","abi","_owners","ownersToAdd","ownersToRemove","changeThreshold","txData","max","ownerToAdd","ownerToRemove","prevOwner","ownerIndex","findIndex","SENTINEL_ADDRESS","swapOwner","encodeFunctionData","push","min","addOwnerWithThreshold","removeOwner","OperationType","Call","getRecoverySkipTransaction","newTxNonce","getAddress","interface","SETUP_RECOVERY_CATEGORY","SETUP_RECOVERY","RECOVERY_CATEGORY","SELECT_RECOVERY_METHOD","CONTINUE_WITH_RECOVERY","CONTINUE_TO_WAITLIST","SYGNUM_APP","RECOVERY_SETTINGS","EventType","META","EDIT_RECOVERY","REMOVE_RECOVERY","START_RECOVERY","CANCEL_RECOVERY","SHOW_ADVANCED","DISMISS_PROPOSAL_CARD","LEARN_MORE","GO_BACK","GIVE_US_FEEDBACK","CLICK","CHECK_RECOVERY_PROPOSAL","SUBMIT_RECOVERY_CREATE","SUBMIT_RECOVERY_EDIT","SUBMIT_RECOVERY_REMOVE","SUBMIT_RECOVERY_CANCEL","groupTxs","list","groupBulkTxs","groupConflictingTxs","groupedByConflicts","reduce","resultItems","isConflictHeaderListItem","concat","prevItem","isArray","isTransactionListItem","isNoneConflictType","sort","transaction","Array","currentTxHash","prevTxHash","groupRecoveryTransactions","queue","recoveryQueue","acc","cancellations","txInfo","TransactionInfoType","CUSTOM","methodName","CANCELLATION_TX_METHOD_NAME","getLatestTransactions","group"],"sourceRoot":"","ignoreList":[]}