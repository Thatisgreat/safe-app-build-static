{"version":3,"file":"static/chunks/1398.ea86d88e928153c7.js","mappings":"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","sources":["webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/new-safe/create/NetworkWarning/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/ExecuteBatch/DecodedTxs.tsx","webpack://_N_E/./src/components/tx-flow/flows/ExecuteBatch/ReviewBatch.tsx","webpack://_N_E/./src/components/tx-flow/flows/ExecuteBatch/index.tsx","webpack://_N_E/./src/components/tx/AdvancedParams/useUserNonce.ts","webpack://_N_E/./src/components/tx/SponsoredBy/index.tsx","webpack://_N_E/./src/components/tx/RemainingRelays/index.tsx","webpack://_N_E/./src/components/tx/BalanceInfo/index.tsx","webpack://_N_E/./src/components/tx/ExecutionMethodSelector/index.tsx","webpack://_N_E/./src/components/tx/SignOrExecuteForm/ConfirmationTitle.tsx","webpack://_N_E/./src/components/tx/SignOrExecuteForm/WalletRejectionError.tsx","webpack://_N_E/./src/hooks/useGasPrice.ts","webpack://_N_E/./src/hooks/useRemainingRelays.ts","webpack://_N_E/./src/hooks/wallets/useWalletBalance.ts","webpack://_N_E/./src/services/analytics/events/transactions.ts","webpack://_N_E/./src/utils/relaying.ts","webpack://_N_E/./src/utils/tx-list.ts","webpack://_N_E/./src/components/tx/BalanceInfo/styles.module.css","webpack://_N_E/./src/components/tx/ExecutionMethodSelector/styles.module.css","webpack://_N_E/./src/components/tx/SignOrExecuteForm/styles.module.css","webpack://_N_E/./src/components/tx/SponsoredBy/styles.module.css","webpack://_N_E/./public/images/apps/batch-icon.svg","webpack://_N_E/./public/images/common/close.svg"],"sourcesContent":["export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import { Alert, AlertTitle, Box } from '@mui/material'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport ChainSwitcher from '@/components/common/ChainSwitcher'\nimport useIsWrongChain from '@/hooks/useIsWrongChain'\n\nconst NetworkWarning = ({ action }: { action?: string }) => {\n  const chain = useCurrentChain()\n  const isWrongChain = useIsWrongChain()\n\n  if (!chain || !isWrongChain) return null\n\n  return (\n    <Alert severity=\"warning\">\n      <AlertTitle sx={{ fontWeight: 700 }}>Change your wallet network</AlertTitle>You are trying to{' '}\n      {action || 'sign or execute a transaction'} on {chain.chainName}. Make sure that your wallet is set to the same\n      network.\n      <Box\n        sx={{\n          mt: 2,\n        }}\n      >\n        <ChainSwitcher />\n      </Box>\n    </Alert>\n  )\n}\n\nexport default NetworkWarning\n","import type { DataDecoded, TransactionDetails } from '@safe-global/safe-gateway-typescript-sdk'\nimport { Box } from '@mui/material'\nimport extractTxInfo from '@/services/tx/extractTxInfo'\nimport { isCustomTxInfo, isNativeTokenTransfer, isTransferTxInfo } from '@/utils/transaction-guards'\nimport SingleTxDecoded from '@/components/transactions/TxDetails/TxData/DecodedData/SingleTxDecoded'\nimport css from '@/components/transactions/TxDetails/TxData/DecodedData/Multisend/styles.module.css'\nimport { useState } from 'react'\nimport { MultisendActionsHeader } from '@/components/transactions/TxDetails/TxData/DecodedData/Multisend'\nimport { type AccordionProps } from '@mui/material/Accordion/Accordion'\n\nconst DecodedTxs = ({ txs }: { txs: TransactionDetails[] | undefined }) => {\n  const [openMap, setOpenMap] = useState<Record<number, boolean>>()\n\n  if (!txs) return null\n\n  return (\n    <>\n      <MultisendActionsHeader title=\"Batched transactions\" setOpen={setOpenMap} amount={txs.length} compact />\n\n      <Box className={css.compact}>\n        {txs.map((transaction, idx) => {\n          if (!transaction.txData) return null\n\n          const onChange: AccordionProps['onChange'] = (_, expanded) => {\n            setOpenMap((prev) => ({\n              ...prev,\n              [idx]: expanded,\n            }))\n          }\n\n          const { txParams } = extractTxInfo(transaction)\n\n          let decodedDataParams: DataDecoded = {\n            method: '',\n            parameters: undefined,\n          }\n\n          if (isCustomTxInfo(transaction.txInfo) && transaction.txInfo.isCancellation) {\n            decodedDataParams.method = 'On-chain rejection'\n          }\n\n          if (isTransferTxInfo(transaction.txInfo) && isNativeTokenTransfer(transaction.txInfo.transferInfo)) {\n            decodedDataParams.method = 'transfer'\n          }\n\n          const dataDecoded = transaction.txData.dataDecoded || decodedDataParams\n\n          return (\n            <SingleTxDecoded\n              key={transaction.txId}\n              tx={{\n                dataDecoded,\n                data: txParams.data,\n                value: txParams.value,\n                to: txParams.to,\n                operation: 0,\n              }}\n              txData={transaction.txData}\n              actionTitle={`${idx + 1}`}\n              expanded={openMap?.[idx] ?? false}\n              onChange={onChange}\n            />\n          )\n        })}\n      </Box>\n    </>\n  )\n}\n\nexport default DecodedTxs\n","import useWallet from '@/hooks/wallets/useWallet'\nimport { CircularProgress, Typography, Button, CardActions, Divider, Alert } from '@mui/material'\nimport useAsync from '@/hooks/useAsync'\nimport { FEATURES } from '@/utils/chains'\nimport { getReadOnlyMultiSendCallOnlyContract } from '@/services/contracts/safeContracts'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { encodeMultiSendData } from '@safe-global/protocol-kit/dist/src/utils/transactions/utils'\nimport { useState, useMemo, useContext } from 'react'\nimport type { SyntheticEvent } from 'react'\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport { ExecutionMethod, ExecutionMethodSelector } from '@/components/tx/ExecutionMethodSelector'\nimport DecodedTxs from '@/components/tx-flow/flows/ExecuteBatch/DecodedTxs'\nimport { TxSimulation } from '@/components/tx/security/tenderly'\nimport { useRelaysBySafe } from '@/hooks/useRemainingRelays'\nimport useOnboard from '@/hooks/wallets/useOnboard'\nimport { logError, Errors } from '@/services/exceptions'\nimport { dispatchBatchExecution, dispatchBatchExecutionRelay } from '@/services/tx/tx-sender'\nimport { hasRemainingRelays } from '@/utils/relaying'\nimport { getMultiSendTxs } from '@/utils/transactions'\nimport TxCard from '../../common/TxCard'\nimport CheckWallet from '@/components/common/CheckWallet'\nimport type { ExecuteBatchFlowProps } from '.'\nimport { asError } from '@/services/exceptions/utils'\nimport SendToBlock from '@/components/tx/SendToBlock'\nimport ConfirmationTitle, { ConfirmationTitleTypes } from '@/components/tx/SignOrExecuteForm/ConfirmationTitle'\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport { TxModalContext } from '@/components/tx-flow'\nimport useGasPrice from '@/hooks/useGasPrice'\nimport { hasFeature } from '@/utils/chains'\nimport type { Overrides } from 'ethers'\nimport { trackEvent } from '@/services/analytics'\nimport { TX_EVENTS, TX_TYPES } from '@/services/analytics/events/transactions'\nimport { isWalletRejection } from '@/utils/wallets'\nimport WalletRejectionError from '@/components/tx/SignOrExecuteForm/WalletRejectionError'\nimport useUserNonce from '@/components/tx/AdvancedParams/useUserNonce'\nimport { getLatestSafeVersion } from '@/utils/chains'\nimport { HexEncodedData } from '@/components/transactions/HexEncodedData'\nimport { useGetMultipleTransactionDetailsQuery } from '@/store/api/gateway'\nimport { skipToken } from '@reduxjs/toolkit/query/react'\nimport NetworkWarning from '@/components/new-safe/create/NetworkWarning'\n\nexport const ReviewBatch = ({ params }: { params: ExecuteBatchFlowProps }) => {\n  const [isSubmittable, setIsSubmittable] = useState<boolean>(true)\n  const [submitError, setSubmitError] = useState<Error | undefined>()\n  const [isRejectedByUser, setIsRejectedByUser] = useState<Boolean>(false)\n  const [executionMethod, setExecutionMethod] = useState(ExecutionMethod.RELAY)\n  const chain = useCurrentChain()\n  const { safe } = useSafeInfo()\n  const [relays] = useRelaysBySafe()\n  const { setTxFlow } = useContext(TxModalContext)\n  const [gasPrice] = useGasPrice()\n\n  const userNonce = useUserNonce()\n\n  const latestSafeVersion = getLatestSafeVersion(chain)\n\n  const maxFeePerGas = gasPrice?.maxFeePerGas\n  const maxPriorityFeePerGas = gasPrice?.maxPriorityFeePerGas\n\n  const isEIP1559 = chain && hasFeature(chain, FEATURES.EIP1559)\n\n  // Chain has relaying feature and available relays\n  const canRelay = hasRemainingRelays(relays)\n  const willRelay = canRelay && executionMethod === ExecutionMethod.RELAY\n  const onboard = useOnboard()\n  const wallet = useWallet()\n\n  const {\n    data: txsWithDetails,\n    error,\n    isLoading: loading,\n  } = useGetMultipleTransactionDetailsQuery(\n    chain?.chainId && params.txs.length\n      ? {\n          chainId: chain.chainId,\n          txIds: params.txs.map((tx) => tx.transaction.id),\n        }\n      : skipToken,\n  )\n\n  const [multiSendContract] = useAsync(async () => {\n    if (!safe.version) return\n    return await getReadOnlyMultiSendCallOnlyContract(safe.version)\n  }, [safe.version])\n\n  const [multisendContractAddress = ''] = useAsync(async () => {\n    if (!multiSendContract) return ''\n    return await multiSendContract.getAddress()\n  }, [multiSendContract])\n\n  const [multiSendTxs] = useAsync(async () => {\n    if (!txsWithDetails || !chain || !safe.version) return\n    return getMultiSendTxs(txsWithDetails, chain, safe.address.value, safe.version)\n  }, [chain, safe.address.value, safe.version, txsWithDetails])\n\n  const multiSendTxData = useMemo(() => {\n    if (!txsWithDetails || !multiSendTxs) return\n    return encodeMultiSendData(multiSendTxs)\n  }, [txsWithDetails, multiSendTxs])\n\n  const onExecute = async () => {\n    if (!userNonce || !onboard || !wallet || !multiSendTxData || !multiSendContract || !txsWithDetails || !gasPrice)\n      return\n\n    const overrides: Overrides = isEIP1559\n      ? { maxFeePerGas: maxFeePerGas?.toString(), maxPriorityFeePerGas: maxPriorityFeePerGas?.toString() }\n      : { gasPrice: maxFeePerGas?.toString() }\n\n    overrides.nonce = userNonce\n\n    await dispatchBatchExecution(\n      txsWithDetails,\n      multiSendContract,\n      multiSendTxData,\n      wallet.provider,\n      wallet.address,\n      safe.address.value,\n      overrides as Overrides & { nonce: number },\n      safe.nonce,\n    )\n  }\n\n  const onRelay = async () => {\n    if (!multiSendTxData || !multiSendContract || !txsWithDetails) return\n\n    await dispatchBatchExecutionRelay(\n      txsWithDetails,\n      multiSendContract,\n      multiSendTxData,\n      safe.chainId,\n      safe.address.value,\n      safe.version ?? latestSafeVersion,\n    )\n  }\n\n  const handleSubmit = async (e: SyntheticEvent) => {\n    e.preventDefault()\n    setIsSubmittable(false)\n    setSubmitError(undefined)\n    setIsRejectedByUser(false)\n\n    try {\n      await (willRelay ? onRelay() : onExecute())\n      setTxFlow(undefined)\n    } catch (_err) {\n      const err = asError(_err)\n      if (isWalletRejection(err)) {\n        setIsRejectedByUser(true)\n      } else {\n        logError(Errors._804, err)\n        setSubmitError(err)\n      }\n\n      setIsSubmittable(true)\n      return\n    }\n\n    trackEvent({ ...TX_EVENTS.EXECUTE, label: TX_TYPES.bulk_execute })\n  }\n\n  const submitDisabled = loading || !isSubmittable || !gasPrice\n\n  return (\n    <>\n      <TxCard>\n        <Typography variant=\"body2\">\n          This transaction batches a total of {params.txs.length} transactions from your queue into a single Ethereum\n          transaction. Please check every included transaction carefully, especially if you have rejection transactions,\n          and make sure you want to execute all of them. Included transactions are highlighted when you hover over the\n          execute button.\n        </Typography>\n\n        {multiSendContract && <SendToBlock address={multisendContractAddress} title=\"Interact with\" />}\n\n        {multiSendTxData && <HexEncodedData title=\"Data (hex-encoded)\" hexData={multiSendTxData} />}\n\n        <div>\n          <DecodedTxs txs={txsWithDetails} />\n        </div>\n      </TxCard>\n\n      {multiSendTxs && (\n        <TxCard>\n          <Typography variant=\"h5\">Transaction checks</Typography>\n\n          <TxSimulation transactions={multiSendTxs} disabled={submitDisabled} />\n        </TxCard>\n      )}\n\n      <TxCard>\n        <ConfirmationTitle variant={ConfirmationTitleTypes.execute} />\n\n        <NetworkWarning />\n\n        {canRelay ? (\n          <>\n            <ExecutionMethodSelector\n              executionMethod={executionMethod}\n              setExecutionMethod={setExecutionMethod}\n              relays={relays}\n              tooltip=\"You can only relay multisend transactions containing executions from the same Safe Account.\"\n            />\n          </>\n        ) : null}\n\n        <Alert severity=\"warning\">\n          Be aware that if any of the included transactions revert, none of them will be executed. This will result in\n          the loss of the allocated transaction fees.\n        </Alert>\n\n        {error && (\n          <ErrorMessage error={asError(error)}>\n            This transaction will most likely fail. To save gas costs, avoid creating the transaction.\n          </ErrorMessage>\n        )}\n\n        {submitError && (\n          <ErrorMessage error={submitError}>Error submitting the transaction. Please try again.</ErrorMessage>\n        )}\n\n        {isRejectedByUser && <WalletRejectionError />}\n\n        <div>\n          <Divider className={commonCss.nestedDivider} sx={{ pt: 2 }} />\n\n          <CardActions>\n            <CheckWallet allowNonOwner={true} checkNetwork>\n              {(isOk) => (\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  disabled={!isOk || submitDisabled}\n                  onClick={handleSubmit}\n                  sx={{ minWidth: '114px' }}\n                >\n                  {!isSubmittable ? <CircularProgress size={20} /> : 'Submit'}\n                </Button>\n              )}\n            </CheckWallet>\n          </CardActions>\n        </div>\n      </TxCard>\n    </>\n  )\n}\n","import type { Transaction } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport TxLayout from '@/components/tx-flow/common/TxLayout'\nimport { ReviewBatch } from './ReviewBatch'\nimport BatchIcon from '@/public/images/apps/batch-icon.svg'\n\nexport type ExecuteBatchFlowProps = {\n  txs: Transaction[]\n}\n\nconst ExecuteBatchFlow = (props: ExecuteBatchFlowProps) => {\n  return (\n    <TxLayout title=\"Confirm transaction\" subtitle=\"Batch\" icon={BatchIcon} hideNonce isBatch>\n      <ReviewBatch params={props} />\n    </TxLayout>\n  )\n}\n\nexport default ExecuteBatchFlow\n","import useAsync from '@/hooks/useAsync'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { getUserNonce } from '@/hooks/wallets/web3'\n\nconst useUserNonce = (): number | undefined => {\n  const wallet = useWallet()\n\n  const [userNonce] = useAsync<number>(() => {\n    if (!wallet) return\n    return getUserNonce(wallet.address)\n  }, [wallet])\n\n  return userNonce\n}\n\nexport default useUserNonce\n","import chains from '@/config/chains'\nimport css from './styles.module.css'\n\nexport const RELAY_SPONSORS = {\n  [chains.gno]: {\n    name: 'Gnosis',\n    logo: '/images/common/gnosis-chain-logo.png',\n  },\n  default: {\n    name: 'Safe',\n    logo: '/images/logo-no-text.svg',\n  },\n}\n\nconst SponsoredBy = ({ chainId }: { chainId: string }) => {\n  const sponsor = RELAY_SPONSORS[chainId] || RELAY_SPONSORS.default\n\n  return (\n    <>\n      <img src={sponsor.logo} alt={sponsor.name} className={css.logo} /> {sponsor.name}\n    </>\n  )\n}\n\nexport default SponsoredBy\n","import { SvgIcon, Tooltip, Typography } from '@mui/material'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport { MAX_DAY_RELAYS } from '@/hooks/useRemainingRelays'\nimport css from '../BalanceInfo/styles.module.css'\nimport type { RelayCountResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport { maybePlural } from '@/utils/formatters'\n\nconst RemainingRelays = ({ relays, tooltip }: { relays?: RelayCountResponse; tooltip?: string }) => {\n  if (!tooltip) {\n    const limit = relays?.limit ?? MAX_DAY_RELAYS\n    tooltip = `${limit} transaction${maybePlural(limit)} per day for free`\n  }\n\n  return (\n    <div className={css.container}>\n      <Typography variant=\"body2\" color=\"primary.light\" display=\"flex\" alignItems=\"center\" gap={0.5}>\n        <b>{relays?.remaining ?? MAX_DAY_RELAYS}</b> free transactions left today\n        <Tooltip title={tooltip} placement=\"top\" arrow>\n          <span style={{ lineHeight: 0 }}>\n            <SvgIcon component={InfoIcon} inheritViewBox color=\"info\" fontSize=\"small\" sx={{ color: '#B2B5B2' }} />\n          </span>\n        </Tooltip>\n      </Typography>\n    </div>\n  )\n}\n\nexport default RemainingRelays\n","import { Typography } from '@mui/material'\nimport css from './styles.module.css'\nimport useWalletBalance from '@/hooks/wallets/useWalletBalance'\nimport WalletBalance from '@/components/common/WalletBalance'\n\n// TODO: Remove this component if not being used\nconst BalanceInfo = () => {\n  const [balance] = useWalletBalance()\n\n  return (\n    <div className={css.container}>\n      <Typography variant=\"body2\" color=\"primary.light\">\n        <b>Wallet balance:</b> <WalletBalance balance={balance} />\n      </Typography>\n    </div>\n  )\n}\n\nexport default BalanceInfo\n","import { Box, FormControl, FormControlLabel, Radio, RadioGroup, Typography } from '@mui/material'\nimport type { Dispatch, SetStateAction, ReactElement, ChangeEvent } from 'react'\n\nimport useWallet from '@/hooks/wallets/useWallet'\nimport WalletIcon from '@/components/common/WalletIcon'\nimport SponsoredBy from '../SponsoredBy'\nimport RemainingRelays from '../RemainingRelays'\n\nimport css from './styles.module.css'\nimport BalanceInfo from '@/components/tx/BalanceInfo'\nimport madProps from '@/utils/mad-props'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport type { ChainInfo, RelayCountResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { ConnectedWallet } from '@/hooks/wallets/useOnboard'\n\nexport const enum ExecutionMethod {\n  RELAY = 'RELAY',\n  WALLET = 'WALLET',\n}\n\nconst _ExecutionMethodSelector = ({\n  wallet,\n  chain,\n  executionMethod,\n  setExecutionMethod,\n  relays,\n  noLabel,\n  tooltip,\n}: {\n  wallet: ConnectedWallet | null\n  chain?: ChainInfo\n  executionMethod: ExecutionMethod\n  setExecutionMethod: Dispatch<SetStateAction<ExecutionMethod>>\n  relays?: RelayCountResponse\n  noLabel?: boolean\n  tooltip?: string\n}): ReactElement | null => {\n  const shouldRelay = executionMethod === ExecutionMethod.RELAY\n\n  const onChooseExecutionMethod = (_: ChangeEvent<HTMLInputElement>, newExecutionMethod: string) => {\n    setExecutionMethod(newExecutionMethod as ExecutionMethod)\n  }\n\n  return (\n    <Box className={css.container} sx={{ borderRadius: ({ shape }) => `${shape.borderRadius}px` }}>\n      <div className={css.method}>\n        <FormControl sx={{ display: 'flex' }}>\n          {!noLabel ? (\n            <Typography variant=\"body2\" className={css.label}>\n              Who will pay gas fees:\n            </Typography>\n          ) : null}\n\n          <RadioGroup row value={executionMethod} onChange={onChooseExecutionMethod}>\n            <FormControlLabel\n              data-testid=\"relay-execution-method\"\n              sx={{ flex: 1 }}\n              value={ExecutionMethod.RELAY}\n              label={\n                <Typography className={css.radioLabel} whiteSpace=\"nowrap\">\n                  Sponsored by\n                  <SponsoredBy chainId={chain?.chainId ?? ''} />\n                </Typography>\n              }\n              control={<Radio />}\n            />\n\n            <FormControlLabel\n              data-testid=\"connected-wallet-execution-method\"\n              sx={{ flex: 1 }}\n              value={ExecutionMethod.WALLET}\n              label={\n                <Typography className={css.radioLabel}>\n                  <WalletIcon provider={wallet?.label || ''} width={20} height={20} icon={wallet?.icon} /> Connected\n                  wallet\n                </Typography>\n              }\n              control={<Radio />}\n            />\n          </RadioGroup>\n        </FormControl>\n      </div>\n\n      {shouldRelay && relays ? <RemainingRelays relays={relays} tooltip={tooltip} /> : wallet ? <BalanceInfo /> : null}\n    </Box>\n  )\n}\n\nexport const ExecutionMethodSelector = madProps(_ExecutionMethodSelector, {\n  wallet: useWallet,\n  chain: useCurrentChain,\n})\n","import { SvgIcon, Typography } from '@mui/material'\nimport EditIcon from '@/public/images/common/edit.svg'\nimport css from './styles.module.css'\n\nexport enum ConfirmationTitleTypes {\n  sign = 'confirm',\n  execute = 'execute',\n  propose = 'propose',\n}\n\nconst ConfirmationTitle = ({ isCreation, variant }: { isCreation?: boolean; variant: ConfirmationTitleTypes }) => {\n  return (\n    <div className={css.wrapper}>\n      <div className={`${css.icon} ${variant === ConfirmationTitleTypes.sign ? css.sign : css.execute}`}>\n        <SvgIcon component={EditIcon} inheritViewBox fontSize=\"small\" />\n      </div>\n      <div>\n        <Typography variant=\"h5\" sx={{ textTransform: 'capitalize' }}>\n          {variant}\n        </Typography>\n        <Typography variant=\"body2\">\n          You&apos;re about to {isCreation ? 'create and ' : ''}\n          {variant} this transaction.\n        </Typography>\n      </div>\n    </div>\n  )\n}\n\nexport default ConfirmationTitle\n","import ErrorMessage from '@/components/tx/ErrorMessage'\n\nconst WalletRejectionError = () => {\n  return <ErrorMessage>User rejected signing.</ErrorMessage>\n}\n\nexport default WalletRejectionError\n","import { formatVisualAmount } from '@/utils/formatters'\nimport { type FeeData } from 'ethers'\nimport type {\n  ChainInfo,\n  GasPrice,\n  GasPriceFixed,\n  GasPriceFixedEIP1559,\n  GasPriceOracle,\n} from '@safe-global/safe-gateway-typescript-sdk'\nimport { GAS_PRICE_TYPE } from '@safe-global/safe-gateway-typescript-sdk'\nimport useAsync, { type AsyncResult } from '@/hooks/useAsync'\nimport { useCurrentChain } from './useChains'\nimport useIntervalCounter from './useIntervalCounter'\nimport { useWeb3ReadOnly } from '../hooks/wallets/web3'\nimport { Errors, logError } from '@/services/exceptions'\nimport { FEATURES, hasFeature } from '@/utils/chains'\nimport { asError } from '@/services/exceptions/utils'\n\ntype EstimatedGasPrice =\n  | {\n      gasPrice: bigint\n    }\n  | {\n      maxFeePerGas: bigint\n      maxPriorityFeePerGas: bigint\n    }\n\ntype GasFeeParams = {\n  maxFeePerGas: bigint | null | undefined\n  maxPriorityFeePerGas: bigint | null | undefined\n}\n\n// Update gas fees every 20 seconds\nconst REFRESH_DELAY = 20e3\n\ntype EtherscanResult = {\n  LastBlock: string\n  SafeGasPrice: string\n  ProposeGasPrice: string\n  FastGasPrice: string\n  suggestBaseFee: string\n  gasUsedRatio: string\n}\n\nconst isEtherscanResult = (data: any): data is EtherscanResult => {\n  return 'FastGasPrice' in data && 'suggestBaseFee' in data\n}\n\n/**\n * Parses result from etherscan oracle.\n * Since EIP 1559 it returns the `maxFeePerGas` as gas price and the current network baseFee as `suggestedBaseFee`.\n * The `maxPriorityFeePerGas` can then be computed as `maxFeePerGas` - `suggestedBaseFee`\n *\n * @param result {@link EtherscanResult}\n * @see https://docs.etherscan.io/api-endpoints/gas-tracker\n */\nconst parseEtherscanOracleResult = (result: EtherscanResult, gweiFactor: string): EstimatedGasPrice => {\n  const maxFeePerGas = BigInt(Number(result.FastGasPrice) * Number(gweiFactor))\n  const baseFee = BigInt(Number(result.suggestBaseFee) * Number(gweiFactor))\n\n  return {\n    maxFeePerGas,\n    maxPriorityFeePerGas: maxFeePerGas - baseFee,\n  }\n}\n\n// Loop over the oracles and return the first one that works.\n// Or return a fixed value if specified.\n// If none of them work, throw an error.\nconst fetchGasOracle = async (gasPriceOracle: GasPriceOracle): Promise<EstimatedGasPrice> => {\n  const { uri, gasParameter, gweiFactor } = gasPriceOracle\n  const response = await fetch(uri)\n  if (!response.ok) {\n    throw new Error(`Error fetching gas price from oracle ${uri}`)\n  }\n\n  const json = await response.json()\n  const data = json.data || json.result || json\n\n  if (isEtherscanResult(data)) {\n    return parseEtherscanOracleResult(data, gweiFactor)\n  }\n  return { gasPrice: BigInt(data[gasParameter] * Number(gweiFactor)) }\n}\n\n// These typeguards are necessary because the GAS_PRICE_TYPE enum uses uppercase while the config service uses lowercase values\nconst isGasPriceFixed = (gasPriceConfig: GasPrice[number]): gasPriceConfig is GasPriceFixed => {\n  return gasPriceConfig.type.toUpperCase() == GAS_PRICE_TYPE.FIXED\n}\n\nconst isGasPriceFixed1559 = (gasPriceConfig: GasPrice[number]): gasPriceConfig is GasPriceFixedEIP1559 => {\n  return gasPriceConfig.type.toUpperCase() == GAS_PRICE_TYPE.FIXED_1559\n}\n\nconst isGasPriceOracle = (gasPriceConfig: GasPrice[number]): gasPriceConfig is GasPriceOracle => {\n  return gasPriceConfig.type.toUpperCase() == GAS_PRICE_TYPE.ORACLE\n}\n\nconst getGasPrice = async (gasPriceConfigs: GasPrice): Promise<EstimatedGasPrice | undefined> => {\n  let error: Error | undefined\n  for (const config of gasPriceConfigs) {\n    if (isGasPriceFixed(config)) {\n      return {\n        gasPrice: BigInt(config.weiValue),\n      }\n    }\n\n    if (isGasPriceFixed1559(config)) {\n      return {\n        maxFeePerGas: BigInt(config.maxFeePerGas),\n        maxPriorityFeePerGas: BigInt(config.maxPriorityFeePerGas),\n      }\n    }\n\n    if (isGasPriceOracle(config)) {\n      try {\n        return await fetchGasOracle(config)\n      } catch (_err) {\n        error = asError(_err)\n        logError(Errors._611, error.message)\n        // Continue to the next oracle\n        continue\n      }\n    }\n  }\n\n  // If everything failed, throw the last error or return undefined\n  if (error) {\n    throw error\n  }\n}\n\nconst getGasParameters = (\n  estimation: EstimatedGasPrice | undefined,\n  feeData: FeeData | undefined,\n  isEIP1559: boolean,\n): GasFeeParams => {\n  if (!estimation) {\n    return {\n      maxFeePerGas: isEIP1559 ? feeData?.maxFeePerGas : feeData?.gasPrice,\n      maxPriorityFeePerGas: isEIP1559 ? feeData?.maxPriorityFeePerGas : undefined,\n    }\n  }\n\n  if (isEIP1559 && 'maxFeePerGas' in estimation && 'maxPriorityFeePerGas' in estimation) {\n    return estimation\n  }\n\n  if ('gasPrice' in estimation) {\n    return {\n      maxFeePerGas: estimation.gasPrice,\n      maxPriorityFeePerGas: isEIP1559 ? feeData?.maxPriorityFeePerGas : undefined,\n    }\n  }\n\n  return {\n    maxFeePerGas: undefined,\n    maxPriorityFeePerGas: undefined,\n  }\n}\n\nexport const getTotalFee = (maxFeePerGas: bigint, gasLimit: bigint | string | number) => {\n  return maxFeePerGas * BigInt(gasLimit)\n}\n\nexport const getTotalFeeFormatted = (\n  maxFeePerGas: bigint | null | undefined,\n  gasLimit: bigint | undefined,\n  chain: ChainInfo | undefined,\n) => {\n  return gasLimit && maxFeePerGas\n    ? formatVisualAmount(getTotalFee(maxFeePerGas, gasLimit), chain?.nativeCurrency.decimals)\n    : '> 0.001'\n}\n\nconst SPEED_UP_MAX_PRIO_FACTOR = 2n\n\nconst SPEED_UP_GAS_PRICE_FACTOR = 150n\n\n/**\n * Estimates the gas price through the configured methods:\n * - Oracle\n * - Fixed gas prices\n * - Or using ethers' getFeeData\n *\n * @param isSpeedUp if true, increases the returned gas parameters\n * @returns [gasPrice, error, loading]\n */\nconst useGasPrice = (isSpeedUp: boolean = false): AsyncResult<GasFeeParams> => {\n  const chain = useCurrentChain()\n  const gasPriceConfigs = chain?.gasPrice\n  const [counter] = useIntervalCounter(REFRESH_DELAY)\n  const provider = useWeb3ReadOnly()\n  const isEIP1559 = !!chain && hasFeature(chain, FEATURES.EIP1559)\n\n  const [gasPrice, gasPriceError, gasPriceLoading] = useAsync(\n    async () => {\n      const [gasEstimation, feeData] = await Promise.all([\n        // Fetch gas price from oracles or get a fixed value\n        gasPriceConfigs ? getGasPrice(gasPriceConfigs) : undefined,\n\n        // Fetch the gas fees from the blockchain itself\n        provider?.getFeeData(),\n      ])\n\n      // Prepare the return values\n      const gasParameters = getGasParameters(gasEstimation, feeData, isEIP1559)\n\n      if (!isSpeedUp) {\n        return gasParameters\n      }\n\n      if (isEIP1559 && gasParameters.maxFeePerGas && gasParameters.maxPriorityFeePerGas) {\n        return {\n          maxFeePerGas:\n            gasParameters.maxFeePerGas +\n            (gasParameters.maxPriorityFeePerGas * SPEED_UP_MAX_PRIO_FACTOR - gasParameters.maxPriorityFeePerGas),\n          maxPriorityFeePerGas: gasParameters.maxPriorityFeePerGas * SPEED_UP_MAX_PRIO_FACTOR,\n        }\n      }\n\n      return {\n        maxFeePerGas: gasParameters.maxFeePerGas\n          ? (gasParameters.maxFeePerGas * SPEED_UP_GAS_PRICE_FACTOR) / 100n\n          : undefined,\n        maxPriorityFeePerGas: undefined,\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [gasPriceConfigs, provider, counter, isEIP1559],\n    false,\n  )\n\n  const isLoading = gasPriceLoading || (!gasPrice && !gasPriceError)\n\n  return [gasPrice, gasPriceError, isLoading]\n}\n\nexport default useGasPrice\n","import useAsync from '@/hooks/useAsync'\nimport useSafeInfo from './useSafeInfo'\nimport { FEATURES, hasFeature } from '@/utils/chains'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { getRelayCount } from '@safe-global/safe-gateway-typescript-sdk'\n\nexport const MAX_DAY_RELAYS = 5\n\nexport const useRelaysBySafe = () => {\n  const chain = useCurrentChain()\n  const { safe, safeAddress } = useSafeInfo()\n\n  return useAsync(() => {\n    if (!safeAddress || !chain) return\n    if (hasFeature(chain, FEATURES.RELAYING)) {\n      return getRelayCount(chain.chainId, safeAddress)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chain, safeAddress, safe.txHistoryTag])\n}\n\nexport const useLeastRemainingRelays = (ownerAddresses: string[]) => {\n  const chain = useCurrentChain()\n  const { safe } = useSafeInfo()\n\n  return useAsync(() => {\n    if (!chain || !hasFeature(chain, FEATURES.RELAYING)) return\n\n    return Promise.all(ownerAddresses.map((address) => getRelayCount(chain.chainId, address)))\n      .then((result) => {\n        const min = Math.min(...result.map((r) => r.remaining))\n        return result.find((r) => r.remaining === min)\n      })\n      .catch(() => {\n        return { remaining: 0, limit: MAX_DAY_RELAYS }\n      })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chain, ownerAddresses, safe.txHistoryTag])\n}\n","import useAsync, { type AsyncResult } from '../useAsync'\nimport useWallet from './useWallet'\nimport { useWeb3ReadOnly } from '@/hooks/wallets/web3'\n\nconst useWalletBalance = (): AsyncResult<bigint | undefined> => {\n  const web3ReadOnly = useWeb3ReadOnly()\n  const wallet = useWallet()\n\n  return useAsync<bigint | undefined>(async () => {\n    if (!wallet || !web3ReadOnly) {\n      return undefined\n    }\n\n    const balance = await web3ReadOnly.getBalance(wallet.address, 'latest')\n    return balance\n  }, [wallet, web3ReadOnly])\n}\n\nexport default useWalletBalance\n","import { EventType } from '../types'\n\nexport enum TX_TYPES {\n  // Settings\n  owner_add = 'owner_add',\n  owner_remove = 'owner_remove',\n  owner_swap = 'owner_swap',\n  owner_threshold_change = 'owner_threshold_change',\n\n  // Module txs\n  guard_remove = 'guard_remove',\n  module_remove = 'module_remove',\n\n  // Transfers\n  transfer_token = 'transfer_token',\n  transfer_nft = 'transfer_nft',\n\n  // Other\n  batch = 'batch',\n  rejection = 'rejection',\n  typed_message = 'typed_message',\n  nested_safe = 'nested_safe',\n  walletconnect = 'walletconnect',\n  custom = 'custom',\n  native_bridge = 'native_bridge',\n  native_swap = 'native_swap',\n  bulk_execute = 'bulk_execute',\n\n  // Counterfactual\n  activate_without_tx = 'activate_without_tx',\n  activate_with_tx = 'activate_with_tx',\n}\n\nconst TX_CATEGORY = 'transactions'\n\nexport const TX_EVENTS = {\n  CREATE: {\n    event: EventType.TX_CREATED,\n    action: 'Create transaction',\n    category: TX_CATEGORY,\n    // label: TX_TYPES,\n  },\n  CREATE_VIA_ROLE: {\n    event: EventType.TX_CREATED,\n    action: 'Create via role',\n    category: TX_CATEGORY,\n  },\n  CREATE_VIA_SPENDING_LIMTI: {\n    event: EventType.TX_CREATED,\n    action: 'Create via spending limit',\n    category: TX_CATEGORY,\n  },\n  CREATE_VIA_PROPOSER: {\n    event: EventType.TX_CREATED,\n    action: 'Create via proposer',\n    category: TX_CATEGORY,\n  },\n  CONFIRM: {\n    event: EventType.TX_CONFIRMED,\n    action: 'Confirm transaction',\n    category: TX_CATEGORY,\n  },\n  EXECUTE: {\n    event: EventType.TX_EXECUTED,\n    action: 'Execute transaction',\n    category: TX_CATEGORY,\n  },\n  SPEED_UP: {\n    event: EventType.TX_EXECUTED,\n    action: 'Speed up transaction',\n    category: TX_CATEGORY,\n  },\n  EXECUTE_VIA_SPENDING_LIMIT: {\n    event: EventType.TX_EXECUTED,\n    action: 'Execute via spending limit',\n    category: TX_CATEGORY,\n  },\n  EXECUTE_VIA_ROLE: {\n    event: EventType.TX_EXECUTED,\n    action: 'Execute via role',\n    category: TX_CATEGORY,\n  },\n  CREATE_VIA_PARENT: {\n    event: EventType.TX_CREATED,\n    action: 'Create via parent',\n    category: TX_CATEGORY,\n  },\n  CONFIRM_VIA_PARENT: {\n    event: EventType.TX_CREATED,\n    action: 'Confirm via parent',\n    category: TX_CATEGORY,\n  },\n  EXECUTE_VIA_PARENT: {\n    event: EventType.TX_CREATED,\n    action: 'Execute via parent',\n    category: TX_CATEGORY,\n  },\n  CONFIRM_IN_PARENT: {\n    event: EventType.TX_CONFIRMED,\n    action: 'Confirm in parent',\n    category: TX_CATEGORY,\n  },\n  EXECUTE_IN_PARENT: {\n    event: EventType.TX_EXECUTED,\n    action: 'Execute in parent',\n    category: TX_CATEGORY,\n  },\n}\n","import type { RelayCountResponse } from '@safe-global/safe-gateway-typescript-sdk'\n\nexport const hasRemainingRelays = (relays?: RelayCountResponse): boolean => {\n  return !!relays && relays.remaining > 0\n}\n","import { TransactionInfoType } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { Transaction, TransactionListItem } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport { isConflictHeaderListItem, isNoneConflictType, isTransactionListItem } from '@/utils/transaction-guards'\nimport { sameAddress } from './addresses'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\n\ntype GroupedTxs = Array<TransactionListItem | Transaction[]>\n\nexport const groupTxs = (list: TransactionListItem[]) => {\n  const groupedByConflicts = groupConflictingTxs(list)\n  return groupBulkTxs(groupedByConflicts)\n}\n\n/**\n * Group txs by conflict header\n */\nexport const groupConflictingTxs = (list: TransactionListItem[]): GroupedTxs => {\n  return list\n    .reduce<GroupedTxs>((resultItems, item) => {\n      if (isConflictHeaderListItem(item)) {\n        return resultItems.concat([[]])\n      }\n\n      const prevItem = resultItems[resultItems.length - 1]\n      if (Array.isArray(prevItem) && isTransactionListItem(item) && !isNoneConflictType(item)) {\n        prevItem.push(item)\n        return resultItems\n      }\n\n      return resultItems.concat(item)\n    }, [])\n    .map((item) => {\n      if (Array.isArray(item)) {\n        return item.sort((a, b) => b.transaction.timestamp - a.transaction.timestamp)\n      }\n      return item\n    })\n}\n\n/**\n * Group txs by tx hash\n */\nconst groupBulkTxs = (list: GroupedTxs): GroupedTxs => {\n  return list\n    .reduce<GroupedTxs>((resultItems, item) => {\n      if (Array.isArray(item) || !isTransactionListItem(item)) {\n        return resultItems.concat([item])\n      }\n      const currentTxHash = item.transaction.txHash\n\n      const prevItem = resultItems[resultItems.length - 1]\n      if (!Array.isArray(prevItem)) return resultItems.concat([[item]])\n      const prevTxHash = prevItem[0].transaction.txHash\n\n      if (currentTxHash && currentTxHash === prevTxHash) {\n        prevItem.push(item)\n        return resultItems\n      }\n\n      return resultItems.concat([[item]])\n    }, [])\n    .map((item) => (Array.isArray(item) && item.length === 1 ? item[0] : item))\n}\n\nexport function _getRecoveryCancellations(moduleAddress: string, transactions: Array<Transaction>) {\n  const CANCELLATION_TX_METHOD_NAME = 'setTxNonce'\n\n  return transactions.filter(({ transaction }) => {\n    const { txInfo } = transaction\n    return (\n      txInfo.type === TransactionInfoType.CUSTOM &&\n      sameAddress(txInfo.to.value, moduleAddress) &&\n      txInfo.methodName === CANCELLATION_TX_METHOD_NAME\n    )\n  })\n}\n\ntype GroupedRecoveryQueueItem = Transaction | RecoveryQueueItem\n\nexport function groupRecoveryTransactions(queue: Array<TransactionListItem>, recoveryQueue: Array<RecoveryQueueItem>) {\n  const transactions = queue.filter(isTransactionListItem)\n\n  return recoveryQueue.reduce<Array<RecoveryQueueItem | Array<GroupedRecoveryQueueItem>>>((acc, item) => {\n    const cancellations = _getRecoveryCancellations(item.address, transactions)\n\n    if (cancellations.length === 0) {\n      acc.push(item)\n    } else {\n      acc.push([item, ...cancellations])\n    }\n\n    return acc\n  }, [])\n}\n\nexport const getLatestTransactions = (list: TransactionListItem[] = []): Transaction[] => {\n  return (\n    groupConflictingTxs(list)\n      // Get latest transaction if there are conflicting ones\n      .map((group) => (Array.isArray(group) ? group[0] : group))\n      .filter(isTransactionListItem)\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__89vKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__uq_oY\",\"method\":\"styles_method__e_FVs\",\"label\":\"styles_label__DK6kD\",\"radioLabel\":\"styles_radioLabel__LApjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__oNe3g\",\"icon\":\"styles_icon__y7HBQ\",\"sign\":\"styles_sign__G_74V\",\"execute\":\"styles_execute__YeVrC\",\"params\":\"styles_params__L5_P1\",\"noBottomBorderRadius\":\"styles_noBottomBorderRadius__W4ZTm\",\"noTopBorder\":\"styles_noTopBorder__HYfbI\",\"mobileTxCheckMessages\":\"styles_mobileTxCheckMessages__0u4uN\",\"zodiac\":\"styles_zodiac___8Vyn\",\"roleChip\":\"styles_roleChip__jAelk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sponsoredBy\":\"styles_sponsoredBy__0eMhp\",\"icon\":\"styles_icon__MhBil\",\"logo\":\"styles_logo___DNjH\"};","var _circle, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgBatchIcon = function SvgBatchIcon(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 11,\n    cy: 11,\n    r: 11,\n    fill: \"#FFD600\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10.7764 5.55279C10.9172 5.4824 11.0828 5.4824 11.2236 5.55279L16.2235 8.05279C16.3929 8.13748 16.4999 8.31061 16.4999 8.5C16.4999 8.68939 16.3929 8.86252 16.2235 8.94721L11.2236 11.4472C11.0828 11.5176 10.9172 11.5176 10.7764 11.4472L5.7765 8.94721C5.60711 8.86252 5.50011 8.68939 5.50011 8.5C5.50011 8.31061 5.60711 8.13748 5.7765 8.05279L10.7764 5.55279ZM7.11811 8.5L11 10.441L14.8819 8.5L11 6.55902L7.11811 8.5ZM5.55289 10.7764C5.67639 10.5294 5.97672 10.4293 6.2237 10.5528L11 12.941L15.7763 10.5528C16.0233 10.4293 16.3236 10.5294 16.4471 10.7764C16.5706 11.0234 16.4705 11.3237 16.2235 11.4472L11.2236 13.9472C11.0828 14.0176 10.9172 14.0176 10.7764 13.9472L5.7765 11.4472C5.52951 11.3237 5.4294 11.0234 5.55289 10.7764ZM5.55289 13.2764C5.67639 13.0294 5.97672 12.9293 6.2237 13.0528L11 15.441L15.7763 13.0528C16.0233 12.9293 16.3236 13.0294 16.4471 13.2764C16.5706 13.5234 16.4705 13.8237 16.2235 13.9472L11.2236 16.4472C11.0828 16.5176 10.9172 16.5176 10.7764 16.4472L5.7765 13.9472C5.52951 13.8237 5.4294 13.5234 5.55289 13.2764Z\",\n    fill: \"black\"\n  })));\n};\nexport default SvgBatchIcon;","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgClose = function SvgClose(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 15,\n    viewBox: \"0 0 15 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8.47717 7.69172L13.7585 12.832C14.1467 13.2098 14.1467 13.8275 13.7585 14.2052C13.3694 14.583 12.7358 14.583 12.3476 14.2052L7.06626 9.06494L1.7849 14.2052C1.39575 14.583 0.76214 14.583 0.373991 14.2052C-0.0151556 13.8275 -0.0151556 13.2098 0.373991 12.832L5.65536 7.69172L0.373891 2.55133C-0.0152554 2.17354 -0.0152554 1.55589 0.373891 1.17811C0.76204 0.799355 1.39565 0.799355 1.7848 1.17811L7.06626 6.3185L12.3477 1.17811C12.7359 0.799355 13.3695 0.799355 13.7586 1.17811C14.1468 1.55589 14.1468 2.17354 13.7586 2.55133L8.47717 7.69172Z\",\n    fill: \"currentColor\"\n  })));\n};\nexport default SvgClose;"],"names":["action","chain","useCurrentChain","NetworkWarning","isWrongChain","useIsWrongChain","Alert","severity","AlertTitle","sx","fontWeight","chainName","Box","mt","ChainSwitcher","txs","openMap","setOpenMap","useState","DecodedTxs","MultisendActionsHeader","title","setOpen","amount","length","compact","className","css","map","transaction","idx","txData","txParams","extractTxInfo","decodedDataParams","method","parameters","undefined","isCustomTxInfo","txInfo","isCancellation","isTransferTxInfo","isNativeTokenTransfer","transferInfo","dataDecoded","SingleTxDecoded","tx","data","value","to","operation","actionTitle","expanded","onChange","prev","txId","ReviewBatch","params","isSubmittable","setIsSubmittable","submitError","setSubmitError","isRejectedByUser","setIsRejectedByUser","executionMethod","setExecutionMethod","ExecutionMethod","RELAY","safe","useSafeInfo","relays","useRelaysBySafe","setTxFlow","useContext","TxModalContext","gasPrice","useGasPrice","userNonce","useUserNonce","latestSafeVersion","getLatestSafeVersion","maxFeePerGas","maxPriorityFeePerGas","isEIP1559","hasFeature","FEATURES","EIP1559","canRelay","hasRemainingRelays","willRelay","onboard","useOnboard","wallet","useWallet","txsWithDetails","error","isLoading","loading","useGetMultipleTransactionDetailsQuery","chainId","txIds","id","skipToken","multiSendContract","useAsync","version","getReadOnlyMultiSendCallOnlyContract","multisendContractAddress","getAddress","multiSendTxs","getMultiSendTxs","address","multiSendTxData","useMemo","encodeMultiSendData","onExecute","overrides","toString","nonce","dispatchBatchExecution","provider","onRelay","dispatchBatchExecutionRelay","handleSubmit","e","preventDefault","_err","err","asError","isWalletRejection","logError","Errors","_804","trackEvent","TX_EVENTS","EXECUTE","label","TX_TYPES","bulk_execute","submitDisabled","TxCard","Typography","variant","SendToBlock","HexEncodedData","hexData","div","TxSimulation","transactions","disabled","ConfirmationTitle","ConfirmationTitleTypes","execute","ExecutionMethodSelector","tooltip","ErrorMessage","WalletRejectionError","Divider","commonCss","pt","CardActions","CheckWallet","allowNonOwner","checkNetwork","Button","type","isOk","onClick","minWidth","CircularProgress","size","TxLayout","ExecuteBatchFlow","subtitle","icon","BatchIcon","hideNonce","isBatch","props","getUserNonce","RELAY_SPONSORS","chains","gno","name","logo","default","sponsor","img","src","alt","RemainingRelays","limit","MAX_DAY_RELAYS","maybePlural","color","display","alignItems","gap","b","remaining","Tooltip","placement","arrow","span","style","lineHeight","SvgIcon","component","InfoIcon","inheritViewBox","fontSize","balance","useWalletBalance","BalanceInfo","WalletBalance","madProps","noLabel","shouldRelay","borderRadius","shape","FormControl","RadioGroup","row","_","newExecutionMethod","FormControlLabel","data-testid","flex","whiteSpace","SponsoredBy","control","Radio","WalletIcon","width","height","isCreation","EditIcon","textTransform","isEtherscanResult","parseEtherscanOracleResult","result","gweiFactor","BigInt","Number","FastGasPrice","baseFee","suggestBaseFee","fetchGasOracle","gasPriceOracle","uri","gasParameter","response","fetch","ok","json","isGasPriceFixed","gasPriceConfig","toUpperCase","GAS_PRICE_TYPE","FIXED","isGasPriceFixed1559","FIXED_1559","isGasPriceOracle","ORACLE","getGasPrice","gasPriceConfigs","config","weiValue","_611","message","getGasParameters","estimation","feeData","getTotalFee","gasLimit","getTotalFeeFormatted","formatVisualAmount","nativeCurrency","decimals","isSpeedUp","counter","useIntervalCounter","REFRESH_DELAY","useWeb3ReadOnly","gasPriceError","gasPriceLoading","gasEstimation","Promise","all","getFeeData","gasParameters","SPEED_UP_MAX_PRIO_FACTOR","SPEED_UP_GAS_PRICE_FACTOR","safeAddress","RELAYING","getRelayCount","txHistoryTag","ownerAddresses","then","min","Math","r","find","catch","web3ReadOnly","getBalance","TX_CATEGORY","CREATE","event","EventType","TX_CREATED","category","CREATE_VIA_ROLE","CREATE_VIA_SPENDING_LIMTI","CREATE_VIA_PROPOSER","CONFIRM","TX_CONFIRMED","TX_EXECUTED","SPEED_UP","EXECUTE_VIA_SPENDING_LIMIT","EXECUTE_VIA_ROLE","CREATE_VIA_PARENT","CONFIRM_VIA_PARENT","EXECUTE_VIA_PARENT","CONFIRM_IN_PARENT","EXECUTE_IN_PARENT","groupTxs","groupBulkTxs","groupConflictingTxs","list","reduce","resultItems","item","isConflictHeaderListItem","concat","prevItem","isArray","isTransactionListItem","isNoneConflictType","push","Array","sort","a","timestamp","currentTxHash","txHash","prevTxHash","groupRecoveryTransactions","queue","recoveryQueue","filter","acc","cancellations","moduleAddress","TransactionInfoType","CUSTOM","sameAddress","methodName","CANCELLATION_TX_METHOD_NAME","getLatestTransactions","group"],"sourceRoot":"","ignoreList":[]}