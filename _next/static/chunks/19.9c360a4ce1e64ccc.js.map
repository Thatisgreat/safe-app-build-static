{"version":3,"file":"static/chunks/19.9c360a4ce1e64ccc.js","mappings":"kUE2BA,MAtBuB,OAAC,QAAEA,CAAM,CAAuB,GAC/CC,EAAQC,CAAAA,EAAAA,EAAAA,CAqBDC,CArBCD,CAAeA,GACvBE,EAAeC,CAAAA,EAAAA,EAAAA,CAAAA,CAAeA,EAoBT,QAlB3B,GAAeD,EAGb,IAHY,CAGZ,MAACE,CAH0B,CAG1BA,GAAKA,CAAAA,CAACC,SAAS,oBACd,UAACC,EAAAA,GAAUA,CAAAA,CAACC,GAAI,CAAEC,WAAY,GAAI,WAAG,+BAAuC,oBAAkB,IAC7FV,GAAU,gCAAgC,OAAKC,EAAMU,SAAS,CAAC,2DAEhE,UAACC,EAAAA,GAAGA,CAAAA,CACFH,GAAI,CACFI,GAAI,CACN,WAEA,UAACC,EAAAA,CAAaA,CAAAA,CAAAA,QAZgB,IAgBtC,kOCdO,SAASC,EAAyB,CAAqC,KAArC,MAAEC,CAAI,CAA+B,CAArC,EACjC,aAAEC,CAAW,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACC,EAAAA,CAAuBA,EACpD,EAAGC,EAAmB,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,CAA+BA,CAACL,GACzD,EAAGM,EAAwB,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,CAA6BA,CAACP,GAG5DQ,QAAkBJ,EAAAA,EAAsBE,SAE9C,GAAqBE,EAKnB,UALkB,CAKlB,IALoC,MAKpC,YACGA,GACC,UAACC,EAAAA,CAAYA,CAAAA,CAACC,MAAOF,WAAiB,gGAKvCP,GACC,UAACQ,EAAAA,CAAYA,CAAAA,CAACC,MAAOT,WAAa,2DAZ/B,IAgBX,4DCqEA,MAlF8B,OAAC,CAAED,MAAI,CAA8B,GAC3D,eAAEW,CAAa,KAiFRC,MAjFUC,CAAS,OAAEH,CAAK,CAAE,CAAGI,CAAAA,EAAAA,CAiFVF,CAjFUE,CAAAA,CAAgBA,CAACC,EAAAA,EAAyBA,EAChFC,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAClB,MAAEC,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtB,WAAEC,CAAS,CAAE,CAAGlB,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACmB,EAAAA,CAAcA,EACzC,gBAAEC,CAAc,CAAE,CAAGpB,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACqB,EAAAA,CAAaA,EAE7CC,EAAeC,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,CAC9B,MAAOC,IAGL,GAFAA,CAEI,CAFFC,cAAc,GAEXX,EAEL,GAAI,CACF,EAHW,IAGLL,EAAc,CAClBiB,SAAUZ,EAAOY,QAAQ,CACzBC,QAASX,EAAKW,OAAO,CACrBC,KAAM9B,EAAK8B,IAAI,CACfC,qBAAsB/B,EAAKgC,OAAO,CAClCC,cAAejB,EAAOgB,OAAO,GAE/BZ,OAAUc,EACZ,CAAE,MAAOC,EAAK,CACZC,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACC,EAAAA,CAAMA,CAACC,IAAI,CAAEH,EAC1B,CACF,EACA,CAACxB,EAAeS,EAAWJ,EAAQE,EAAMlB,EAAKgC,OAAO,CAAEhC,EAAK8B,IAAI,CAAC,EAOnE,MAJAS,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACRjB,GAAe,EACjB,EAAG,CAACA,EAAe,EAGjB,UAACkB,EAAAA,CAAMA,CAAAA,UACL,WAACC,OAAAA,CAAKC,SAAUlB,YACd,WAACmB,EAAAA,GAAKA,CAAAA,CACJlD,GAAI,CACFmD,IAAK,EACLC,GAAI,CACN,YAEA,UAACC,EAAAA,GAAUA,CAAAA,UAAC,uDAEZ,UAACC,EAAAA,CAAUA,CAAAA,CAACC,MAAM,qBAChB,UAACC,EAAAA,CAAWA,CAAAA,CAACjB,QAAShC,EAAKkD,QAAQ,CAAEC,QAAQ,IAACC,cAAc,IAACC,WAAW,QAG1E,UAACC,EAAAA,GAAOA,CAAAA,CAAC7D,GAAI,CAAE8D,GAAI,CAAC,CAAE,IAEtB,UAACC,EAAAA,CAAmBA,CAAAA,CAACxD,KAAMA,IAE3B,UAACb,EAAAA,CAAcA,CAAAA,CAAAA,GAEf,UAACY,EAAwBA,CAACC,KAAMA,IAE/BU,GAAS,SAFeX,CAEdU,EAAAA,CAAYA,CAAAA,CAACC,MAAOA,WAAO,yCAGxC,UAAC4C,EAAAA,GAAOA,CAAAA,CAAC7D,GAAI,CAAE8D,GAAI,CAAC,EAAGE,GAAI,GAAI,IAE/B,UAACC,EAAAA,GAAWA,CAAAA,UAEV,UAACC,EAAAA,CAAWA,CAAAA,CAACC,aAAa,aACvB,GACC,UAACC,EAAAA,GAAMA,CAAAA,CACLC,cAAY,gCACZC,QAAQ,YACRC,KAAK,SACLC,SAAU,CAACC,GAAQrD,EACnBpB,GAAI,CAAE0E,SAAU,OAAQ,WAEvBtD,EAAY,UAACuD,EAAAA,GAAgBA,CAAAA,CAACC,KAAM,KAAS,oBAQ9D,EC1FA,EAR4B,OAAC,MAAErE,CAAI,CAA+B,EAQnDsE,CAPb,MACE,UAACC,EAAAA,CAAQA,CAAAA,CAACvB,MAAM,WAAWwB,SAAS,mBAAmBC,KAAMC,EAAAA,CAAeA,CAAEC,KAAM,EAAGC,SAAS,aAC9F,UAAChE,EAAqBA,CAACZ,KAAMA,KAGnC,wBAH4BY,wKEKrB,SAAS4C,EAAoB,CAAqC,KAArC,MAAExD,CAAI,CAA+B,CAArC,EAC5B,MAAE8B,CAAI,aAAE+C,CAAW,CAAE,CAAG7E,EACxB,CAAEkB,MAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtB2D,EAAcC,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,GAE5BC,EAAWC,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,KACvB,GAAI,OACF,OAAOC,EAA2B,CAChCC,GAAIrD,EAAKqD,EAAE,CACXC,MAAOtD,EAAKsD,CAFaF,IAER,CAACG,QAAQ,GAC1BC,KAAMxD,EAAKwD,IAAI,EDmCdC,CAFcC,CAAAA,EAAAA,EAAAA,EAAAA,CAAmBA,CAACC,EAAYH,IAAI,EAAII,CAAAA,EAAAA,EAAAA,mBAAAA,CAAmBA,CAACD,EAAYH,IAAI,EAAI,CAACG,EAAY,EAE9FE,MAAM,CAAC,CAACC,EAAKC,IACxBC,CA7CX,SAASA,CAA+C,CAAEL,CAA4B,MACAvE,EAApF,IAAM6E,EAAiBC,CAAAA,EAAAA,EAAAA,0BAAAA,CAA0BA,CAAC,CAAEC,QAAS/E,EAAKW,OAAO,CAAEqE,QAAShF,QAAAA,EAAAA,EAAKgF,OAAAA,GAALhF,KAAAA,IAAAA,EAAAA,OAAgBgB,CAAU,GAE9G,GAAI,CAAC6D,EACH,MAAM,MAAU,EADG,0BAIrB,IAAMI,EAAgB,IAAIC,EAAAA,EAASA,CAACL,EAAeM,GAAG,EAElDC,EAAUpF,EAAKqF,MAAM,CACrBC,EAAatF,EAAKuF,SAAS,CAE/B,GAAIC,CAAAA,EAAAA,EAAAA,EAAAA,CAAmBA,CAACjB,EAAYH,IAAI,EAAG,CACzC,GAAM,EAAGqB,EAAeC,EAAW,CAAGT,EAAcU,kBAAkB,CAAC,YAAapB,EAAYH,IAAI,EAEpGgB,EAAUpF,EAAKqF,MAAM,CAACO,GAAG,CAAC,GAAYC,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACC,EAAM5B,KAAK,CAAEuB,GAAiB,CAAEvB,MAAOwB,CAAW,EAAII,EAC1G,MAAO,GAAIC,CAAAA,EAAAA,EAAAA,EAAAA,CAA+BA,CAACxB,EAAYH,IAAI,EAAG,CAC5D,GAAM,CAACsB,EAAYM,EAAa,CAAGf,EAAcU,kBAAkB,CAAC,wBAAyBpB,EAAYH,IAAI,EAE7GgB,EAAUA,EAAQa,MAAM,CAAC,CAAE/B,MAAOwB,CAAW,GAC7CJ,EAAaY,OAAOF,EACtB,MAAO,GAAIG,CAAAA,EAAAA,EAAAA,EAAAA,CAAqBA,CAAC5B,EAAYH,IAAI,EAAG,CAClD,GAAM,EAAGqB,EAAeO,EAAa,CAAGf,EAAcU,kBAAkB,CAAC,cAAepB,EAAYH,IAAI,EAExGgB,EAAUpF,EAAKqF,MAAM,CAACe,MAAM,CAAC,GAAW,CAACP,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACC,EAAM5B,KAAK,CAAEuB,IAClEH,EAAaY,OAAOF,EACtB,MAAO,GAAIK,CAAAA,EAAAA,EAAAA,EAAAA,CAAyBA,CAAC9B,EAAYH,IAAI,EAAG,CACtD,GAAM,CAAC4B,EAAa,CAAGf,EAAcU,kBAAkB,CAAC,kBAAmBpB,EAAYH,IAAI,EAE3FkB,EAAaY,OAAOF,EACtB,MACE,CADK,KACC,MAAU,0BAGlB,MAAO,CACL,GAAGhG,CAAI,CACPqF,OAAQD,EACRG,UAAWD,CACb,CACF,GAM4CZ,EAAKC,GCvCf3E,EAK9B,CAAE,MAAOQ,EAAG,CACV8F,CAAAA,EAAAA,EAAAA,EAAAA,CAAQA,CAACnF,EAAAA,CAAMA,CAACoF,IAAI,CAAE/F,EACxB,CAGF,EAAG,CAACI,EAAKwD,IAAI,CAAExD,EAAKqD,EAAE,CAAErD,EAAKsD,KAAK,CAAElE,EAAKuF,SAAS,CAAEvF,EAAKqF,MAAM,CAAC,SAE5D1B,EAEA,UAACpE,CAFY,CAEZA,CAAYA,CAAAA,UAAC,sFAKd,GAAauE,GAA8B,GAArBuB,MAAM,CAACmB,MAAM,CAUrC,WAACC,EAAAA,CAAWA,CAAAA,CAAC3E,MAAM,2BAChBgC,EAASuB,MAAM,CAACO,GAAG,CAAC,GACnB,UAAC7D,EAAAA,CAAWA,CAAAA,CAAmBjB,QAASgF,EAAM5B,KAAK,CAAEwC,aAAc,GAAOxE,cAAc,IAACC,WAAW,KAAlF2D,EAAM5B,KAAK,GAG/B,WAACyC,MAAAA,WACC,UAAC/E,EAAAA,GAAUA,CAAAA,CAACpD,WAAY,IAAKoI,YAAY,aAAC,iDAG1C,WAAChF,EAAAA,GAAUA,CAAAA,WACRkC,EAASyB,SAAS,CAAC,WAASzB,EAASuB,MAAM,CAACmB,MAAM,CAAC,qBAlBxD,WAACjH,EAAAA,CAAYA,CAAAA,WAAC,8GAEXqE,EAAc,oBAAsB,GAAG,MAqBhD,sEC3DO,IAAM3E,EAA0B4H,CAAAA,EAAAA,EAAAA,aAAAA,CAAaA,CAGjD,CACD9H,iBAAaiC,EACb8F,eAAgB,KAAO,CACzB,GAAE,SAEcC,EAAyB,CAAwC,KAAxC,UAAEC,CAAQ,CAA8B,CAAxC,EACjC,CAACjI,EAAa+H,EAAe,CAAGG,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,MAAcjG,GAE5D,MACE,UAAC/B,EAAwBiI,QAAQ,EAAChD,MAAO,CAAEnF,6BAAa+H,CAAe,WACpEE,GAGP,yECjBO,SAASnD,IACd,GAAM,CAACsD,EAAS,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACxBtH,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GACxB,OAAOsH,EAAQvH,OAAAA,EAAAA,KAAAA,EAAAA,EAAQgB,OAAO,CAAfhB,EAAmBqH,GAAYG,CAAAA,EAAAA,EAAAA,EAAAA,CAA8BA,CAACH,EAAUrH,EAAOgB,OAAO,EACvG,kJCKO,SAASyG,EACd1G,CAA6B,CAC7B2G,CAAwB,EAExB,IAAM1H,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAClB,MAAEC,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtBwH,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,GAC9B9D,EAAcC,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,GAElC,MAAO8D,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAAC,UACd,GAAI,CAAC/D,GAAe,CAAC4D,GAAU,CAAC1H,GAAU,CAAC2H,GAAgB,CAAC5G,EAC1D,OAGF,IAAMH,EAAWkH,CAAAA,EAAAA,EAAAA,CAAAA,CAAwBA,CAAC9H,EAAQE,EAAKW,OAAO,CAAE8G,GAC1DI,EAAgBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAACC,EAAAA,CAAcA,CAACC,KAAK,CAAEnH,EAAsBH,GAE9EuH,EAAS,MAAMvH,EAASwH,SAAS,GAGvC,OAFiBL,EAAcM,OAAO,CAACF,GAEvBG,yBAAyB,CAACC,UAAU,CAClDb,EAAOpD,IAAI,CAACH,EAAE,CACduD,EAAOpD,IAAI,CAACF,KAAK,CACjBsD,EAAOpD,IAAI,CAACA,IAAI,CAChBoD,EAAOpD,IAAI,CAACkE,SAAS,CAEzB,EAAG,CAAC1E,EAAa4D,EAAQ1H,EAAQ2H,EAAczH,EAAKW,OAAO,CAAEE,EAAqB,CACpF,CAEO,SAAS1B,EAAgCgI,CAA2B,EACzE,IAAMrH,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAClB,MAAEC,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtBwH,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,GAC9B,cAAEa,CAAY,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAkBA,CAACrB,GAE5C,MAAOQ,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAAC,UACd,GAAI,CAACY,GAAgB,QAACzI,EAAAA,KAAAA,EAAAA,EAAQgB,OAAAA,CAARhB,EAAmB,CAAC2H,EACxC,OAGF,IAAM/G,CAJkD,CAIvCkH,CAAAA,EAAAA,EAAAA,CAAAA,CAAwBA,CAAC9H,EAAQE,EAAKW,OAAO,CAAE8G,GAC1DI,EAAgBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAACC,EAAAA,CAAcA,CAACC,KAAK,CAAEb,EAASrG,OAAO,CAAEJ,GAE1EuH,EAAS,MAAMvH,EAASwH,SAAS,GACjCO,EAAWZ,EAAcM,OAAO,CAACF,GAEjC,IAAEhE,CAAE,OAAEC,CAAK,MAAEE,CAAI,WAAEkE,CAAS,CAAE,CAAGnB,EAASvG,IAAI,CAIpD,OAFA,MAAM6H,EAASC,aAAa,CAACL,UAAU,CAACpE,EAAIC,EAAOE,EAAMkE,IAElD,CACT,EAAG,CAACC,EAAcpB,EAASrG,OAAO,CAAEqG,EAASvG,IAAI,CAAEZ,EAAKW,OAAO,CAAEb,EAAQ2H,EAAa,CACxF,CAEO,SAASpI,EAA8B8H,CAA2B,EACvE,IAAMrH,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAClB,CAAEC,MAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtBwH,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,GAC9B,WAAEiB,CAAS,CAAE,CAAGH,CAAAA,EAAAA,EAAAA,CAAAA,CAAkBA,CAACrB,GAEzC,MAAOQ,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAAC,UACd,GAAI,CAACgB,GAAa,QAAC7I,EAAAA,KAAAA,EAAAA,EAAQgB,OAAAA,CAARhB,EAAmB,CAAC2H,EACrC,OAGF,IAAM/G,CAJ+C,CAIpCkH,CAAAA,EAAAA,EAAAA,CAAAA,CAAwBA,CAAC9H,EAAQE,EAAKW,OAAO,CAAE8G,GAC1DI,EAAgBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAACC,EAAAA,CAAcA,CAACC,KAAK,CAAEb,EAASrG,OAAO,CAAEJ,GAE1EuH,EAAS,MAAMvH,EAASwH,SAAS,GACjCO,EAAWZ,EAAcM,OAAO,CAACF,GAIvC,OAFA,MAAMQ,EAASG,WAAW,CAACP,UAAU,IAE9B,CACT,EAAG,CAACM,EAAWxB,EAASrG,OAAO,CAAEd,EAAKW,OAAO,CAAEb,EAAQ2H,EAAa,CACtE,oFElFO,SAASe,EAAmB,CAA2E,KAA3E,WAAEK,CAAS,WAAEC,CAAS,iBAAEC,CAAe,MAAEnI,CAAI,CAAEE,SAAO,CAAqB,CAA3E,EAO3B,CAAEkI,OAAK,SAAEC,CAAO,CAAE,CAAGC,EAAAA,CAAaA,CAACC,QAAQ,IAAM,CAAC,EAClDhC,EAAW6B,QAAAA,KAAAA,EAAAA,CAAO,CAAC,CAARA,CAAU,CACrBnB,EAAgBV,GAAYiC,CAAAA,EAAAA,EAAAA,EAAAA,CAA2BA,CAACjC,EAAU4B,GAGlEM,EDhBD,QCgBqBC,CDhBZA,MAASC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAW,IAC5B,CAACF,EAAWG,EAAa,CAAGvC,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,CAACwC,KAAKC,GAAG,IAYnD,MAVArI,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACR,IAAMsI,EAAUC,YAAY,KAC1BJ,EAAa,GAAUK,EAAON,EAChC,EAAGA,GAEH,MAAO,KACLO,cAAcH,EAChB,CACF,EAAG,CAACJ,EAAS,EAENF,CACT,ECE6B,KACrBU,EAAc7D,OAAO2C,GAAaQ,EAElCW,EAAUD,GAAe,EACzBpB,EAA0B,OAAdG,GAAqB5C,OAAO4C,IAAcW,KAAKC,GAAG,GAG9DO,EAHmE,CAItEpC,GACAhC,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACgC,EAAc/G,OAAO,CAAEA,IAAYoJ,OAAOtJ,EAAKuJ,UAAU,IAAMD,OAAOrC,EAAcuC,OAAO,EAEpGC,EAAY,CAAC,QAACpB,EAAAA,KAAAA,EAAAA,CAAS,CAACrI,EAAK0J,OAAfrB,EAEdsB,EAAmBP,EAAU,EAAIQ,KAAKC,IAAI,CAACV,EAAc,KAE/D,MAAO,QAAEE,EAAQ1B,aALI0B,GAAUD,GAAW,CAACrB,YAKZA,mBAAW4B,EAAkBF,WAAU,CACxE,4HCtBA,eAAeK,EAAyB,CAUvC,KAVuC,UACtChK,CAAQ,SACRC,CAAO,sBACPE,CAAoB,eACpBE,CAAa,CAMd,CAVuC,EAWhC4J,EAAkB,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,CAAqBA,CAACjK,EAASI,GAEvDkH,EAAS,MAAM4C,CAAAA,EAAAA,EAAAA,EAAAA,CAAkBA,CAACnK,GAGxC,MAAO,CACLoK,YAAaH,EACb9C,cAJoBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAACC,EAAAA,CAAcA,CAACC,KAAK,CAAEnH,EAAsBoH,GAAQE,OAAO,CAACF,EAKpG,CACF,CAEA,SAAS8C,EAAkB,CAQ1B,KAR0B,IACzBC,CAAE,CACF,GAAGC,EAMJ,CAR0B,EASnBC,EAAQ,CACZ,GAAGD,CAAO,CACVX,OAAQU,EAAGG,IAAI,EAGjBC,CAAAA,EAAAA,EAAAA,EAAAA,CAAgBA,CAACC,EAAAA,EAAaA,CAACC,UAAU,CAAEJ,GAC3CF,EAAGO,IAAI,GACJC,IAAI,CAAC,IACAC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,CAACC,GACZN,CAAAA,EAAAA,EAAAA,EADuB,CACPA,CAACC,EAAAA,EAAaA,CAACM,QAAQ,CAAE,CACvC,GAAGT,CAAK,CACR1L,MAAO,MAAU,8BACnB,GAEA4L,CAAAA,EAAAA,EAAAA,EAAAA,CAAgBA,CAACC,EAAAA,EAAaA,CAACO,SAAS,CAAEV,EAE9C,GACCW,KAAK,CAAC,IACDC,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACtM,GACb4L,CAAAA,EAAAA,EADqB,EACrBA,CAAgBA,CAACC,EAAAA,EAAaA,CAACO,SAAS,CAAEV,GAE1CE,CAAAA,EAAAA,EAAAA,EAAAA,CAAgBA,CAACC,EAAAA,EAAaA,CAACU,MAAM,CAAE,CACrC,GAAGb,CAAK,CACR1L,MAAOwM,CAAAA,EAAAA,EAAAA,CAAAA,CAAOA,CAACxM,EACjB,EAEJ,EACJ,CAEO,eAAeyM,EAAyB,CAY9C,MASKC,EArByC,UAC7CxL,CAAQ,MACRV,CAAI,QACJwH,CAAM,sBACN3G,CAAoB,eACpBE,CAAa,CAOd,CAZ8C,EAavC,eAAE8G,CAAa,aAAEiD,CAAW,CAAE,CAAG,MAAMJ,EAAyB,UACpEhK,EACAC,QAASX,EAAKW,OAAO,sBACrBE,gBACAE,CACF,GAEMoL,EAASC,EAAAA,EAAcA,CAACC,QAAQ,CAGtC,GAAI,CAEFH,EAAiB,MAAMrE,EAAcyE,kBAAkB,CACrD9E,EAAOpD,IAAI,CAACH,EAAE,CACduD,EAAOpD,IAAI,CAACF,KAAK,CACjBsD,EAAOpD,IAAI,CAACA,IAAI,CAChBoD,EAAOpD,IAAI,CAACkE,SAAS,EAGvB,IAAM0C,EAAK,MAAMnD,EAAcO,yBAAyB,CACtDZ,EAAOpD,IAAI,CAACH,EAAE,CACduD,EAAOpD,IAAI,CAACF,KAAK,CACjBsD,EAAOpD,IAAI,CAACA,IAAI,CAChBoD,EAAOpD,IAAI,CAACkE,SAAS,EAGnBwC,EACFM,CAAAA,EAAAA,EAAAA,EAAAA,CAAgBA,CAACC,EAAAA,EAAaA,CAACkB,mCAAmC,CAAE,CAClEC,cAAe3L,EACfqL,wBACAC,EACA7B,OAAQU,EAAGG,IAAI,GAGjBJ,EAAkB,CAChByB,cAAe3L,iBACfqL,SACAC,KACAnB,CACF,EAEJ,CAAE,MAAOxL,EAAO,CAQd,KAPA4L,CAAAA,EAAAA,EAAAA,EAAAA,CAAgBA,CAACC,EAAAA,EAAaA,CAACU,MAAM,CAAE,CACrCS,cAAe3L,iBACfqL,SACAC,EACA3M,MAAOwM,CAAAA,EAAAA,EAAAA,CAAAA,CAAOA,CAACxM,EACjB,GAEMA,CACR,CACF,CAEO,eAAeK,EAA0B,CAY/C,KAZ+C,CAC9Ca,UAAQ,SACRC,CAAO,MACPC,CAAI,sBACJC,CAAoB,eACpBE,CAAa,CAOd,CAZ+C,EAaxC,eAAE8G,CAAa,CAAEiD,aAAW,CAAE,CAAG,MAAMJ,EAAyB,UACpEhK,UACAC,uBACAE,gBACAE,CACF,GAEMoL,EAASC,EAAAA,EAAcA,CAACK,SAAS,CAEvC,GAAI,CACF,IAAMzB,EAAK,MAAMnD,EAAca,aAAa,CAAC9H,EAAKqD,EAAE,CAAErD,EAAKsD,KAAK,CAAEtD,EAAKwD,IAAI,CAAExD,EAAK0H,SAAS,EAEvFwC,EACFM,CAAAA,EAAAA,EAAAA,EAAAA,CAAgBA,CAACC,EAAAA,EAAaA,CAACkB,mCAAmC,CAAE,CAClEC,cAAe3L,EACfqL,eAAgBtL,EAAK0J,MAAM,QAC3B6B,EACA7B,OAAQU,EAAGG,IAAI,GAGjBJ,EAAkB,CAChByB,cAAe3L,EACfqL,eAAgBtL,EAAK0J,MAAM,QAC3B6B,KACAnB,CACF,EAEJ,CAAE,MAAOxL,EAAO,CAQd,KAPA4L,CAAAA,EAAAA,EAAAA,EAAAA,CAAgBA,CAACC,EAAAA,EAAaA,CAACU,MAAM,CAAE,CACrCS,cAAe3L,EACfqL,eAAgBtL,EAAK0J,MAAM,QAC3B6B,EACA3M,MAAOwM,CAAAA,EAAAA,EAAAA,CAAAA,CAAOA,CAACxM,EACjB,GAEMA,CACR,CACF,CAEO,eAAekN,EAA4B,CAYjD,KAZiD,UAChDhM,CAAQ,SACRC,CAAO,sBACPE,CAAoB,gBACpBqL,CAAc,eACdnL,CAAa,CAOd,CAZiD,EAa1C,CAAE8G,eAAa,CAAEiD,aAAW,CAAE,CAAG,MAAMJ,EAAyB,UACpEhK,UACAC,uBACAE,gBACAE,CACF,GAEMoL,EAASC,EAAAA,EAAcA,CAACO,YAAY,CAE1C,GAAI,CACF,IAAM3B,EAAK,MAAMnD,EAAce,WAAW,GAEtCkC,EACFM,CAAAA,EAAAA,EAAAA,EAAAA,CAAgBA,CAACC,EAAAA,EAAaA,CAACkB,mCAAmC,CAAE,CAClEC,cAAe3L,iBACfqL,SACAC,EACA7B,OAAQU,EAAGG,IAAI,GAGjBJ,EAAkB,CAChByB,cAAe3L,iBACfqL,SACAC,KACAnB,CACF,EAEJ,CAAE,MAAOxL,EAAO,CAQd,KAPA4L,CAAAA,EAAAA,EAAAA,EAAAA,CAAgBA,CAACC,EAAAA,EAAaA,CAACU,MAAM,CAAE,CACrCS,cAAe3L,iBACfqL,SACAC,EACA3M,MAAOwM,CAAAA,EAAAA,EAAAA,CAAAA,CAAOA,CAACxM,EACjB,GAEMA,CACR,CACF,+EC9OO,WAAK6L,CAAAA,mMAAAA,OASL,WAAKe,CAAAA,qFAAAA,OAIX,IAyCKQ,EAAmB,IAAIC,EAAAA,CAAQA,CAExBzB,EAAmBwB,EAAiBE,QAAQ,CAACC,IAAI,CAACH,GAElDI,EAAoBJ,EAAiBK,SAAS,CAACF,CAFoB,GAEhB,CAACH,GAGjEM,OAAOC,MAAM,CAAC9B,CAHoE,EAGrD+B,OAAO,CAAC,IACnCJ,EAAiC9B,EAAO,IACtCmC,QAAQC,IAAI,CAAC,YAAkB,OAANpC,EAAM,mBAAkBqC,EACnD,EACF,4DClEO,WAAKC,CAAAA,ixCAAAA,OAyCX,4ECzBD,IAAMC,EAAkB,GACtB,EAAKjO,EAAD,MAAa,EAAE,OAAO,IAER,CAACgO,GAAoBE,QAAQ,CAAClO,EAAMmO,MAAM,EAKjD/F,EAA2B,CACtC9H,EACAa,CAPqC6M,CAQrCI,KAEAC,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC/N,EAAOY,QAAQ,EAE9B,IAAMoN,EAAiBC,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACjO,EAAOY,QAAQ,EAEjD,GAAIZ,EAAOa,OAAO,GAAKA,EAAS,CAE9B,IAAMqN,EAAoB,CAAC,cAAe,WAAW,CAG/CC,EAAeH,EAAeI,IAAI,GAEzBA,IAAI,CAAG,SAACC,CAAAA,6BAAYvN,EAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CACjC,GAAIoN,EAAkBN,QAAQ,CAACS,GAC7B,OADuC,EACfD,IAAI,CAACE,IAAI,CAACR,EAAkBO,KAAYvN,GAElE,GAR0B,iBAQtBuN,EACF,OAAOF,EAAaG,CADNC,GACU,CAACP,EAAgBK,KAAYvN,EAEvD,OAAM,CAH+B,KAGrB,qCAClB,CACF,CAEA,OAAOkN,CACT,EAAC,EAE2B,CAC1BtG,EACA8G,KAMA,IAAMxO,EAASyO,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAClB,EAgDOC,IAhDLxO,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtB2N,EAAmBlG,CAAAA,CA+CO,CA/CPA,EAAAA,EAAAA,CAAeA,GAClC+G,EAAUC,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,GACxBnJ,EAAYvF,EAAKuF,SAAS,CAE1B,CAACoJ,EAAkBC,EAA0BC,EAAwB,CAAGlH,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAAC,UACrF,GAAI,GAAY7H,OAAD,CAAwBkB,IAAbsN,GAA2BV,EAIrD,GAAI,CAJgD,MAK7B,MALgD,CAK1CkB,CAAAA,EAAAA,EAAAA,CAAAA,CAA4BA,CAAC9O,EAAM4N,EAAiBmB,cAAc,GAAGC,IAAG,EAS/EvG,QAAQ,CAACwG,eAAe,CAAC5G,UAAU,CACrDb,EAAOpD,IAAI,CAACH,EAAE,CACduD,EAAOpD,IAAI,CAACF,KAAK,CACjBsD,EAAOpD,IAAI,CAACA,IAAI,CAChBoD,EAAOpD,IAAI,CAACkE,SAAS,CACrBd,EAAOpD,IAAI,CAAC8K,SAAS,CACrB1H,EAAOpD,IAAI,CAAC+K,OAAO,CACnB3H,EAAOpD,IAAI,CAACgL,QAAQ,CACpB5H,EAAOpD,IAAI,CAACiL,QAAQ,CACpB7H,EAAOpD,IAAI,CAACkL,cAAc,CAC1BC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC/H,EAAQiH,EAAU3O,EAAOgB,OAAO,MAAGE,EAAWwG,EAAOgI,UAAU,CAACrM,IAAI,CAAGoC,GACxF,CAAEkK,KAAM3P,EAAOgB,OAAO,CAAEwN,SAAUA,EAASnK,QAAQ,EAAG,EAE1D,CAAE,MAAOuL,EAAM,CAQb,MALIjC,OAEFxM,EAAI0M,MAAM,CAFQ1M,CAEJ,KAFU,MAE0B,CAA/BuM,CAAkB,CAACvM,EAAI0M,MAAM,EAAC,EAJvC+B,CAQd,CACF,EAAG,CAAClI,CD/D2B,CC+DnB1H,EAAQwO,EAAUtO,EAAM4N,EAAkBa,EAASlJ,EAAU,EAEzE,MAAO,kBAAEoJ,2BAAkBC,0BAA0BC,CAAwB,CAC/E,mDC3GO,IAAMU,EAAmB,CAC9B/H,EACAiI,EACAE,KAEA,IAAM7J,QAAQ2J,EAAAA,KAAAA,EAAAA,EAAMG,MAANH,KAAiB,GACzBI,EAAgBF,GAAkB7J,KAAU9E,OAAa,CAACwG,EAAOgI,UAAU,CAACM,GAAG,CAAChK,GAGtF,GAAI+J,EAAe,CACjB,IAAME,EAAWC,CAAAA,EAAAA,EAAAA,6BAAAA,CAA6BA,CAAClK,GAC/C0B,EAAOyI,YAAY,CAACF,EACtB,CAEA,IAAMG,EAAU1I,EAAO2I,iBAAiB,GAOxC,OAJIN,GACFrI,EAAOgI,UAAU,CAACY,MAAM,CAACtK,GAGpBoK,CACT,EAAC,iGChBM,IAAMG,EAAW,GAEfC,EADoBC,EAAoBC,IAOpCD,EAAsB,GANbE,EAQjBhM,MAAM,CAAa,CAACiM,EAAa5R,KAChC,GAAI6R,CAAAA,EAAAA,EAAAA,EAAAA,CAAwBA,CAAC7R,GAC3B,IADkC,GAC3B4R,EAAYzK,MAAM,CAAC,CAAC,EAAE,CAAC,EAGhC,IAAM2K,EAAWF,CAAW,CAACA,EAAYlK,MAAM,CAAG,EAAE,QACpD,MAAUqK,OAAO,CAACD,IAAaE,CAAAA,EAAAA,EAAAA,EAAAA,CAAqBA,CAAChS,IAAS,CAACiS,CAAAA,EAAAA,EAAAA,EAAAA,CAAkBA,CAACjS,IAChF8R,EAASI,CAD8E,GAC1E,CAAClS,GACP4R,GAGFA,EAAYzK,MAAM,CAACnH,EAC5B,EAAG,EAAE,EACJ8G,GAAG,CAAC,GACH,MAAUiL,OAAO,CAAC/R,GACTA,EAAKmS,EADW,EACP,CAAC,CAACC,EAAGC,IAAMA,EAAE5M,WAAW,CAAC8E,SAAS,CAAG6H,EAAE3M,WAAW,CAAC8E,SAAS,EAEvEvK,GAOPwR,EAAe,GACZE,EACJ/L,MAAM,CAAa,CAACiM,EAAa5R,KAChC,GAAIsS,MAAMP,OAAO,CAAC/R,IAAS,CAACgS,CAAAA,EAAAA,EAAAA,EAAAA,CAAqBA,CAAChS,GAChD,IADuD,GAChD4R,EAAYzK,MAAM,CAAC,CAACnH,EAAK,EAElC,IAAMuS,EAAgBvS,EAAKyF,WAAW,CAAC+F,MAAM,CAEvCsG,EAAWF,CAAW,CAACA,EAAYlK,MAAM,CAAG,EAAE,CACpD,GAAI,CAAC4K,MAAMP,OAAO,CAACD,GAAW,OAAOF,EAAYzK,MAAM,CAAC,CAAC,CAACnH,EAAK,CAAC,EAChE,IAAMwS,EAAaV,CAAQ,CAAC,EAAE,CAACrM,WAAW,CAAC+F,MAAM,QAEjD,GAAqB+G,IAAkBC,GACrCV,EAASI,IAAI,CAAClS,EADmC,CAE1C4R,GAGFA,EAAYzK,MAAM,CAAC,CAAC,CAACnH,EAAK,CAAC,CACpC,EAAG,EAAE,EACJ8G,GAAG,CAAC,GAAWwL,MAAMP,OAAO,CAAC/R,IAAyB,IAAhBA,EAAK0H,MAAM,CAAS1H,CAAI,CAAC,EAAE,CAAGA,GAkBlE,SAASyS,EAA0BC,CAAiC,CAAEC,CAAuC,EAClH,IAAMpN,EAAemN,EAAMpL,MAAM,CAAC0K,EAAAA,EAAqBA,EAEvD,OAAOW,EAAchN,MAAM,CAA6D,CAACC,EAAK5F,WAC5F,IAAM4S,GAnBgClF,EAmBU1N,EAAKgC,OAAO,CAAEuD,CAnBH,CAGzC+B,CAH2C/B,KAGrC,CAAC,MAHoE,CAGnE,aAAEE,CAAW,CAAE,GACnC,QAAEoN,CAAM,CAAE,CAAGpN,EACnB,OACEoN,EAAO7O,IAAI,GAAK8O,EAAAA,mBAAmBA,CAACC,MAAM,EAC1ChM,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAAC8L,EAAO1N,EAAE,CAACC,KAAK,CAAEsI,IANG,eAOhCmF,EAAOG,UAAU,IAmBnB,CAnBwBC,MAaK,GAAG,CAA5BL,EAAclL,MAAM,CACtB9B,EAAIsM,IAAI,CAAClS,GAET4F,EAAIsM,IAAI,CAAC,CAAClS,KAAS4S,EAAc,EAG5BhN,CACT,EAAG,EAAE,CACP,CAEO,IAAMsN,EAAwB,eAACxB,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAA8B,EAAE,CACpE,OACED,EAAoBC,GAEjB5K,EADD,CACI,CAAC,GAAYwL,MAAMP,OAAO,CAACoB,GAASA,CAAK,CAAC,EAAE,CAAGA,GAClD7L,MAAM,CAAC0K,EAAAA,EAAqBA,CAEnC,EAAC,WAJ4D,2BCnG7D,aACA,sBACA,aAAsB,wDAAwE,YAAgB,mBAAsB,KAAO,mBAAsB,mBAAoB,uCAAgD,UAAW,uBAwBhP,MApBA,YACA,cACA,UAkBuB,CAlBvB,CACA,EANA,cAA0C,oBAA0B,mBACpE,KAA+C,oBAA0B,SAAY,sBAAuB,2BAA8B,yBAA6B,WAAe,UADlH,KAAmD,iCAAoC,sCAAyC,QAAY,WAAc,8BAAkC,6CAAqD,UAMrT,KACA,OAAsB,eAAmB,UACzC,SACA,UACA,oBACA,YACA,mCACA,mBACA,CAAG,MAA+B,eAAmB,UACrD,IACA,CAAG,eAAgD,eAAmB,SACtE,mBACA,mBACA,iiBACA,mBACA,EAAG,EACH","sources":["webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/../../node_modules/@gnosis.pm/zodiac/dist/esm/index.js","webpack://_N_E/./src/components/new-safe/create/NetworkWarning/index.tsx","webpack://_N_E/./src/features/recovery/components/RecoveryValidationErrors/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/RecoveryAttempt/RecoveryAttemptReview.tsx","webpack://_N_E/./src/components/tx-flow/flows/RecoveryAttempt/index.tsx","webpack://_N_E/./src/features/recovery/services/transaction-list.ts","webpack://_N_E/./src/features/recovery/components/RecoveryDescription/index.tsx","webpack://_N_E/./src/features/recovery/components/RecoveryListItem/RecoveryListItemContext.tsx","webpack://_N_E/./src/features/recovery/hooks/useIsRecoverer.ts","webpack://_N_E/./src/features/recovery/hooks/useIsValidRecoveryExecution.ts","webpack://_N_E/./src/hooks/useClock.ts","webpack://_N_E/./src/features/recovery/hooks/useRecoveryTxState.ts","webpack://_N_E/./src/features/recovery/services/recovery-sender.ts","webpack://_N_E/./src/features/recovery/services/recoveryEvents.ts","webpack://_N_E/./src/services/contracts/ContractErrorCodes.ts","webpack://_N_E/./src/hooks/useIsValidExecution.ts","webpack://_N_E/./src/services/tx/encodeSignatures.ts","webpack://_N_E/./src/utils/tx-list.ts","webpack://_N_E/./public/images/common/close.svg"],"sourcesContent":["export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","\nexport { KnownContracts } from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/node_modules/@gnosis.pm/zodiac/dist/esm/factory/types.js\"\nexport { getModuleInstance } from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/node_modules/@gnosis.pm/zodiac/dist/esm/factory/moduleDeployer.js\"","import { Alert, AlertTitle, Box } from '@mui/material'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport ChainSwitcher from '@/components/common/ChainSwitcher'\nimport useIsWrongChain from '@/hooks/useIsWrongChain'\n\nconst NetworkWarning = ({ action }: { action?: string }) => {\n  const chain = useCurrentChain()\n  const isWrongChain = useIsWrongChain()\n\n  if (!chain || !isWrongChain) return null\n\n  return (\n    <Alert severity=\"warning\">\n      <AlertTitle sx={{ fontWeight: 700 }}>Change your wallet network</AlertTitle>You are trying to{' '}\n      {action || 'sign or execute a transaction'} on {chain.chainName}. Make sure that your wallet is set to the same\n      network.\n      <Box\n        sx={{\n          mt: 2,\n        }}\n      >\n        <ChainSwitcher />\n      </Box>\n    </Alert>\n  )\n}\n\nexport default NetworkWarning\n","import { useContext } from 'react'\nimport type { ReactElement } from 'react'\n\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport {\n  useIsValidRecoveryExecuteNextTx,\n  useIsValidRecoverySkipExpired,\n} from '@/features/recovery/hooks/useIsValidRecoveryExecution'\nimport { RecoveryListItemContext } from '../RecoveryListItem/RecoveryListItemContext'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\n\nexport function RecoveryValidationErrors({ item }: { item: RecoveryQueueItem }): ReactElement | null {\n  const { submitError } = useContext(RecoveryListItemContext)\n  const [, executeNextTxError] = useIsValidRecoveryExecuteNextTx(item)\n  const [, executeSkipExpiredError] = useIsValidRecoverySkipExpired(item)\n\n  // There can never be both errors as they are dependent on validity/expiration\n  const validationError = executeNextTxError ?? executeSkipExpiredError\n\n  if (!submitError && !validationError) {\n    return null\n  }\n\n  return (\n    <>\n      {validationError && (\n        <ErrorMessage error={validationError}>\n          This transaction will most likely fail. To save gas costs, avoid executing the transaction.\n        </ErrorMessage>\n      )}\n\n      {submitError && (\n        <ErrorMessage error={submitError}>Error submitting the transaction. Please try again.</ErrorMessage>\n      )}\n    </>\n  )\n}\n","import { type SyntheticEvent, useContext, useCallback, useEffect } from 'react'\nimport { CircularProgress, CardActions, Button, Typography, Stack, Divider } from '@mui/material'\nimport CheckWallet from '@/components/common/CheckWallet'\nimport { Errors, trackError } from '@/services/exceptions'\nimport { dispatchRecoveryExecution } from '@/features/recovery/services/recovery-sender'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport TxCard from '@/components/tx-flow/common/TxCard'\nimport { TxModalContext } from '@/components/tx-flow'\nimport NetworkWarning from '@/components/new-safe/create/NetworkWarning'\nimport { RecoveryValidationErrors } from '@/features/recovery/components/RecoveryValidationErrors'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\nimport { RecoveryDescription } from '@/features/recovery/components/RecoveryDescription'\nimport { useAsyncCallback } from '@/hooks/useAsync'\nimport FieldsGrid from '@/components/tx/FieldsGrid'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { SafeTxContext } from '../../SafeTxProvider'\n\ntype RecoveryAttemptReviewProps = {\n  item: RecoveryQueueItem\n}\n\nconst RecoveryAttemptReview = ({ item }: RecoveryAttemptReviewProps) => {\n  const { asyncCallback, isLoading, error } = useAsyncCallback(dispatchRecoveryExecution)\n  const wallet = useWallet()\n  const { safe } = useSafeInfo()\n  const { setTxFlow } = useContext(TxModalContext)\n  const { setNonceNeeded } = useContext(SafeTxContext)\n\n  const onFormSubmit = useCallback(\n    async (e: SyntheticEvent) => {\n      e.preventDefault()\n\n      if (!wallet) return\n\n      try {\n        await asyncCallback({\n          provider: wallet.provider,\n          chainId: safe.chainId,\n          args: item.args,\n          delayModifierAddress: item.address,\n          signerAddress: wallet.address,\n        })\n        setTxFlow(undefined)\n      } catch (err) {\n        trackError(Errors._812, err)\n      }\n    },\n    [asyncCallback, setTxFlow, wallet, safe, item.address, item.args],\n  )\n\n  useEffect(() => {\n    setNonceNeeded(false)\n  }, [setNonceNeeded])\n\n  return (\n    <TxCard>\n      <form onSubmit={onFormSubmit}>\n        <Stack\n          sx={{\n            gap: 3,\n            mb: 2,\n          }}\n        >\n          <Typography>Execute this transaction to finalize the recovery.</Typography>\n\n          <FieldsGrid title=\"Initiator\">\n            <EthHashInfo address={item.executor} showName showCopyButton hasExplorer />\n          </FieldsGrid>\n\n          <Divider sx={{ mx: -3 }} />\n\n          <RecoveryDescription item={item} />\n\n          <NetworkWarning />\n\n          <RecoveryValidationErrors item={item} />\n\n          {error && <ErrorMessage error={error}>Error submitting the transaction.</ErrorMessage>}\n        </Stack>\n\n        <Divider sx={{ mx: -3, my: 3.5 }} />\n\n        <CardActions>\n          {/* Submit button, also available to non-owner role members */}\n          <CheckWallet allowNonOwner>\n            {(isOk) => (\n              <Button\n                data-testid=\"execute-through-role-form-btn\"\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={!isOk || isLoading}\n                sx={{ minWidth: '112px' }}\n              >\n                {isLoading ? <CircularProgress size={20} /> : 'Execute'}\n              </Button>\n            )}\n          </CheckWallet>\n        </CardActions>\n      </form>\n    </TxCard>\n  )\n}\n\nexport default RecoveryAttemptReview\n","import TxLayout from '@/components/tx-flow/common/TxLayout'\nimport SaveAddressIcon from '@/public/images/common/save-address.svg'\nimport RecoveryAttemptReview from './RecoveryAttemptReview'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\n\nconst RecoveryAttemptFlow = ({ item }: { item: RecoveryQueueItem }) => {\n  return (\n    <TxLayout title=\"Recovery\" subtitle=\"Execute recovery\" icon={SaveAddressIcon} step={0} hideNonce>\n      <RecoveryAttemptReview item={item} />\n    </TxLayout>\n  )\n}\n\nexport default RecoveryAttemptFlow\n","import { sameAddress } from '@/utils/addresses'\nimport {\n  isSwapOwnerCalldata,\n  isAddOwnerWithThresholdCalldata,\n  isRemoveOwnerCalldata,\n  isChangeThresholdCalldata,\n  isMultiSendCalldata,\n} from '@/utils/transaction-calldata'\nimport { getSafeSingletonDeployment } from '@safe-global/safe-deployments'\nimport { Interface } from 'ethers'\nimport type { BaseTransaction } from '@safe-global/safe-apps-sdk'\nimport type { SafeInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport { decodeMultiSendData } from '@safe-global/protocol-kit/dist/src/utils'\n\nfunction decodeOwnerManagementTransaction(safe: SafeInfo, transaction: BaseTransaction): SafeInfo {\n  const safeDeployment = getSafeSingletonDeployment({ network: safe.chainId, version: safe.version ?? undefined })\n\n  if (!safeDeployment) {\n    throw new Error('No Safe deployment found')\n  }\n\n  const safeInterface = new Interface(safeDeployment.abi)\n\n  let _owners = safe.owners\n  let _threshold = safe.threshold\n\n  if (isSwapOwnerCalldata(transaction.data)) {\n    const [, ownerToRemove, ownerToAdd] = safeInterface.decodeFunctionData('swapOwner', transaction.data)\n\n    _owners = safe.owners.map((owner) => (sameAddress(owner.value, ownerToRemove) ? { value: ownerToAdd } : owner))\n  } else if (isAddOwnerWithThresholdCalldata(transaction.data)) {\n    const [ownerToAdd, newThreshold] = safeInterface.decodeFunctionData('addOwnerWithThreshold', transaction.data)\n\n    _owners = _owners.concat({ value: ownerToAdd })\n    _threshold = Number(newThreshold)\n  } else if (isRemoveOwnerCalldata(transaction.data)) {\n    const [, ownerToRemove, newThreshold] = safeInterface.decodeFunctionData('removeOwner', transaction.data)\n\n    _owners = safe.owners.filter((owner) => !sameAddress(owner.value, ownerToRemove))\n    _threshold = Number(newThreshold)\n  } else if (isChangeThresholdCalldata(transaction.data)) {\n    const [newThreshold] = safeInterface.decodeFunctionData('changeThreshold', transaction.data)\n\n    _threshold = Number(newThreshold)\n  } else {\n    throw new Error('Unexpected transaction')\n  }\n\n  return {\n    ...safe,\n    owners: _owners,\n    threshold: _threshold,\n  }\n}\n\nexport function getRecoveredSafeInfo(safe: SafeInfo, transaction: BaseTransaction): SafeInfo {\n  const transactions = isMultiSendCalldata(transaction.data) ? decodeMultiSendData(transaction.data) : [transaction]\n\n  return transactions.reduce((acc, cur) => {\n    return decodeOwnerManagementTransaction(acc, cur)\n  }, safe)\n}\n","import { Typography } from '@mui/material'\nimport { useMemo } from 'react'\nimport type { ReactElement } from 'react'\n\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { InfoDetails } from '@/components/transactions/InfoDetails'\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport { useIsRecoverer } from '@/features/recovery/hooks/useIsRecoverer'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { logError, Errors } from '@/services/exceptions'\nimport { getRecoveredSafeInfo } from '@/features/recovery/services/transaction-list'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\n\nexport function RecoveryDescription({ item }: { item: RecoveryQueueItem }): ReactElement {\n  const { args, isMalicious } = item\n  const { safe } = useSafeInfo()\n  const isRecoverer = useIsRecoverer()\n\n  const newSetup = useMemo(() => {\n    try {\n      return getRecoveredSafeInfo(safe, {\n        to: args.to,\n        value: args.value.toString(),\n        data: args.data,\n      })\n    } catch (e) {\n      logError(Errors._811, e)\n    }\n    // We only render the threshold and owners\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [args.data, args.to, args.value, safe.threshold, safe.owners])\n\n  if (isMalicious) {\n    return (\n      <ErrorMessage>This transaction potentially calls malicious actions. We recommend cancelling it.</ErrorMessage>\n    )\n  }\n\n  // TODO: Improve by using Tenderly to check if the proposal will fail\n  if (!newSetup || newSetup.owners.length === 0) {\n    return (\n      <ErrorMessage>\n        This recovery proposal will fail as the owner structure has since been modified. We recommend cancelling it\n        {isRecoverer ? ' and trying again' : ''}.\n      </ErrorMessage>\n    )\n  }\n\n  return (\n    <InfoDetails title=\"Add signer(s):\">\n      {newSetup.owners.map((owner) => (\n        <EthHashInfo key={owner.value} address={owner.value} shortAddress={false} showCopyButton hasExplorer />\n      ))}\n\n      <div>\n        <Typography fontWeight={700} gutterBottom>\n          Required confirmations for new transactions:\n        </Typography>\n        <Typography>\n          {newSetup.threshold} out of {newSetup.owners.length} owner(s)\n        </Typography>\n      </div>\n    </InfoDetails>\n  )\n}\n","import { createContext, useState } from 'react'\nimport type { Dispatch, ReactElement, SetStateAction } from 'react'\n\ntype SubmitError = Error | undefined\n\nexport const RecoveryListItemContext = createContext<{\n  submitError: SubmitError\n  setSubmitError: Dispatch<SetStateAction<SubmitError>>\n}>({\n  submitError: undefined,\n  setSubmitError: () => {},\n})\n\nexport function RecoveryListItemProvider({ children }: { children: ReactElement }): ReactElement {\n  const [submitError, setSubmitError] = useState<SubmitError>(undefined)\n\n  return (\n    <RecoveryListItemContext.Provider value={{ submitError, setSubmitError }}>\n      {children}\n    </RecoveryListItemContext.Provider>\n  )\n}\n","import { selectDelayModifierByRecoverer } from '@/features/recovery/services/selectors'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport useRecovery from '@/features/recovery/hooks/useRecovery'\n\nexport function useIsRecoverer() {\n  const [recovery] = useRecovery()\n  const wallet = useWallet()\n  return Boolean(wallet?.address && recovery && selectDelayModifierByRecoverer(recovery, wallet.address))\n}\n","import { getModuleInstance, KnownContracts } from '@gnosis.pm/zodiac'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\n\nimport useWallet from '../../../hooks/wallets/useWallet'\nimport { useWeb3ReadOnly } from '../../../hooks/wallets/web3'\nimport useAsync from '../../../hooks/useAsync'\nimport useSafeInfo from '../../../hooks/useSafeInfo'\nimport { getPatchedSignerProvider } from '../../../hooks/useIsValidExecution'\nimport { useRecoveryTxState } from './useRecoveryTxState'\nimport { useIsRecoverer } from './useIsRecoverer'\nimport type { AsyncResult } from '../../../hooks/useAsync'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\n\nexport function useIsValidRecoveryExecTransactionFromModule(\n  delayModifierAddress?: string,\n  safeTx?: SafeTransaction,\n): AsyncResult<boolean> {\n  const wallet = useWallet()\n  const { safe } = useSafeInfo()\n  const web3ReadOnly = useWeb3ReadOnly()\n  const isRecoverer = useIsRecoverer()\n\n  return useAsync(async () => {\n    if (!isRecoverer || !safeTx || !wallet || !web3ReadOnly || !delayModifierAddress) {\n      return\n    }\n\n    const provider = getPatchedSignerProvider(wallet, safe.chainId, web3ReadOnly)\n    const delayModifier = getModuleInstance(KnownContracts.DELAY, delayModifierAddress, provider)\n\n    const signer = await provider.getSigner()\n    const contract = delayModifier.connect(signer)\n\n    return contract.execTransactionFromModule.staticCall(\n      safeTx.data.to,\n      safeTx.data.value,\n      safeTx.data.data,\n      safeTx.data.operation,\n    )\n  }, [isRecoverer, safeTx, wallet, web3ReadOnly, safe.chainId, delayModifierAddress])\n}\n\nexport function useIsValidRecoveryExecuteNextTx(recovery: RecoveryQueueItem): AsyncResult<boolean> {\n  const wallet = useWallet()\n  const { safe } = useSafeInfo()\n  const web3ReadOnly = useWeb3ReadOnly()\n  const { isExecutable } = useRecoveryTxState(recovery)\n\n  return useAsync(async () => {\n    if (!isExecutable || !wallet?.address || !web3ReadOnly) {\n      return\n    }\n\n    const provider = getPatchedSignerProvider(wallet, safe.chainId, web3ReadOnly)\n    const delayModifier = getModuleInstance(KnownContracts.DELAY, recovery.address, provider)\n\n    const signer = await provider.getSigner()\n    const contract = delayModifier.connect(signer)\n\n    const { to, value, data, operation } = recovery.args\n\n    await contract.executeNextTx.staticCall(to, value, data, operation)\n\n    return true\n  }, [isExecutable, recovery.address, recovery.args, safe.chainId, wallet, web3ReadOnly])\n}\n\nexport function useIsValidRecoverySkipExpired(recovery: RecoveryQueueItem): AsyncResult<boolean> {\n  const wallet = useWallet()\n  const { safe } = useSafeInfo()\n  const web3ReadOnly = useWeb3ReadOnly()\n  const { isExpired } = useRecoveryTxState(recovery)\n\n  return useAsync(async () => {\n    if (!isExpired || !wallet?.address || !web3ReadOnly) {\n      return\n    }\n\n    const provider = getPatchedSignerProvider(wallet, safe.chainId, web3ReadOnly)\n    const delayModifier = getModuleInstance(KnownContracts.DELAY, recovery.address, provider)\n\n    const signer = await provider.getSigner()\n    const contract = delayModifier.connect(signer)\n\n    await contract.skipExpired.staticCall()\n\n    return true\n  }, [isExpired, recovery.address, safe.chainId, wallet, web3ReadOnly])\n}\n","import { useState, useEffect } from 'react'\n\nexport function useClock(interval = 1_000): number {\n  const [timestamp, setTimestamp] = useState(Date.now())\n\n  useEffect(() => {\n    const timeout = setInterval(() => {\n      setTimestamp((prev) => prev + interval)\n    }, interval)\n\n    return () => {\n      clearInterval(timeout)\n    }\n  }, [interval])\n\n  return timestamp\n}\n","import { useClock } from '../../../hooks/useClock'\nimport { selectDelayModifierByTxHash } from '@/features/recovery/services/selectors'\nimport recoveryStore from '@/features/recovery/components/RecoveryContext'\nimport { sameAddress } from '@/utils/addresses'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\n\nexport function useRecoveryTxState({ validFrom, expiresAt, transactionHash, args, address }: RecoveryQueueItem): {\n  isNext: boolean\n  isExecutable: boolean\n  isExpired: boolean\n  isPending: boolean\n  remainingSeconds: number\n} {\n  const { state, pending } = recoveryStore.useStore() || {}\n  const recovery = state?.[0]\n  const delayModifier = recovery && selectDelayModifierByTxHash(recovery, transactionHash)\n\n  // We don't display seconds in the interface, so we can use a 60s interval\n  const timestamp = useClock(60_000)\n  const remainingMs = Number(validFrom) - timestamp\n\n  const isValid = remainingMs <= 0\n  const isExpired = expiresAt !== null ? Number(expiresAt) <= Date.now() : false\n\n  // Check module address in case multiple Delay Modifiers enabled\n  const isNext =\n    !delayModifier ||\n    (sameAddress(delayModifier.address, address) && BigInt(args.queueNonce) === BigInt(delayModifier.txNonce))\n  const isExecutable = isNext && isValid && !isExpired\n  const isPending = !!pending?.[args.txHash]\n\n  const remainingSeconds = isValid ? 0 : Math.ceil(remainingMs / 1_000)\n\n  return { isNext, isExecutable, isExpired, remainingSeconds, isPending }\n}\n","import { getModuleInstance, KnownContracts } from '@gnosis.pm/zodiac'\nimport type { SafeInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport type { TransactionAddedEvent } from '@gnosis.pm/zodiac/dist/cjs/types/Delay'\nimport type { Eip1193Provider, TransactionResponse } from 'ethers'\n\nimport { didReprice, didRevert } from '@/utils/ethers-utils'\nimport { recoveryDispatch, RecoveryEvent, RecoveryTxType } from './recoveryEvents'\nimport { asError } from '@/services/exceptions/utils'\nimport { getUncheckedSigner } from '../../../services/tx/tx-sender/sdk'\nimport { isSmartContractWallet } from '@/utils/wallets'\n\nasync function getDelayModifierContract({\n  provider,\n  chainId,\n  delayModifierAddress,\n  signerAddress,\n}: {\n  provider: Eip1193Provider\n  chainId: string\n  delayModifierAddress: string\n  signerAddress: string\n}) {\n  const isSmartContract = await isSmartContractWallet(chainId, signerAddress)\n\n  const signer = await getUncheckedSigner(provider)\n  const delayModifier = getModuleInstance(KnownContracts.DELAY, delayModifierAddress, signer).connect(signer)\n\n  return {\n    isUnchecked: isSmartContract,\n    delayModifier,\n  }\n}\n\nfunction waitForRecoveryTx({\n  tx,\n  ...payload\n}: {\n  moduleAddress: string\n  recoveryTxHash: string\n  tx: TransactionResponse\n  txType: RecoveryTxType\n}) {\n  const event = {\n    ...payload,\n    txHash: tx.hash,\n  }\n\n  recoveryDispatch(RecoveryEvent.PROCESSING, event)\n  tx.wait()\n    .then((receipt) => {\n      if (didRevert(receipt!)) {\n        recoveryDispatch(RecoveryEvent.REVERTED, {\n          ...event,\n          error: new Error('Transaction reverted by EVM'),\n        })\n      } else {\n        recoveryDispatch(RecoveryEvent.PROCESSED, event)\n      }\n    })\n    .catch((error) => {\n      if (didReprice(error)) {\n        recoveryDispatch(RecoveryEvent.PROCESSED, event)\n      } else {\n        recoveryDispatch(RecoveryEvent.FAILED, {\n          ...event,\n          error: asError(error),\n        })\n      }\n    })\n}\n\nexport async function dispatchRecoveryProposal({\n  provider,\n  safe,\n  safeTx,\n  delayModifierAddress,\n  signerAddress,\n}: {\n  provider: Eip1193Provider\n  safe: SafeInfo\n  safeTx: SafeTransaction\n  delayModifierAddress: string\n  signerAddress: string\n}) {\n  const { delayModifier, isUnchecked } = await getDelayModifierContract({\n    provider,\n    chainId: safe.chainId,\n    delayModifierAddress,\n    signerAddress,\n  })\n\n  const txType = RecoveryTxType.PROPOSAL\n  let recoveryTxHash: string | undefined\n\n  try {\n    // Get recovery tx hash as a form of ID for FAILED event in event bus\n    recoveryTxHash = await delayModifier.getTransactionHash(\n      safeTx.data.to,\n      safeTx.data.value,\n      safeTx.data.data,\n      safeTx.data.operation,\n    )\n\n    const tx = await delayModifier.execTransactionFromModule(\n      safeTx.data.to,\n      safeTx.data.value,\n      safeTx.data.data,\n      safeTx.data.operation,\n    )\n\n    if (isUnchecked) {\n      recoveryDispatch(RecoveryEvent.PROCESSING_BY_SMART_CONTRACT_WALLET, {\n        moduleAddress: delayModifierAddress,\n        recoveryTxHash,\n        txType,\n        txHash: tx.hash,\n      })\n    } else {\n      waitForRecoveryTx({\n        moduleAddress: delayModifierAddress,\n        recoveryTxHash,\n        txType,\n        tx,\n      })\n    }\n  } catch (error) {\n    recoveryDispatch(RecoveryEvent.FAILED, {\n      moduleAddress: delayModifierAddress,\n      recoveryTxHash,\n      txType,\n      error: asError(error),\n    })\n\n    throw error\n  }\n}\n\nexport async function dispatchRecoveryExecution({\n  provider,\n  chainId,\n  args,\n  delayModifierAddress,\n  signerAddress,\n}: {\n  provider: Eip1193Provider\n  chainId: string\n  args: TransactionAddedEvent.Log['args']\n  delayModifierAddress: string\n  signerAddress: string\n}) {\n  const { delayModifier, isUnchecked } = await getDelayModifierContract({\n    provider,\n    chainId,\n    delayModifierAddress,\n    signerAddress,\n  })\n\n  const txType = RecoveryTxType.EXECUTION\n\n  try {\n    const tx = await delayModifier.executeNextTx(args.to, args.value, args.data, args.operation)\n\n    if (isUnchecked) {\n      recoveryDispatch(RecoveryEvent.PROCESSING_BY_SMART_CONTRACT_WALLET, {\n        moduleAddress: delayModifierAddress,\n        recoveryTxHash: args.txHash,\n        txType,\n        txHash: tx.hash,\n      })\n    } else {\n      waitForRecoveryTx({\n        moduleAddress: delayModifierAddress,\n        recoveryTxHash: args.txHash,\n        txType,\n        tx,\n      })\n    }\n  } catch (error) {\n    recoveryDispatch(RecoveryEvent.FAILED, {\n      moduleAddress: delayModifierAddress,\n      recoveryTxHash: args.txHash,\n      txType,\n      error: asError(error),\n    })\n\n    throw error\n  }\n}\n\nexport async function dispatchRecoverySkipExpired({\n  provider,\n  chainId,\n  delayModifierAddress,\n  recoveryTxHash,\n  signerAddress,\n}: {\n  provider: Eip1193Provider\n  chainId: string\n  delayModifierAddress: string\n  recoveryTxHash: string\n  signerAddress: string\n}) {\n  const { delayModifier, isUnchecked } = await getDelayModifierContract({\n    provider,\n    chainId,\n    delayModifierAddress,\n    signerAddress,\n  })\n\n  const txType = RecoveryTxType.SKIP_EXPIRED\n\n  try {\n    const tx = await delayModifier.skipExpired()\n\n    if (isUnchecked) {\n      recoveryDispatch(RecoveryEvent.PROCESSING_BY_SMART_CONTRACT_WALLET, {\n        moduleAddress: delayModifierAddress,\n        recoveryTxHash,\n        txType,\n        txHash: tx.hash,\n      })\n    } else {\n      waitForRecoveryTx({\n        moduleAddress: delayModifierAddress,\n        recoveryTxHash,\n        txType,\n        tx,\n      })\n    }\n  } catch (error) {\n    recoveryDispatch(RecoveryEvent.FAILED, {\n      moduleAddress: delayModifierAddress,\n      recoveryTxHash,\n      txType,\n      error: asError(error),\n    })\n\n    throw error\n  }\n}\n","import EventBus from '../../../services/EventBus'\n\nexport enum RecoveryEvent {\n  PROCESSING_BY_SMART_CONTRACT_WALLET = 'PROCESSING_BY_SMART_CONTRACT_WALLET',\n  PROCESSING = 'PROCESSING', // Submitted to the blockchain\n  PROCESSED = 'PROCESSED', // Executed on the blockchain\n  SUCCESS = 'SUCCESS', // Loaded from the blockchain\n  FAILED = 'FAILED',\n  REVERTED = 'REVERTED',\n}\n\nexport enum RecoveryTxType {\n  PROPOSAL = 'PROPOSAL',\n  EXECUTION = 'EXECUTION',\n  SKIP_EXPIRED = 'SKIP_EXPIRED',\n}\n\nexport interface RecoveryEvents {\n  [RecoveryEvent.PROCESSING_BY_SMART_CONTRACT_WALLET]: {\n    moduleAddress: string\n    txHash: string\n    recoveryTxHash: string\n    txType: RecoveryTxType\n  }\n  [RecoveryEvent.PROCESSING]: {\n    moduleAddress: string\n    txHash: string\n    recoveryTxHash: string\n    txType: RecoveryTxType\n  }\n  [RecoveryEvent.REVERTED]: {\n    moduleAddress: string\n    txHash: string\n    recoveryTxHash: string\n    error: Error\n    txType: RecoveryTxType\n  }\n  [RecoveryEvent.PROCESSED]: {\n    moduleAddress: string\n    txHash: string\n    recoveryTxHash: string\n    txType: RecoveryTxType\n  }\n  [RecoveryEvent.FAILED]: {\n    moduleAddress: string\n    txHash?: string\n    recoveryTxHash?: string\n    error: Error\n    txType: RecoveryTxType\n  }\n  [RecoveryEvent.SUCCESS]: {\n    recoveryTxHash: string\n    txType: RecoveryTxType\n  }\n}\n\nconst recoveryEventBus = new EventBus<RecoveryEvents>()\n\nexport const recoveryDispatch = recoveryEventBus.dispatch.bind(recoveryEventBus)\n\nexport const recoverySubscribe = recoveryEventBus.subscribe.bind(recoveryEventBus)\n\n// Log all events\nObject.values(RecoveryEvent).forEach((event: RecoveryEvent) => {\n  recoverySubscribe<RecoveryEvent>(event, (detail) => {\n    console.info(`Recovery ${event} event received`, detail)\n  })\n})\n","// https://github.com/gnosis/safe-contracts/blob/main/docs/error_codes.md\nexport enum ContractErrorCodes {\n  // General init related\n  GS000 = 'Could not finish initialization',\n  GS001 = 'Threshold needs to be defined',\n\n  // General gas/ execution related\n  GS010 = 'Not enough gas to execute Safe transaction',\n  GS011 = 'Could not pay gas costs with ether',\n  GS012 = 'Could not pay gas costs with token',\n  GS013 = 'Safe transaction failed when gasPrice and safeTxGas were 0',\n\n  // General signature validation related\n  GS020 = 'Signatures data too short',\n  GS021 = 'Invalid contract signature location = inside static part',\n  GS022 = 'Invalid contract signature location = length not present',\n  GS023 = 'Invalid contract signature location = data not complete',\n  GS024 = 'Invalid contract signature provided',\n  GS025 = 'Hash has not been approved',\n  GS026 = 'Invalid owner provided',\n\n  // General auth related\n  GS030 = 'Only owners can approve a hash',\n  GS031 = 'Method can only be called from this contract',\n\n  // Module management related\n  GS100 = 'Modules have already been initialized',\n  GS101 = 'Invalid module address provided',\n  GS102 = 'Module has already been added',\n  GS103 = 'Invalid prevModule, module pair provided',\n  GS104 = 'Method can only be called from an enabled module',\n\n  // Owner management related\n  GS200 = 'Owners have already been set up',\n  GS201 = 'Threshold cannot exceed owner count',\n  GS202 = 'Threshold needs to be greater than 0',\n  GS203 = 'Invalid owner address provided',\n  GS204 = 'Address is already an owner',\n  GS205 = 'Invalid prevOwner, owner pair provided',\n\n  // Guard management related\n  GS300 = 'Guard does not implement IERC165',\n}\n\nexport default ContractErrorCodes\n","import type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport type { EthersError } from '@/utils/ethers-utils'\n\nimport useAsync from './useAsync'\nimport ContractErrorCodes from '@/services/contracts/ContractErrorCodes'\nimport { type SafeInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport { createWeb3, useWeb3ReadOnly } from '@/hooks/wallets/web3'\nimport { type JsonRpcProvider } from 'ethers'\nimport { type ConnectedWallet } from '@/hooks/wallets/useOnboard'\nimport { getCurrentGnosisSafeContract } from '@/services/contracts/safeContracts'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { useSigner } from '@/hooks/wallets/useWallet'\nimport { encodeSignatures } from '@/services/tx/encodeSignatures'\nimport useIsSafeOwner from '@/hooks/useIsSafeOwner'\nimport { type NestedWallet } from '@/utils/nested-safe-wallet'\nimport { assertProvider } from '@/utils/helpers'\n\nconst isContractError = (error: EthersError) => {\n  if (!error.reason) return false\n\n  return Object.keys(ContractErrorCodes).includes(error.reason)\n}\n\n// Monkey patch the signerProvider to proxy requests to the \"readonly\" provider if on the wrong chain\n// This is ONLY used to check the validity of a transaction in `useIsValidExecution`\nexport const getPatchedSignerProvider = (\n  wallet: ConnectedWallet | NestedWallet,\n  chainId: SafeInfo['chainId'],\n  readOnlyProvider: JsonRpcProvider,\n) => {\n  assertProvider(wallet.provider)\n\n  const signerProvider = createWeb3(wallet.provider)\n\n  if (wallet.chainId !== chainId) {\n    // The RPC methods that are used when we call contract.callStatic.execTransaction\n    const READ_ONLY_METHODS = ['eth_chainId', 'eth_call']\n    const ETH_ACCOUNTS_METHOD = 'eth_accounts'\n\n    const originalSend = signerProvider.send\n\n    signerProvider.send = (request, ...args) => {\n      if (READ_ONLY_METHODS.includes(request)) {\n        return readOnlyProvider.send.call(readOnlyProvider, request, ...args)\n      }\n      if (request === ETH_ACCOUNTS_METHOD) {\n        return originalSend.call(signerProvider, request, ...args)\n      }\n      throw new Error('Invalid execution validity request')\n    }\n  }\n\n  return signerProvider\n}\n\nconst useIsValidExecution = (\n  safeTx?: SafeTransaction,\n  gasLimit?: bigint,\n): {\n  isValidExecution?: boolean\n  executionValidationError?: Error\n  isValidExecutionLoading: boolean\n} => {\n  const wallet = useSigner()\n  const { safe } = useSafeInfo()\n  const readOnlyProvider = useWeb3ReadOnly()\n  const isOwner = useIsSafeOwner()\n  const threshold = safe.threshold\n\n  const [isValidExecution, executionValidationError, isValidExecutionLoading] = useAsync(async () => {\n    if (!safeTx || !wallet || gasLimit === undefined || !readOnlyProvider) {\n      return\n    }\n\n    try {\n      const safeContract = await getCurrentGnosisSafeContract(safe, readOnlyProvider._getConnection().url)\n\n      /**\n       * We need to call the contract directly instead of using `sdk.isValidTransaction`\n       * because `gasLimit` errors are otherwise not propagated.\n       * @see https://github.com/safe-global/safe-core-sdk/blob/main/packages/safe-ethers-lib/src/contracts/GnosisSafe/GnosisSafeContractEthers.ts#L126\n       * This also fixes the over-fetching issue of the monkey patched provider.\n       */\n\n      return safeContract.contract.execTransaction.staticCall(\n        safeTx.data.to,\n        safeTx.data.value,\n        safeTx.data.data,\n        safeTx.data.operation,\n        safeTx.data.safeTxGas,\n        safeTx.data.baseGas,\n        safeTx.data.gasPrice,\n        safeTx.data.gasToken,\n        safeTx.data.refundReceiver,\n        encodeSignatures(safeTx, isOwner ? wallet.address : undefined, safeTx.signatures.size < threshold),\n        { from: wallet.address, gasLimit: gasLimit.toString() },\n      )\n    } catch (_err) {\n      const err = _err as EthersError\n\n      if (isContractError(err)) {\n        // @ts-ignore\n        err.reason += `: ${ContractErrorCodes[err.reason]}`\n      }\n\n      throw err\n    }\n  }, [safeTx, wallet, gasLimit, safe, readOnlyProvider, isOwner, threshold])\n\n  return { isValidExecution, executionValidationError, isValidExecutionLoading }\n}\n\nexport default useIsValidExecution\n","import type { SafeTransaction } from '@safe-global/safe-core-sdk-types'\nimport { generatePreValidatedSignature } from '@safe-global/protocol-kit/dist/src/utils/signatures'\n\nexport const encodeSignatures = (\n  safeTx: SafeTransaction,\n  from: string | undefined,\n  needsSignature: boolean,\n): string => {\n  const owner = from?.toLowerCase()\n  const needsOwnerSig = needsSignature && owner !== undefined && !safeTx.signatures.has(owner)\n\n  // https://docs.gnosis.io/safe/docs/contracts_signatures/#pre-validated-signatures\n  if (needsOwnerSig) {\n    const ownerSig = generatePreValidatedSignature(owner)\n    safeTx.addSignature(ownerSig)\n  }\n\n  const encoded = safeTx.encodedSignatures()\n\n  // Remove the \"fake\" signature we've just added\n  if (needsOwnerSig) {\n    safeTx.signatures.delete(owner)\n  }\n\n  return encoded\n}\n","import { TransactionInfoType } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { Transaction, TransactionListItem } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport { isConflictHeaderListItem, isNoneConflictType, isTransactionListItem } from '@/utils/transaction-guards'\nimport { sameAddress } from './addresses'\nimport type { RecoveryQueueItem } from '@/features/recovery/services/recovery-state'\n\ntype GroupedTxs = Array<TransactionListItem | Transaction[]>\n\nexport const groupTxs = (list: TransactionListItem[]) => {\n  const groupedByConflicts = groupConflictingTxs(list)\n  return groupBulkTxs(groupedByConflicts)\n}\n\n/**\n * Group txs by conflict header\n */\nexport const groupConflictingTxs = (list: TransactionListItem[]): GroupedTxs => {\n  return list\n    .reduce<GroupedTxs>((resultItems, item) => {\n      if (isConflictHeaderListItem(item)) {\n        return resultItems.concat([[]])\n      }\n\n      const prevItem = resultItems[resultItems.length - 1]\n      if (Array.isArray(prevItem) && isTransactionListItem(item) && !isNoneConflictType(item)) {\n        prevItem.push(item)\n        return resultItems\n      }\n\n      return resultItems.concat(item)\n    }, [])\n    .map((item) => {\n      if (Array.isArray(item)) {\n        return item.sort((a, b) => b.transaction.timestamp - a.transaction.timestamp)\n      }\n      return item\n    })\n}\n\n/**\n * Group txs by tx hash\n */\nconst groupBulkTxs = (list: GroupedTxs): GroupedTxs => {\n  return list\n    .reduce<GroupedTxs>((resultItems, item) => {\n      if (Array.isArray(item) || !isTransactionListItem(item)) {\n        return resultItems.concat([item])\n      }\n      const currentTxHash = item.transaction.txHash\n\n      const prevItem = resultItems[resultItems.length - 1]\n      if (!Array.isArray(prevItem)) return resultItems.concat([[item]])\n      const prevTxHash = prevItem[0].transaction.txHash\n\n      if (currentTxHash && currentTxHash === prevTxHash) {\n        prevItem.push(item)\n        return resultItems\n      }\n\n      return resultItems.concat([[item]])\n    }, [])\n    .map((item) => (Array.isArray(item) && item.length === 1 ? item[0] : item))\n}\n\nexport function _getRecoveryCancellations(moduleAddress: string, transactions: Array<Transaction>) {\n  const CANCELLATION_TX_METHOD_NAME = 'setTxNonce'\n\n  return transactions.filter(({ transaction }) => {\n    const { txInfo } = transaction\n    return (\n      txInfo.type === TransactionInfoType.CUSTOM &&\n      sameAddress(txInfo.to.value, moduleAddress) &&\n      txInfo.methodName === CANCELLATION_TX_METHOD_NAME\n    )\n  })\n}\n\ntype GroupedRecoveryQueueItem = Transaction | RecoveryQueueItem\n\nexport function groupRecoveryTransactions(queue: Array<TransactionListItem>, recoveryQueue: Array<RecoveryQueueItem>) {\n  const transactions = queue.filter(isTransactionListItem)\n\n  return recoveryQueue.reduce<Array<RecoveryQueueItem | Array<GroupedRecoveryQueueItem>>>((acc, item) => {\n    const cancellations = _getRecoveryCancellations(item.address, transactions)\n\n    if (cancellations.length === 0) {\n      acc.push(item)\n    } else {\n      acc.push([item, ...cancellations])\n    }\n\n    return acc\n  }, [])\n}\n\nexport const getLatestTransactions = (list: TransactionListItem[] = []): Transaction[] => {\n  return (\n    groupConflictingTxs(list)\n      // Get latest transaction if there are conflicting ones\n      .map((group) => (Array.isArray(group) ? group[0] : group))\n      .filter(isTransactionListItem)\n  )\n}\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgClose = function SvgClose(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 15,\n    viewBox: \"0 0 15 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8.47717 7.69172L13.7585 12.832C14.1467 13.2098 14.1467 13.8275 13.7585 14.2052C13.3694 14.583 12.7358 14.583 12.3476 14.2052L7.06626 9.06494L1.7849 14.2052C1.39575 14.583 0.76214 14.583 0.373991 14.2052C-0.0151556 13.8275 -0.0151556 13.2098 0.373991 12.832L5.65536 7.69172L0.373891 2.55133C-0.0152554 2.17354 -0.0152554 1.55589 0.373891 1.17811C0.76204 0.799355 1.39565 0.799355 1.7848 1.17811L7.06626 6.3185L12.3477 1.17811C12.7359 0.799355 13.3695 0.799355 13.7586 1.17811C14.1468 1.55589 14.1468 2.17354 13.7586 2.55133L8.47717 7.69172Z\",\n    fill: \"currentColor\"\n  })));\n};\nexport default SvgClose;"],"names":["action","chain","useCurrentChain","NetworkWarning","isWrongChain","useIsWrongChain","Alert","severity","AlertTitle","sx","fontWeight","chainName","Box","mt","ChainSwitcher","RecoveryValidationErrors","item","submitError","useContext","RecoveryListItemContext","executeNextTxError","useIsValidRecoveryExecuteNextTx","executeSkipExpiredError","useIsValidRecoverySkipExpired","validationError","ErrorMessage","error","asyncCallback","RecoveryAttemptReview","isLoading","useAsyncCallback","dispatchRecoveryExecution","wallet","useWallet","safe","useSafeInfo","setTxFlow","TxModalContext","setNonceNeeded","SafeTxContext","onFormSubmit","useCallback","e","preventDefault","provider","chainId","args","delayModifierAddress","address","signerAddress","undefined","err","trackError","Errors","_812","useEffect","TxCard","form","onSubmit","Stack","gap","mb","Typography","FieldsGrid","title","EthHashInfo","executor","showName","showCopyButton","hasExplorer","Divider","mx","RecoveryDescription","my","CardActions","CheckWallet","allowNonOwner","Button","data-testid","variant","type","disabled","isOk","minWidth","CircularProgress","size","RecoveryAttemptFlow","TxLayout","subtitle","icon","SaveAddressIcon","step","hideNonce","isMalicious","isRecoverer","useIsRecoverer","newSetup","useMemo","getRecoveredSafeInfo","to","value","toString","data","transactions","isMultiSendCalldata","transaction","decodeMultiSendData","reduce","acc","cur","decodeOwnerManagementTransaction","safeDeployment","getSafeSingletonDeployment","network","version","safeInterface","Interface","abi","_owners","owners","_threshold","threshold","isSwapOwnerCalldata","ownerToRemove","ownerToAdd","decodeFunctionData","map","sameAddress","owner","isAddOwnerWithThresholdCalldata","newThreshold","concat","Number","isRemoveOwnerCalldata","filter","isChangeThresholdCalldata","logError","_811","length","InfoDetails","shortAddress","div","gutterBottom","createContext","setSubmitError","RecoveryListItemProvider","children","useState","Provider","recovery","useRecovery","Boolean","selectDelayModifierByRecoverer","useIsValidRecoveryExecTransactionFromModule","safeTx","web3ReadOnly","useWeb3ReadOnly","useAsync","getPatchedSignerProvider","delayModifier","getModuleInstance","KnownContracts","DELAY","signer","getSigner","connect","execTransactionFromModule","staticCall","operation","isExecutable","useRecoveryTxState","contract","executeNextTx","isExpired","skipExpired","validFrom","expiresAt","transactionHash","state","pending","recoveryStore","useStore","selectDelayModifierByTxHash","timestamp","useClock","interval","setTimestamp","Date","now","timeout","setInterval","prev","clearInterval","remainingMs","isValid","isNext","BigInt","queueNonce","txNonce","isPending","txHash","remainingSeconds","Math","ceil","getDelayModifierContract","isSmartContract","isSmartContractWallet","getUncheckedSigner","isUnchecked","waitForRecoveryTx","tx","payload","event","hash","recoveryDispatch","RecoveryEvent","PROCESSING","wait","then","didRevert","receipt","REVERTED","PROCESSED","catch","didReprice","FAILED","asError","dispatchRecoveryProposal","recoveryTxHash","txType","RecoveryTxType","PROPOSAL","getTransactionHash","PROCESSING_BY_SMART_CONTRACT_WALLET","moduleAddress","EXECUTION","dispatchRecoverySkipExpired","SKIP_EXPIRED","recoveryEventBus","EventBus","dispatch","bind","recoverySubscribe","subscribe","Object","values","forEach","console","info","detail","ContractErrorCodes","isContractError","includes","reason","readOnlyProvider","assertProvider","signerProvider","createWeb3","READ_ONLY_METHODS","originalSend","send","request","call","ETH_ACCOUNTS_METHOD","gasLimit","useSigner","useIsValidExecution","isOwner","useIsSafeOwner","isValidExecution","executionValidationError","isValidExecutionLoading","getCurrentGnosisSafeContract","_getConnection","url","execTransaction","safeTxGas","baseGas","gasPrice","gasToken","refundReceiver","encodeSignatures","signatures","from","_err","needsSignature","toLowerCase","needsOwnerSig","has","ownerSig","generatePreValidatedSignature","addSignature","encoded","encodedSignatures","delete","groupTxs","groupBulkTxs","groupConflictingTxs","list","groupedByConflicts","resultItems","isConflictHeaderListItem","prevItem","isArray","isTransactionListItem","isNoneConflictType","push","sort","a","b","Array","currentTxHash","prevTxHash","groupRecoveryTransactions","queue","recoveryQueue","cancellations","txInfo","TransactionInfoType","CUSTOM","methodName","CANCELLATION_TX_METHOD_NAME","getLatestTransactions","group"],"sourceRoot":"","ignoreList":[1]}