{"version":3,"file":"static/chunks/6973-5c2da25d8ca3c358.js","mappings":"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","sources":["webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/BlockedAddress/index.tsx","webpack://_N_E/./src/components/common/Disclaimer/index.tsx","webpack://_N_E/./src/hooks/messages/useIsSafeMessageSignableBy.ts","webpack://_N_E/./src/components/safe-messages/SignMsgButton/index.tsx","webpack://_N_E/./src/components/safe-messages/MsgDetails/index.tsx","webpack://_N_E/./src/components/safe-messages/MsgType/index.tsx","webpack://_N_E/./src/hooks/messages/useIsSafeMessagePending.ts","webpack://_N_E/./src/hooks/messages/useSafeMessageStatus.ts","webpack://_N_E/./src/components/safe-messages/MsgSummary/index.tsx","webpack://_N_E/./src/components/safe-messages/MsgListItem/ExpandableMsgItem.tsx","webpack://_N_E/./src/components/common/Disclaimer/styles.module.css","webpack://_N_E/./public/images/messages/created.svg","webpack://_N_E/./public/images/messages/signed.svg"],"sourcesContent":["export * from \"/Users/liuxiaolin/Documents/other/safe-wallet-monorepo/apps/web/src/components/common/Mui/index.tsx\"","import type { ReactElement } from 'react'\nimport { useMediaQuery, useTheme } from '@mui/material'\nimport { shortenAddress } from '@/utils/formatters'\nimport { useRouter } from 'next/router'\nimport Disclaimer from '@/components/common/Disclaimer'\nimport { AppRoutes } from '@/config/routes'\n\nexport const BlockedAddress = ({\n  address,\n  featureTitle,\n  onClose,\n}: {\n  address: string\n  featureTitle: string\n  onClose?: () => void\n}): ReactElement => {\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\n  const displayAddress = address && isMobile ? shortenAddress(address) : address\n  const router = useRouter()\n\n  const handleAccept = () => {\n    router.push({ pathname: AppRoutes.home, query: router.query })\n  }\n\n  return (\n    <Disclaimer\n      title=\"Blocked address\"\n      subtitle={displayAddress}\n      content={`The above address is part of the OFAC SDN list and the ${featureTitle} is unavailable for sanctioned addresses.`}\n      onAccept={onClose ?? handleAccept}\n    />\n  )\n}\n\nexport default BlockedAddress\n","import type { ReactElement, ReactNode } from 'react'\nimport { Box, Button, Divider, Paper, Stack, SvgIcon, Typography } from '@mui/material'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport css from './styles.module.css'\n\nexport const Disclaimer = ({\n  title,\n  subtitle,\n  buttonText,\n  content,\n  onAccept,\n}: {\n  title: string\n  subtitle?: string\n  buttonText?: string\n  content: ReactNode\n  onAccept: () => void\n}): ReactElement => {\n  return (\n    <div className={css.container}>\n      <Paper sx={{ maxWidth: '500px' }}>\n        <Stack\n          sx={[\n            {\n              padding: 'var(--space-3)',\n              gap: 2,\n              display: 'flex',\n              alignItems: 'center',\n            },\n            ({ palette }) => ({ borderBottom: `1px solid ${palette.border.light}` }),\n          ]}\n        >\n          {subtitle && (\n            <Typography\n              sx={{\n                color: 'var(--color-text-secondary)',\n              }}\n            >\n              {subtitle}\n            </Typography>\n          )}\n\n          <Box className={css.iconCircle}>\n            <SvgIcon component={InfoIcon} inheritViewBox fontSize=\"medium\" />\n          </Box>\n          <Typography\n            variant=\"h3\"\n            sx={{\n              fontWeight: 700,\n            }}\n          >\n            {title}\n          </Typography>\n          <Typography variant=\"body2\">{content}</Typography>\n          <Divider />\n        </Stack>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 3,\n            pb: 2,\n          }}\n        >\n          <Button variant=\"contained\" size=\"small\" sx={{ px: '16px' }} onClick={onAccept}>\n            {buttonText || 'Got it'}\n          </Button>\n        </Box>\n      </Paper>\n    </div>\n  )\n}\n\nexport default Disclaimer\n","import type { SafeMessage } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport useIsSafeOwner from '@/hooks/useIsSafeOwner'\n\nconst useIsSafeMessageSignableBy = (message: SafeMessage, walletAddress: string): boolean => {\n  const isSafeOwner = useIsSafeOwner()\n  return isSafeOwner && message.confirmations.every(({ owner }) => owner.value !== walletAddress)\n}\n\nexport default useIsSafeMessageSignableBy\n","import { Button, Tooltip } from '@mui/material'\nimport { useContext } from 'react'\nimport type { SyntheticEvent, ReactElement } from 'react'\nimport type { SafeMessage } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport useWallet from '@/hooks/wallets/useWallet'\nimport Track from '@/components/common/Track'\nimport { MESSAGE_EVENTS } from '@/services/analytics/events/txList'\nimport useIsSafeMessageSignableBy from '@/hooks/messages/useIsSafeMessageSignableBy'\nimport { TxModalContext } from '@/components/tx-flow'\nimport { SignMessageFlow } from '@/components/tx-flow/flows'\nimport CheckWallet from '@/components/common/CheckWallet'\n\nconst SignMsgButton = ({ msg, compact = false }: { msg: SafeMessage; compact?: boolean }): ReactElement => {\n  const wallet = useWallet()\n  const isSignable = useIsSafeMessageSignableBy(msg, wallet?.address || '')\n  const { setTxFlow } = useContext(TxModalContext)\n\n  const onClick = (e: SyntheticEvent) => {\n    e.stopPropagation()\n    setTxFlow(<SignMessageFlow {...msg} />)\n  }\n\n  return (\n    <CheckWallet>\n      {(isOk) => (\n        <Tooltip title={isOk && !isSignable ? \"You've already signed this message\" : ''}>\n          <span>\n            <Track {...MESSAGE_EVENTS.SIGN}>\n              <Button\n                onClick={onClick}\n                variant={isSignable ? 'contained' : 'outlined'}\n                disabled={!isOk || !isSignable}\n                size={compact ? 'small' : 'stretched'}\n                sx={compact ? { py: 0.8 } : undefined}\n              >\n                Sign\n              </Button>\n            </Track>\n          </span>\n        </Tooltip>\n      )}\n    </CheckWallet>\n  )\n}\n\nexport default SignMsgButton\n","import { useMemo, type ReactElement } from 'react'\nimport { Accordion, AccordionSummary, Typography, AccordionDetails, Box } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport CodeIcon from '@mui/icons-material/Code'\nimport classNames from 'classnames'\nimport { SafeMessageStatus, type SafeMessage } from '@safe-global/safe-gateway-typescript-sdk'\nimport { ErrorBoundary } from '@sentry/react'\n\nimport { formatDateTime } from '@/utils/date'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { InfoDetails } from '@/components/transactions/InfoDetails'\nimport { generateDataRowValue, TxDataRow } from '@/components/transactions/TxDetails/Summary/TxDataRow'\nimport MsgSigners from '@/components/safe-messages/MsgSigners'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport SignMsgButton from '@/components/safe-messages/SignMsgButton'\nimport { generateSafeMessageMessage, isEIP712TypedData } from '@/utils/safe-messages'\n\nimport txDetailsCss from '@/components/transactions/TxDetails/styles.module.css'\nimport singleTxDecodedCss from '@/components/transactions/TxDetails/TxData/DecodedData/SingleTxDecoded/styles.module.css'\nimport infoDetailsCss from '@/components/transactions/InfoDetails/styles.module.css'\nimport { DecodedMsg } from '../DecodedMsg'\nimport CopyButton from '@/components/common/CopyButton'\nimport NamedAddressInfo from '@/components/common/NamedAddressInfo'\nimport MsgShareLink from '../MsgShareLink'\n\nconst MsgDetails = ({ msg }: { msg: SafeMessage }): ReactElement => {\n  const wallet = useWallet()\n  const isConfirmed = msg.status === SafeMessageStatus.CONFIRMED\n  const safeMessage = useMemo(() => {\n    try {\n      return generateSafeMessageMessage(msg.message)\n    } catch (e) {\n      return ''\n    }\n  }, [msg.message])\n  const verifyingContract = isEIP712TypedData(msg.message) ? msg.message.domain.verifyingContract : undefined\n\n  return (\n    <div className={txDetailsCss.container}>\n      <div className={txDetailsCss.details}>\n        <div className={txDetailsCss.shareLink}>\n          <MsgShareLink safeMessageHash={msg.messageHash} />\n        </div>\n        <div className={txDetailsCss.txData}>\n          <InfoDetails title=\"Created by:\">\n            <EthHashInfo\n              address={msg.proposedBy.value || ''}\n              name={msg.proposedBy.name}\n              customAvatar={msg.proposedBy.logoUri}\n              shortAddress={false}\n              showCopyButton\n              hasExplorer\n            />\n          </InfoDetails>\n        </div>\n\n        {verifyingContract && (\n          <div className={txDetailsCss.txData}>\n            <InfoDetails title=\"Verifying contract:\">\n              <NamedAddressInfo address={verifyingContract} shortAddress={false} showCopyButton hasExplorer />\n            </InfoDetails>\n          </div>\n        )}\n\n        <div className={txDetailsCss.txData}>\n          <InfoDetails\n            title={\n              <>\n                Message <CopyButton text={JSON.stringify(msg.message, null, 2)} />\n              </>\n            }\n          >\n            <ErrorBoundary fallback={<div>Error decoding message</div>}>\n              <DecodedMsg message={msg.message} />\n            </ErrorBoundary>\n          </InfoDetails>\n        </div>\n\n        <div className={txDetailsCss.txSummary}>\n          <TxDataRow title=\"Created:\">{formatDateTime(msg.creationTimestamp)}</TxDataRow>\n          <TxDataRow title=\"Last modified:\">{formatDateTime(msg.modifiedTimestamp)}</TxDataRow>\n          <TxDataRow title=\"Message hash:\">{generateDataRowValue(msg.messageHash, 'hash')}</TxDataRow>\n          {safeMessage && <TxDataRow title=\"SafeMessage:\">{generateDataRowValue(safeMessage, 'hash')}</TxDataRow>}\n        </div>\n\n        {msg.preparedSignature && (\n          <div className={classNames(txDetailsCss.txSummary, txDetailsCss.multiSend)}>\n            <TxDataRow title=\"Prepared signature:\">{generateDataRowValue(msg.preparedSignature, 'hash')}</TxDataRow>\n          </div>\n        )}\n\n        <div className={txDetailsCss.multiSend}>\n          {msg.confirmations.map((confirmation, i) => (\n            <Accordion\n              variant=\"elevation\"\n              key={confirmation.signature}\n              defaultExpanded={confirmation.owner.value === wallet?.address}\n            >\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <div className={singleTxDecodedCss.summary}>\n                  <CodeIcon />\n                  <Typography>{`Confirmation ${i + 1}`}</Typography>\n                </div>\n              </AccordionSummary>\n\n              <AccordionDetails>\n                <div className={infoDetailsCss.container}>\n                  <EthHashInfo\n                    address={confirmation.owner.value || ''}\n                    name={confirmation.owner.name}\n                    customAvatar={confirmation.owner.logoUri}\n                    shortAddress={false}\n                    showCopyButton\n                    hasExplorer\n                  />\n                </div>\n                <TxDataRow title=\"Signature:\">\n                  <EthHashInfo address={confirmation.signature} showAvatar={false} showCopyButton />\n                </TxDataRow>\n              </AccordionDetails>\n            </Accordion>\n          ))}\n        </div>\n      </div>\n      <div className={txDetailsCss.txSigners}>\n        <MsgSigners msg={msg} />\n        {wallet && !isConfirmed && (\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" gap={1} mt={2}>\n            <SignMsgButton msg={msg} />\n          </Box>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default MsgDetails\n","import { Box, SvgIcon } from '@mui/material'\nimport type { SafeMessage } from '@safe-global/safe-gateway-typescript-sdk'\nimport RequiredIcon from '@/public/images/messages/required.svg'\nimport ImageFallback from '@/components/common/ImageFallback'\nimport txTypeCss from '@/components/transactions/TxType/styles.module.css'\nimport { isEIP712TypedData } from '@/utils/safe-messages'\n\nconst FALLBACK_LOGO_URI = '/images/transactions/custom.svg'\nconst MAX_TRIMMED_LENGTH = 20\n\nconst getMessageName = (msg: SafeMessage) => {\n  if (msg.name != null) return msg.name\n\n  if (isEIP712TypedData(msg.message)) {\n    return msg.message.domain?.name || ''\n  }\n\n  const firstLine = msg.message.split('\\n')[0]\n  let trimmed = firstLine.slice(0, MAX_TRIMMED_LENGTH)\n  if (trimmed.length < firstLine.length) {\n    trimmed += '…'\n  }\n  return trimmed\n}\n\nconst MsgType = ({ msg }: { msg: SafeMessage }) => {\n  return (\n    <Box className={txTypeCss.txType}>\n      {msg.logoUri ? (\n        <ImageFallback\n          src={msg.logoUri || FALLBACK_LOGO_URI}\n          fallbackSrc={FALLBACK_LOGO_URI}\n          alt=\"Message type\"\n          width={16}\n          height={16}\n        />\n      ) : (\n        <SvgIcon component={RequiredIcon} viewBox=\"0 0 32 32\" fontSize=\"small\" />\n      )}\n      {getMessageName(msg)}\n    </Box>\n  )\n}\n\nexport default MsgType\n","import { useAppSelector } from '@/store'\nimport { selectPendingSafeMessageByHash } from '@/store/pendingSafeMessagesSlice'\n\nconst useIsSafeMessagePending = (messageHash: string): boolean => {\n  return useAppSelector((state) => selectPendingSafeMessageByHash(state, messageHash))\n}\n\nexport default useIsSafeMessagePending\n","import { SafeMessageStatus } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { SafeMessage } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport useIsSafeMessagePending from './useIsSafeMessagePending'\nimport useWallet from '../wallets/useWallet'\n\nconst ConfirmingStatus = 'CONFIRMING'\nconst AwaitingConfirmationsStatus = 'AWAITING_CONFIRMATIONS'\n\ntype SafeMessageLocalStatus = SafeMessageStatus | typeof ConfirmingStatus | typeof AwaitingConfirmationsStatus\n\nconst STATUS_LABELS: { [_key in SafeMessageLocalStatus]: string } = {\n  [ConfirmingStatus]: 'Confirming',\n  [AwaitingConfirmationsStatus]: 'Awaiting confirmations',\n  [SafeMessageStatus.CONFIRMED]: 'Confirmed',\n  [SafeMessageStatus.NEEDS_CONFIRMATION]: 'Needs confirmation',\n}\n\nconst useSafeMessageStatus = (msg: SafeMessage) => {\n  const isPending = useIsSafeMessagePending(msg.messageHash)\n  const wallet = useWallet()\n\n  if (isPending) {\n    return STATUS_LABELS[ConfirmingStatus]\n  }\n\n  const hasWalletSigned = wallet && msg.confirmations.some(({ owner }) => owner.value === wallet.address)\n  const isConfirmed = msg.status === SafeMessageStatus.CONFIRMED\n  if (hasWalletSigned && !isConfirmed) {\n    return STATUS_LABELS[AwaitingConfirmationsStatus]\n  }\n\n  return STATUS_LABELS[msg.status]\n}\n\nexport default useSafeMessageStatus\n","import { Box, CircularProgress, type Palette, Typography } from '@mui/material'\nimport type { ReactElement } from 'react'\nimport { SafeMessageStatus } from '@safe-global/safe-gateway-typescript-sdk'\nimport type { SafeMessage } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport DateTime from '@/components/common/DateTime'\nimport MsgType from '@/components/safe-messages/MsgType'\nimport SignMsgButton from '@/components/safe-messages/SignMsgButton'\nimport useSafeMessageStatus from '@/hooks/messages/useSafeMessageStatus'\nimport TxConfirmations from '@/components/transactions/TxConfirmations'\n\nimport css from '@/components/transactions/TxSummary/styles.module.css'\nimport useIsSafeMessagePending from '@/hooks/messages/useIsSafeMessagePending'\nimport { isEIP712TypedData } from '@/utils/safe-messages'\n\nconst getStatusColor = (value: SafeMessageStatus, palette: Palette): string => {\n  switch (value) {\n    case SafeMessageStatus.CONFIRMED:\n      return palette.success.main\n    case SafeMessageStatus.NEEDS_CONFIRMATION:\n      return palette.warning.main\n    default:\n      return palette.text.primary\n  }\n}\n\nconst MsgSummary = ({ msg }: { msg: SafeMessage }): ReactElement => {\n  const { confirmationsSubmitted, confirmationsRequired } = msg\n  const txStatusLabel = useSafeMessageStatus(msg)\n  const isConfirmed = msg.status === SafeMessageStatus.CONFIRMED\n  const isPending = useIsSafeMessagePending(msg.messageHash)\n  let type = ''\n  if (isEIP712TypedData(msg.message)) {\n    type = (msg.message as unknown as { primaryType: string }).primaryType\n  }\n\n  return (\n    <Box className={[css.gridContainer, css.message].join(' ')}>\n      <Box gridArea=\"type\">\n        <MsgType msg={msg} />\n      </Box>\n\n      <Box gridArea=\"info\">{type || 'Signature'}</Box>\n\n      <Box gridArea=\"date\" className={css.date}>\n        <DateTime value={msg.modifiedTimestamp} />\n      </Box>\n\n      <Box gridArea=\"confirmations\">\n        {confirmationsRequired > 0 && (\n          <TxConfirmations\n            submittedConfirmations={confirmationsSubmitted}\n            requiredConfirmations={confirmationsRequired}\n          />\n        )}\n      </Box>\n\n      <Box gridArea=\"status\">\n        {isConfirmed || isPending ? (\n          <Typography\n            variant=\"caption\"\n            fontWeight=\"bold\"\n            display=\"flex\"\n            alignItems=\"center\"\n            gap={1}\n            sx={{ color: ({ palette }) => getStatusColor(msg.status, palette) }}\n          >\n            {isPending && <CircularProgress size={14} color=\"inherit\" />}\n\n            {txStatusLabel}\n          </Typography>\n        ) : (\n          <SignMsgButton msg={msg} compact />\n        )}\n      </Box>\n    </Box>\n  )\n}\n\nexport default MsgSummary\n","import { Accordion, AccordionDetails, AccordionSummary, Box } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport type { ReactElement } from 'react'\nimport type { SafeMessage } from '@safe-global/safe-gateway-typescript-sdk'\nimport { ErrorBoundary } from '@sentry/react'\n\nimport MsgDetails from '@/components/safe-messages/MsgDetails'\nimport MsgSummary from '@/components/safe-messages/MsgSummary'\n\nimport txListItemCss from '@/components/transactions/TxListItem/styles.module.css'\n\nconst ExpandableMsgItem = ({ msg, expanded = false }: { msg: SafeMessage; expanded?: boolean }): ReactElement => {\n  return (\n    <Accordion\n      defaultExpanded={expanded}\n      disableGutters\n      elevation={0}\n      className={txListItemCss.accordion}\n      sx={{ border: 'none', '&:before': { display: 'none' } }}\n    >\n      <AccordionSummary\n        data-testid=\"message-item\"\n        expandIcon={<ExpandMoreIcon />}\n        sx={{ justifyContent: 'flex-start', overflowX: 'auto' }}\n      >\n        <MsgSummary msg={msg} />\n      </AccordionSummary>\n\n      <AccordionDetails sx={{ padding: 0 }}>\n        <ErrorBoundary fallback={<Box sx={{ p: 2 }}>Failed to render message details</Box>}>\n          <MsgDetails msg={msg} />\n        </ErrorBoundary>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nexport default ExpandableMsgItem\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3Fkdw\",\"iconCircle\":\"styles_iconCircle__GFs_w\"};","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgCreated = function SvgCreated(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15Z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-background-fill\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M9 7H11C11.5523 7 12 7.44772 12 8C12 8.55228 11.5523 9 11 9H9V11C9 11.5523 8.55228 12 8 12C7.44772 12 7 11.5523 7 11V9H5C4.44772 9 4 8.55228 4 8C4 7.44772 4.44772 7 5 7H7V5C7 4.44772 7.44772 4 8 4C8.55228 4 9 4.44772 9 5V7Z\"\n  })));\n};\nexport default SvgCreated;","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgSigned = function SvgSigned(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15Z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-background-fill\",\n    d: \"M7.68894 8.54156L6.18321 7.13278C5.77992 6.75545 5.14711 6.7765 4.76978 7.17979C4.39245 7.58308 4.4135 8.2159 4.8168 8.59322L7.0378 10.6712C7.4352 11.043 8.05698 11.0288 8.43694 10.6392L11.3049 7.69817C11.6905 7.30277 11.6826 6.66965 11.2872 6.28406C10.8918 5.89848 10.2587 5.90643 9.87307 6.30183L7.68894 8.54156Z\"\n  })));\n};\nexport default SvgSigned;"],"names":["address","BlockedAddress","featureTitle","onClose","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","displayAddress","shortenAddress","router","useRouter","Disclaimer","title","subtitle","content","onAccept","push","handleAccept","pathname","AppRoutes","home","query","buttonText","div","className","css","Paper","sx","maxWidth","Stack","padding","gap","display","alignItems","palette","borderBottom","border","light","Typography","color","Box","SvgIcon","component","InfoIcon","inheritViewBox","fontSize","variant","fontWeight","Divider","justifyContent","pt","pb","Button","size","px","onClick","message","walletAddress","isSafeOwner","useIsSafeOwner","confirmations","every","useIsSafeMessageSignableBy","owner","value","msg","compact","SignMsgButton","wallet","useWallet","isSignable","setTxFlow","useContext","TxModalContext","e","stopPropagation","SignMessageFlow","CheckWallet","Tooltip","isOk","span","Track","MESSAGE_EVENTS","SIGN","disabled","py","undefined","isConfirmed","status","MsgDetails","SafeMessageStatus","CONFIRMED","safeMessage","useMemo","generateSafeMessageMessage","verifyingContract","isEIP712TypedData","domain","txDetailsCss","MsgShareLink","safeMessageHash","messageHash","InfoDetails","EthHashInfo","proposedBy","name","customAvatar","logoUri","shortAddress","showCopyButton","hasExplorer","NamedAddressInfo","CopyButton","text","JSON","stringify","ErrorBoundary","fallback","DecodedMsg","TxDataRow","formatDateTime","creationTimestamp","modifiedTimestamp","generateDataRowValue","preparedSignature","classNames","map","confirmation","i","Accordion","defaultExpanded","AccordionSummary","expandIcon","ExpandMoreIcon","singleTxDecodedCss","CodeIcon","AccordionDetails","infoDetailsCss","signature","showAvatar","MsgSigners","mt","FALLBACK_LOGO_URI","getMessageName","firstLine","split","trimmed","slice","MAX_TRIMMED_LENGTH","length","MsgType","txTypeCss","ImageFallback","src","fallbackSrc","alt","width","height","RequiredIcon","viewBox","useAppSelector","selectPendingSafeMessageByHash","state","ConfirmingStatus","useIsSafeMessagePending","AwaitingConfirmationsStatus","STATUS_LABELS","NEEDS_CONFIRMATION","isPending","useSafeMessageStatus","hasWalletSigned","some","getStatusColor","success","main","warning","primary","MsgSummary","confirmationsSubmitted","confirmationsRequired","txStatusLabel","type","primaryType","join","gridArea","DateTime","TxConfirmations","submittedConfirmations","requiredConfirmations","CircularProgress","expanded","ExpandableMsgItem","disableGutters","elevation","txListItemCss","data-testid","overflowX","p"],"sourceRoot":"","ignoreList":[]}